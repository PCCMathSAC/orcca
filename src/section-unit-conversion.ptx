<?xml version="1.0" encoding="UTF-8" ?>
<!-- *********************************************************************-->
<!-- Copyright 2016-2019                                                  -->
<!-- Portland Community College                                           -->
<!--                                                                      -->
<!-- This file is part of Open Resources for Community College Algebra    -->
<!-- (ORCCA).                                                             -->
<!--                                                                      -->
<!-- Open Resources for Community College Algebra is licensed under a     -->
<!-- Creative Commons Attribution 4.0 International License.              -->
<!--                                                                      -->
<!-- Under this license, any user of this textbook or the textbook        -->
<!-- contents must provide proper attribution as follows.                 -->
<!--                                                                      -->
<!-- If you redistribute all or part of this textbook, then you must      -->
<!-- include in every digital format page view (including but not         -->
<!-- limited to EPUB, PDF, and HTML) and on every physical printed page   -->
<!-- the following attribution:                                           -->
<!--                                                                      -->
<!-- Original source material, products with readable and accessible      -->
<!-- math content, and other information freely available at              -->
<!-- pcc.edu/orcca.                                                       -->
<!--                                                                      -->
<!-- If you redistribute all or part of this textbook, then you must      -->
<!-- reproduce any math content (such as math expressions and equations)  -->
<!-- in a readable manner, and offer math content in at least one web     -->
<!-- accessible manner.                                                   -->
<!--                                                                      -->
<!-- The Portland Community College name, Portland Community College      -->
<!-- logo, ORCCA name, Open Resources for Community College Algebra name, -->
<!-- ORCCA logo, and front and back cover designs are not subject to the  -->
<!-- Creative Commons license and may not be reproduced without the       -->
<!-- prior and express written consent of Portland Community College.     -->
<!--                                                                      -->
<!-- For questions regarding this license, please contact                 -->
<!-- orcca-group@pcc.edu.                                                 -->
<!-- *********************************************************************-->
<section xml:id="section-unit-conversion">
  <title>Unit Conversion</title>
  <objectives>
    <title>PCC Course Content and Outcome Guide</title>
    <ul>
      <li>
        <xref ref="ccog-unit-conversion" text="local">MTH 65 CCOG</xref>
      </li>
    </ul>
  </objectives>

  <introduction>
    <aside>
      <title>Unit Conversion References</title>
      <p>
        This textbook provides unit conversions in <xref ref="appendix-unit-conversions">Appendix</xref> for your convenience.
        But you may also find unit conversion facts in many other places, including the internet.
      </p>
    </aside>

    <p>
      Unit conversion is a systematic method for converting from one kind of unit of measurement to another.
      It is used extensively in chemistry and other health- or science-related fields.
      It is a valuable skill to learn, and necessary for success in many applications.
    </p>

    <figure>
      <caption>Alternative Video Lesson</caption>
      <video youtubeplaylist="PLmuZCPhWPt-dw7L8cAsmxjAYg0NVWjDmz"/>
    </figure>
  </introduction>

  <subsection>
    <title>Unit Ratios</title>

    <example xml:id="example-stair-rise">
      <sidebyside widths="65% 29%" margins="0%">
        <p>
          When building a staircase, a step typically has a rise of <m>7</m><nbsp/>inches (<quantity><mag>7</mag><unit base="inch"/></quantity>).
          An inch is a unit of length in the imperial unit system, used in the United States, Canada, the United Kingdom, and a few other places.
          Many parts of the world do not use this unit of measurement, and the people there do not have a sense of how long <m>7</m> inches is.
          Instead, much of the world would measure a length like this using centimeters
          (<quantity><unit prefix="centi" base="meter"/></quantity>).
          How many centimeters is <m>7</m><nbsp/>inches?
        </p>
        <image>
          <latex-image>
            \begin{tikzpicture}[x=0.7mm,y=0.7mm]
              \foreach \x in {0,...,3}
                \draw [fill=firstcolor!20] (10*\x, 12*\x) --++ (-30,15) --++ (0,7) --++ (30,-15);
              \draw (0,0) --++ (0,7) --++ (10,5) --++ (0,7) --++ (10,5) --++ (0,7) --++ (10,5) --++ (0,7) --++ (10,5);
              \draw (-30,15) --++ (0,7) --++ (10,5) --++ (0,7) --++ (10,5) --++ (0,7) --++ (10,5) --++ (0,7) --++ (10,5);
              \draw (0,0) -- (40,20) --++ (0,28) --++ (-30,15);
              \node[left] at (-30,18.5) {7\,in};
              \draw (-30,15) --++ (-7,0);
              \draw (-30,22) --++ (-7,0);
              \node[left] at (0,54.5) {?\,cm};
              \draw (0,51) --++ (-8,0);
              \draw (0,58) --++ (-8,0);
            \end{tikzpicture}
          </latex-image>
        </image>
      </sidebyside>

      <p>
        To convert from one unit of measurement to another (like inches to centimeters),
        we use what are called unit ratios. A <term>unit ratio</term>
            <idx><h>unit ratio</h></idx>
        is a ratio (or fraction) where the numerator and denominator are quantities <em>with units</em>
        that equal each other. They equal each other as measurements, but they are measured with different units.
        For example, <xref ref="appendix-unit-conversions">Appendix</xref> tells us that <m>1</m><nbsp/>inch
        is equal to <m>2.54</m><nbsp/>centimeters.
        Knowing that, we can build the unit ratios <m>\frac{1\,\text{in}}{2.54\,\text{cm}}</m>
        and <m>\frac{2.54\,\text{cm}}{1\,\text{in}}</m>. Each of these unit ratios are equivalent to <m>1</m>,
        because their numerator equals their denominator.
      </p>

      <p>
        With a unit ratio, we can work out a conversion by taking what we would like to convert
        (<quantity><mag>7</mag><unit base="inch"/></quantity>) and multiplying by a unit ratio in such a way that
        the <q>old</q> units cancel and the <q>new</q> units remain.
        <md>
          <mrow>7\,\text{in}\amp=\frac{7\,\text{in}}{1}\amp\amp\text{We are about to do fraction-like multiplication.}</mrow>
          <mrow>\amp=\frac{7\,\text{in}}{1}\cdot\frac{2.54\,\text{cm}}{1\,\text{in}}\amp\amp1\,\text{in equals }2.54\,\text{cm.}</mrow>
          <mrow>\amp=\frac{7\,\cancelhighlight{\text{in}}}{1}\cdot\frac{2.54\,\text{cm}}{1\,\cancelhighlight{\text{in}}}\amp\amp\text{Units may now cancel.}</mrow>
          <mrow>\amp=\frac{7}{1}\cdot\frac{2.54\,\text{cm}}{1}</mrow>
          <mrow>\amp=7\cdot2.54\,\text{cm}</mrow>
          <mrow>\amp=17.78\,\text{cm}</mrow>
        </md>
      </p>

      <p>
        So <m>7</m><nbsp/>inches is equal to <m>17.78</m><nbsp/>centimeters.
        In practice, anyone talking about the rise of a stair might simply round to
        <quantity><mag>18</mag><unit prefix="centi" base="meter"/></quantity>.
      </p>

      <p>
        Note there was another unit ratio, <m>\frac{1\,\text{in}}{2.54\,\text{cm}}</m>, but using that would not have been helpful,
        since it would not have arranged units such that the inches canceled.
      </p>
    </example>

    <remark>
      <p>
        When you are comfortable,
        you might do the steps from <xref ref="example-stair-rise">Example</xref> on one line, like:
        <me>7\,\text{in}=\frac{7\,\cancelhighlight{\text{in}}}{1}\cdot\frac{2.54\,\text{cm}}{1\,\cancelhighlight{\text{in}}}=\frac{7}{1}\cdot\frac{2.54}{1}\,\text{cm}=17.78\,\text{cm}</me>
        The examples in this section will continue to show the steps completely drawn out,
        to give a better sense of what you would write first, second, and so on.
      </p>
    </remark>

<!-- todo: fluidounce doesn't render properly. -->

    <example>
      <p>
        A canned beverage typically contains <m>12</m> fluid ounces (<quantity><mag>12</mag><unit base="fluidounce"/></quantity>).
        A fluid ounce is a unit of volume used in the United States.
        (The United Kingdom also has a fluid ounce, but it is a slightly different amount.)
        In the rest of the world, people do not have a sense of how much <m>12</m> fluid ounces is.
        Most of the world would measure a canned beverage's volume using milliliters
        (<quantity><unit prefix="milli" base="liter"/></quantity>).
        How many milliliters is <m>12</m> fluid ounces?
      </p>

      <p>
        <xref ref="appendix-unit-conversions">Appendix</xref> tells us that
        <quantity><mag>1</mag><unit base="fluidounce"/></quantity> is (almost) equal to
        <quantity><mag>29.57</mag><unit prefix="milli" base="liter"/></quantity>.
        Knowing that, we can build the unit ratios <m>\frac{1\,\text{fl}\,\text{oz}}{29.57\,\text{mL}}</m>
        and <m>\frac{29.57\,\text{mL}}{1\,\text{fl}\,\text{oz}}</m>. Each of these unit ratios are (almost) equivalent to <m>1</m>,
        because their numerator (almost) equals their denominator.
      </p>

      <p>
        Using the appropriate unit ratio to enable cancellation of fluid ounces:
        <md>
          <mrow>12\,\text{fl}\,\text{oz}\amp=\frac{12\,\text{fl}\,\text{oz}}{1}\amp\amp\text{We are about to do fraction-like multiplication.}</mrow>
          <mrow>\amp\approx\frac{12\,\text{fl}\,\text{oz}}{1}\cdot\frac{29.57\,\text{mL}}{1\,\text{fl}\,\text{oz}}\amp\amp1\,\text{fl}\,\text{oz approximately equals }29.57\,\text{mL.}</mrow>
          <mrow>\amp=\frac{12\,\cancelhighlight{\text{fl}\,\text{oz}}}{1}\cdot\frac{29.57\,\text{mL}}{1\,\cancelhighlight{\text{fl}\,\text{oz}}}\amp\amp\text{Units may now cancel.}</mrow>
          <mrow>\amp=\frac{12}{1}\cdot\frac{29.57\,\text{mL}}{1}</mrow>
          <mrow>\amp=12\cdot29.57\,\text{mL}</mrow>
          <mrow>\amp\approx354.8\,\text{mL}</mrow>
        </md>
      </p>
      <p>
        So <m>12</m> fluid ounces is <em>approximately</em> equal to <m>354.8</m> milliliters.
        In practice, you might round to
        <quantity><mag>355</mag><unit prefix="milli" base="liter"/></quantity>.
      </p>

    </example>

    <p>
      Notice that each conversion fact from <xref ref="appendix-unit-conversions">Appendix</xref>
      gives two possible unit ratios.
      Deciding which one to use will depend on where units need to be placed in order to cancel the appropriate units.
      In unit conversion, we multiply ratios together
      and cancel common units the same way we can cancel common factors when multiplying fractions.
    </p>

    <example>
      <statement>
        <p>
          It's <m>1760</m> feet (<quantity><mag>1760</mag><unit base="foot"/></quantity>) to walk from Jonah's house to where he works.
          How many miles is that?
        </p>
      </statement>
      <solution>
        <p>
          Since we are converting feet to miles,
          we use the conversion fact that there are <m>5280</m> feet in <m>1</m> mile.
          In this conversion, we need to use a unit ratio that will allow the feet units to cancel.
          So we need to use <m>\frac{1\,\text{mi}}{5280\,\text{ft}}</m>.
          This is different from previous examples in that the <m>1</m> is in the numerator this time.
          But the process is not all that different.
          <md>
            <mrow>1760\,\text{ft}\amp=\frac{1760\,\text{ft}}{1}\amp\amp\text{We are about to do fraction-like multiplication.}</mrow>
            <mrow>\amp=\frac{1760\,\text{ft}}{1}\cdot\frac{1\,\text{mi}}{5280\,\text{ft}}\amp\amp1\,\text{mi equals }5280\,\text{ft.}</mrow>
            <mrow>\amp=\frac{1760\,\cancelhighlight{\text{ft}}}{1}\cdot\frac{1\,\text{mi}}{5280\,\cancelhighlight{\text{ft}}}\amp\amp\text{Units may now cancel.}</mrow>
            <mrow>\amp=\frac{1760}{1}\cdot\frac{1\,\text{mi}}{5280}</mrow>
            <mrow>\amp=\frac{1760}{5280}\,\text{mi}</mrow>
            <mrow>\amp=\frac{1}{3}\,\text{mi}\approx0.3333\,\text{mi}</mrow>
          </md>
        </p>
        <p>
          So Jonah walks <m>\frac{1}{3}</m> of a mile, or about <quantity><mag>0.3333</mag><unit base="mile"/></quantity>,
          to get from his house to where he works.
        </p>
      </solution>
    </example>

    <exercise>
      <webwork reseed="1">
          <pg-code>
            $feet = NumberWithUnits(5,'ft');
            # Make units parser require feet, not allow inches
            $evaluator = $feet->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } ('ft','feet','foot');

                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
          </pg-code>
        <statement>
          <p>
            Convert <m>60</m> inches to feet.
          </p>
          <p>
            <var name="$evaluator" width="10"/>
          </p>
        </statement>
        <solution>
          <p>
            We start by writing what it is that we are converting as a ratio, by placing it over a <m>1</m>.
            This is similar to writing a whole number as a fraction when we want to multiply it by a fraction.
            Next we multiply that ratio by a unit ratio, one that will have inches in the denominator
            so that inches will cancel.
            Multiply what's left just as we multiply fractions (multiply the numerators together and multiply the denominators together),
            including the units, and simplify by dividing.
            <md>
              <mrow>60\,\text{in}\amp=\frac{60\,\text{in}}{1}\amp\amp\text{We are about to do fraction-like multiplication.}</mrow>
              <mrow>\amp=\frac{60\,\text{in}}{1}\cdot\frac{1\,\text{ft}}{12\,\text{in}}\amp\amp1\,\text{ft equals }12\,\text{in.}</mrow>
              <!-- todo: these \cancel commands aren't rendering properly -->
              <mrow>\amp=\frac{60\,\cancel{\text{in}}}{1}\cdot\frac{1\,\text{ft}}{12\,\cancel{\text{in}}}\amp\amp\text{Units may now cancel.}</mrow>
              <mrow>\amp=\frac{60}{1}\cdot\frac{1\,\text{ft}}{12}</mrow>
              <mrow>\amp=\frac{60}{12}\,\text{ft}</mrow>
              <mrow>\amp=5\,\text{ft}</mrow>
            </md>
          </p>
          <p>
            We find that <m>60</m> inches is equivalent to <m>5</m> feet.
          </p>
        </solution>
      </webwork>
    </exercise>

    <example>
      <title>Why Do We Convert Units?</title>
      <p>
        Converting from one unit to another can be necessary when you are given information where the units don't quite match.
        Cassidy was driving at a speed of <quantity><mag>32</mag><unit base="mileperhour"/></quantity> for seven minutes.
        How far did they travel in that time span?
      </p>
      <p>
        Normally, to find a distance traveled, you would multiply speed by how much time passed.
        For example if Cassidy had been driving <quantity><mag>50</mag><unit base="mileperhour"/></quantity> for two hours,
        we would find <m>50\cdot2=100</m>, and conclude they had driven <m>100</m> miles.
      </p>
      <p>
        But in this example, Cassidy's speed is <m>32</m> miles per <em>hour</em>, but the time elapsed is seven <em>minutes</em>.
        The time units do not match. It will help to convert the <quantity><mag>7</mag><unit base="minute"/></quantity>
        into hours. So let's do that.
        <md>
          <mrow>7\,\text{min}\amp=\frac{7\,\text{min}}{1}\amp\amp\text{We are about to do fraction-like multiplication.}</mrow>
          <mrow>\amp=\frac{7\,\text{min}}{1}\cdot\frac{1\,\text{h}}{60\,\text{min}}\amp\amp1\,\text{h equals }60\,\text{min.}</mrow>
          <mrow>\amp=\frac{7\,\cancelhighlight{\text{min}}}{1}\cdot\frac{1\,\text{h}}{60\,\cancelhighlight{\text{min}}}\amp\amp\text{Units may now cancel.}</mrow>
          <mrow>\amp=\frac{7}{1}\cdot\frac{1\,\text{h}}{60}</mrow>
          <mrow>\amp=\frac{7}{60}\,\text{h}</mrow>
          <mrow>\amp\approx0.1167\,\text{h}</mrow>
        </md>
      </p>
      <p>
        Now we can multiply Cassidy's speed (<quantity><mag>32</mag><unit base="mileperhour"/></quantity>)
        by their elapsed time (<m>\frac{7}{60}\,\text{h}</m>).
        We find <m>32\cdot\frac{7}{60}\approx3.733</m>, so Cassidy has traveled about <m>3.733</m> miles.
      </p>
      <p>
        Actually we can do this multiplication <em>with units</em> and the units will cancel appropriately:
        <md>
          <mrow>32\,\frac{\text{mi}}{\text{h}}\cdot\frac{7}{60}\,\text{h}\amp=\frac{32\,\text{mi}}{1\,\text{h}}\cdot\frac{7\,\text{h}}{60}</mrow>
          <mrow>\amp=\frac{32\,\text{mi}}{1\,\cancelhighlight{\text{h}}}\cdot\frac{7\,\cancelhighlight{\text{h}}}{60}</mrow>
          <mrow>\amp=\frac{32\cdot7}{60}\,\text{mi}</mrow>
          <mrow>\amp\approx3.733\,\text{mi}</mrow>
        </md>
      </p>
    </example>

    <exercise>
      <webwork>
          <pg-code>
            $ans = NumberWithUnits(4.557,'lb');
          </pg-code>
        <statement>
          <p>
            The density of oil is <m>6.9</m> pounds per gallon.
            You have a 2.5-liter bottle of oil. How much does this much oil weigh?
            (To find weight, multiply density with volume when the units match.)
          </p>
          <p>
            <var name="$ans" width="20"/>
          </p>
        </statement>
        <solution>
          <p>
            The density is in pounds per <em>gallon</em>, but the volume is in <em>liters</em>.
            So first let's convert the <quantity><mag>2.5</mag><unit base="liter"/></quantity> to gallons.
            <md>
              <mrow>2.5\,\text{L}\amp=\frac{2.5\,\text{L}}{1}\amp\amp\text{We are about to do fraction-like multiplication.}</mrow>
              <mrow>\amp\approx\frac{2.5\,\text{L}}{1}\cdot\frac{1\,\text{gal}}{3.785\,\text{L}}\amp\amp1\,\text{gal approximately equals }3.785\,\text{L.}</mrow>
              <mrow>\amp=\frac{2.5\,\cancel{\text{L}}}{1}\cdot\frac{1\,\text{gal}}{3.785\,\cancel{\text{L}}}\amp\amp\text{Units may now cancel.}</mrow>
              <mrow>\amp=\frac{2.5}{1}\cdot\frac{1\,\text{gal}}{3.785}</mrow>
              <mrow>\amp=\frac{2.5}{3.785}\,\text{gal}</mrow>
              <mrow>\amp\approx0.6605\,\text{gal}</mrow>
            </md>
          </p>
          <p>
            Now we can multiply the density (<quantity><mag>6.9</mag><unit base="pound"/><per base="gallon"/></quantity>)
            by the volume (<m>\approx0.6605\,\text{gal}</m>).
            We find <m>6.9\cdot0.6605\approx4.557</m>, so the oil weighs about <m>4.557</m> pounds.
          </p>
          <p>
            With units:
            <md>
              <mrow>6.9\,\frac{\text{lb}}{\text{gal}}\cdot0.6605\,\text{gal}\amp=\frac{6.9\,\text{lb}}{1\,\text{gal}}\cdot\frac{0.6605\,\text{gal}}{1}</mrow>
              <mrow>\amp=\frac{6.9\,\text{lb}}{1\,\cancel{\text{gal}}}\cdot\frac{0.6605\,\cancel{\text{gal}}}{1}</mrow>
              <mrow>\amp=6.9\cdot0.6605\,\text{lb}</mrow>
              <mrow>\amp\approx4.557\,\text{lb}</mrow>
            </md>
          </p>
        </solution>
      </webwork>
    </exercise>
  </subsection>

  <subsection>
    <title>Using Multiple Unit Ratios</title>

    <p>
      In previous examples, we used only one unit ratio to make a conversion.
      However, sometimes there is a need to use more than one unit ratio in a conversion.
      This may happen when your reference guide for conversions does not directly tell you how to convert from one unit to another.
      In those situations, we'll have to consider the conversion facts that are available and then make a plan.
    </p>

    <example>
      <statement>
        <p>
          Convert <m>350</m> yards to miles.
        </p>
      </statement>

      <solution>
        <p>
          In <xref ref="appendix-unit-conversions">Appendix</xref>,
          there is not a conversion that relates yards to miles.
          But notice that we can convert yards to feet (using the fact that one yard is three feet)
          and then we can convert feet to miles (using the fact that one mile is <m>5280</m> feet).
          So we will use two unit ratios.
          The unit ratio <m>\frac{3\,\text{ft}}{1\,\text{yd}}</m> can be used
          to cancel the yards in <quantity><mag>350</mag><unit base="yard"/></quantity>.
          Then the unit ratio <m>\frac{1\,\text{mi}}{5280\,\text{ft}}</m> can be used
          to cancel the feet that are left over from the first conversion.
        </p>
        <p>
          <md>
            <mrow>350\,\text{yd}\amp=\frac{350\,\text{yd}}{1}\amp\amp\text{We are about to do fraction-like multiplication.}</mrow>
            <mrow>\amp=\frac{350\,\text{yd}}{1}\cdot\frac{3\,\text{ft}}{1\,\text{yd}}\cdot\frac{1\,\text{mi}}{5280\,\text{ft}}\amp\amp\text{Both unit ratios are needed.}</mrow>
            <mrow>\amp=\frac{350\,\cancelhighlight{\text{yd}}}{1}\cdot\frac{3\,\secondcancelhighlight{\text{ft}}}{1\,\cancelhighlight{\text{yd}}}\cdot\frac{1\,\text{mi}}{5280\,\secondcancelhighlight{\text{ft}}}\amp\amp\text{Units may now cancel.}</mrow>
            <mrow>\amp=\frac{350}{1}\cdot\frac{3}{1}\cdot\frac{1\,\text{mi}}{5280}</mrow>
            <mrow>\amp=\frac{350\cdot3}{5280}\,\text{mi}</mrow>
            <mrow>\amp\approx0.1989\,\text{mi}</mrow>
          </md>
        </p>
        <p>
          So <m>350</m> yards is about <m>0.1989</m> miles.
        </p>
      </solution>
    </example>

    <exercise>
      <webwork>
          <pg-code>
            $hours = NumberWithUnits(3240,'h');
            # Make units parser require hours, not allow months, etc
            $evaluator = $hours->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } ('h','hour','hours', 'hr');

                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
          </pg-code>
        <statement>
          <p>
            Convert <m>4.5</m> months into hours.
          </p>
          <p>
            <var name="$evaluator" width="20"/>
          </p>
        </statement>

        <solution>
          <p>
            Notice that we can convert months to days (using the fact that one month is approximately <m>30</m> days)
            and then we can convert days to hours (using the fact that one day is <m>24</m> hours).
          </p>
          <p>
            <md>
              <mrow>4.5\,\text{mo}\amp=\frac{4.5\,\text{mo}}{1}\amp\amp\text{We are about to do fraction-like multiplication.}</mrow>
              <mrow>\amp\approx\frac{4.5\,\text{mo}}{1}\cdot\frac{30\,\text{d}}{1\,\text{mo}}\cdot\frac{24\,\text{h}}{1\,\text{d}}\amp\amp\text{Two unit ratios are needed.}</mrow>
              <mrow>\amp=\frac{4.5\,\cancel{\text{mo}}}{1}\cdot\frac{30\,\cancel{\text{d}}}{1\,\cancel{\text{mo}}}\cdot\frac{24\,\text{h}}{1\,\cancel{\text{d}}}\amp\amp\text{Units may now cancel.}</mrow>
              <mrow>\amp=\frac{4.5}{1}\cdot\frac{30}{1}\cdot\frac{24\,\text{h}}{1}</mrow>
              <mrow>\amp=4.5\cdot30\cdot24\,\text{h}</mrow>
              <mrow>\amp=3240\,\text{h}</mrow>
            </md>
          </p>
          <p>
            So <m>4.5</m> months is about <m>3240</m> hours.
          </p>
        </solution>
      </webwork>
    </exercise>

    <!-- The following are more examples from OpenStax. -->
    <!-- <p>
      Let's look at a few more examples where more than one unit ratio will be needed to make the conversion.
    </p>

    <example>
      <statement>
        <p>
          Use unit analysis to convert <quantity><mag>5</mag><unit base="pound"/></quantity> to grams.
        </p>
      </statement>
      <solution>
        <p>
          We don't have any conversion facts on the list that relate pounds to grams directly.
          However, we do have the facts that there are about <quantity><mag>2.2</mag><unit base="pound"/></quantity>
          in a kilogram, and there are <quantity><mag>1000</mag><unit base="gram"/></quantity> in a kilogram.
          So, we need two unit ratios that use those facts,
          writing the unit ratios in such a way that the <quantity><unit base="pound"/></quantity>
          will cross cancel and then the <quantity><unit prefix="kilo" base="gram"/></quantity> will cross cancel.
          <md>
            <mrow>\frac{5\,\cancelhighlight{\text{lb}}}{1}\cdot\frac{1\,\cancelhighlight{\text{kg}}}{2.2\,\cancelhighlight{\text{lb}}}\cdot\frac{1000\,\text{g}}{1\,\cancelhighlight{\text{kg}}}\approx 2273\,\text{g}</mrow>
        </md>
        </p>
      </solution>
    </example>

    <example>
      <statement>
        <p>
          Use unit analysis to convert <m>2</m> liters to fluid ounces.
        </p>
      </statement>
      <solution>
        <p>
          We don't have any conversion facts on the list that relate liters to fluid ounces directly.
          However, we do have the facts that there are about
          <quantity><mag>30</mag><unit prefix="milli" base="liter"/></quantity> in <m>1</m> fluid ounce
          and there are <quantity><mag>1000</mag><unit prefix="milli" base="liter"/></quantity> in a liter.
          So, we need two unit ratios that use those facts,
          writing the unit ratios in such a way that the liters will cross cancel
          and then the milliliters will cross cancel.
          <md>
            <mrow>\frac{2\,\cancelhighlight{\text{L}}}{1}\cdot\frac{1000\,\cancelhighlight{\text{mL}}}{1\,\cancelhighlight{\text{L}}}\cdot\frac{1\,\text{oz}}{30\,\cancelhighlight{\text{mL}}}\approx 67\,\text{oz}</mrow>
          </md>
        </p>
      </solution>
    </example>

    <example>
      <statement>
        <p>
          Use unit analysis to determine how many minutes there are in a week.
        </p>
      </statement>
      <solution>
        <p>
          For this conversion, we will use the facts that there are <m>7</m> days in a week,
          <m>24</m> hours in a day, and <m>60</m> minutes in an hour.
          We start the process by writing what we are converting, which is <m>1</m> week, as a ratio.
          <md>
            <mrow>\frac{1\,\cancelhighlight{\text{week}}}{1}\cdot\frac{7\,\cancelhighlight{\text{day}}}{1\,\cancelhighlight{\text{week}}}\cdot\frac{24\,\cancelhighlight{\text{hour}}}{1\,\cancelhighlight{\text{day}}}\cdot\frac{60\,\text{min}}{1\,\cancelhighlight{\text{hour}}}\amp=7(24)(60)\text{min}=10{,}080\,\text{ min}</mrow>
          </md>
        </p>
      </solution>
    </example> -->

  </subsection>

<subsection>
  <title>Converting Squared or Cubed Units</title>

    <p>
      When calculating the area or volume of a geometric figure,
      units of measurement are multiplied together,
      resulting in squared units (when calculating area) or cubed units (when calculating volume).
      Thus, there may be circumstances where you may need to convert either squared or cubed units.
      For example, suppose you are carpeting a room in your home and you know the square footage of the room,
      but the carpet is sold in square yards.
      In that case, you would need to convert the square feet of the room into square yards.
    </p>

   <!--  <p>
      This process isn't quite as simple as the previous conversions we have done,
      as you will see in the following examples.
    </p> -->

    <example>
      <p>
        Jin's bedroom is <m>153</m> square feet (<quantity><mag>153</mag><unit base="foot" exp="2"/></quantity>).
        How many square yards is that?
      </p>

      <p>
        We start the process the same as in the previous examples.
        That is, we write what we are converting in ratio form with a denominator of <m>1</m>.
        <md>
          <mrow>153\,\text{ft}^2\amp=\frac{153\,\text{ft}^2}{1}\amp\amp\text{We are about to do fraction-like multiplication.}</mrow>
        </md>
        Now, we do want feet to be replaced with yards, so the unit ratio <m>\frac{1\,\text{yd}}{3\,\text{ft}}</m> will be useful.
        But using it once is not enough:
        <md>
          <mrow>153\,\text{ft}^2\amp=\frac{153\,\text{ft}^2}{1}</mrow>
          <mrow>\amp=\frac{153\,\text{ft}^2}{1}\cdot\frac{1\,\text{yd}}{3\,\text{ft}}\amp\amp1\text{ yd equals }3\text{ feet.}</mrow>
        </md>
        The <quantity><unit base="foot" exp="2"/></quantity> in the first numerator do not fully cancel with the <quantity><unit base="foot"/></quantity> in the second denominator. We need to use this unit ratio <em>twice</em>.
        <md>
          <mrow>153\,\text{ft}^2\amp=\frac{153\,\text{ft}^2}{1}</mrow>
          <mrow>\amp=\frac{153\,\text{ft}^2}{1}\cdot\frac{1\,\text{yd}}{3\,\text{ft}}\cdot\frac{1\,\text{yd}}{3\,\text{ft}}\amp\amp1\text{ yd equals }3\text{ feet.}</mrow>
        </md>
        Now there is <m>\text{ft}^2</m> in the overall numerator, and <m>\text{ft}\cdot\text{ft}</m> in the overall denominator.
        They will fully cancel.
      </p>
      <p>
        Here is the complete process from the beginning.
        <md>
          <mrow>153\,\text{ft}^2\amp=\frac{153\,\text{ft}^2}{1}</mrow>
          <mrow>\amp=\frac{153\,\text{ft}^2}{1}\cdot\frac{1\,\text{yd}}{3\,\text{ft}}\cdot\frac{1\,\text{yd}}{3\,\text{ft}}</mrow>
          <mrow>\amp=\frac{153\,\cancelhighlight{\text{ft}^2}}{1}\cdot\frac{1\,\text{yd}}{3\,\cancelhighlight{\text{ft}}}\cdot\frac{1\,\text{yd}}{3\,\cancelhighlight{\text{ft}}}\amp\amp\text{Units may now cancel.}</mrow>
          <mrow>\amp=\frac{153}{1}\cdot\frac{1\,\text{yd}}{3}\cdot\frac{1\,\text{yd}}{3}</mrow>
          <mrow>\amp=\frac{153}{9}\,\text{yd}\cdot\text{yd}</mrow>
          <mrow>\amp=17\,\text{yd}^2</mrow>
        </md>
        So Jin's bedroom has <m>17</m> square yards of area.
      </p>
      <p>
        Alternatively, we can set up conversions with squared or cubed units this way:
        <md>
          <mrow>153\,\text{ft}^2\amp=\frac{153\,\text{ft}^2}{1}</mrow>
          <mrow>\amp=\frac{153\,\text{ft}^2}{1}\cdot\left(\frac{1\,\text{yd}}{3\,\text{ft}}\right)^2\amp\amp\text{The ft in the denominator will be squared.}</mrow>
          <mrow>\amp=\frac{153\,\text{ft}^2}{1}\cdot\frac{1\,\text{yd}^2}{9\,\text{ft}^2}\amp\amp\text{Using }<xref ref="fact-quotient-to-a-power-rule">Fact</xref>\text{.}</mrow>
          <mrow>\amp=\frac{153\,\cancelhighlight{\text{ft}^2}}{1}\cdot\frac{1\,\text{yd}^2}{9\,\cancelhighlight{\text{ft}^2}}\amp\amp\text{Units may now cancel.}</mrow>
          <mrow>\amp=\frac{153}{1}\cdot\frac{1\,\text{yd}^2}{9}</mrow>
          <mrow>\amp=\frac{153}{9}\,\text{yd}^2</mrow>
          <mrow>\amp=17\,\text{yd}^2</mrow>
        </md>
      </p>
      <p>
        When using this setup where the unit ratio is raised to a power,
        you must be careful to remember that <em>everything</em> inside the parentheses is raised to that power: the units and the numbers alike.
      </p>
    </example>

    <exercise>
      <webwork>
          <pg-code>
            $ccs = NumberWithUnits(1393,'cc');
            # Make units parser require hours, not allow months, etc
            $evaluator = $ccs->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } ('cc','cm^3');

                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
          </pg-code>
        <statement>
          <p>
            Convert <m>85</m> cubic inches into cubic centimeters.
          </p>
          <p>
            <var name="$evaluator" width="20"/>
          </p>
        </statement>
        <solution>
          <p>
            <md>
              <mrow>85\,\text{in}^3\amp=\frac{85\,\text{in}^3}{1}</mrow>
              <mrow>\amp=\frac{85\,\text{in}^3}{1}\cdot\left(\frac{2.54\,\text{cm}}{1\,\text{in}}\right)^3\amp\amp\text{The inches in the denominator will be cubed.}</mrow>
              <mrow>\amp=\frac{85\,\text{in}^3}{1}\cdot\frac{2.54^3\,\text{cm}^3}{1\,\text{in}^3}\amp\amp\text{Using the quotient to a power rule.}</mrow>
              <mrow>\amp=\frac{85\,\cancel{\text{in}^3}}{1}\cdot\frac{2.54^3\,\text{cm}^3}{1\,\cancel{\text{in}^3}}\amp\amp\text{Units may now cancel.}</mrow>
              <mrow>\amp=\frac{85}{1}\cdot\frac{2.54^3\,\text{cm}^3}{1}</mrow>
              <mrow>\amp=85\cdot2.54^3\,\text{cm}^3</mrow>
              <mrow>\amp\approx1393\,\text{cm}^3</mrow>
            </md>
            So <m>85</m> cubic inches is about <m>1393</m> cubic centimeters.
          </p>
        </solution>
      </webwork>
    </exercise>

  </subsection>


  <!-- This topic is not explicitly in the the PCC curriculum, so commenting it out for now. 
       The content comes from the OpenStax book. -->

  <!-- <subsection>
    <title>Density, Volume, and Mass</title>

    <p>
      The <term>density</term> of a substance is a relationship between the mass of the substance and its volume.
      In fact, it is the ratio of its mass to each unit of its volume
      (often measured in <quantity><unit prefix="milli" base="liter"/></quantity> or <quantity><unit base="cubiccentimeter"/></quantity>,
      which stands for cubic centimeters).
      Thus, the ratio that represents the density of a substance
      can be used as a unit ratio in the unit analysis process,
      as will be demonstrated in the next few examples.
    </p>

    <example>
      <statement>
        <p>
          What is the mass of a block measuring a volume of
          <quantity><mag>2.8</mag><unit base="cubiccentimeter"/></quantity>
          and density of <quantity><mag>2.54</mag><unit base="gram"/><per base="cubiccentimeter"/></quantity>?
        </p>
      </statement>
      <solution>
        <p>
          Since the density of the block is given to be
          <quantity><mag>2.54</mag><unit base="gram"/><per base="cubiccentimeter"/></quantity>,
          this tells us that every <m>2.54</m> grams of mass of the block
          has a volume of <quantity><mag>1</mag><unit base="cubiccentimeter"/></quantity>
          or <m>1</m> cubic centimeter.
          We can think of this as a conversion fact that can be used to write a unit ratio.
          We can then use this unit ratio in the unit analysis process
          to convert the given volume of <quantity><mag>2.8</mag><unit base="cubiccentimeter"/></quantity>
          into its equivalent mass, as shown below.
          <md>
            <mrow>\frac{2.8\,\cancelhighlight{\text{cc}}}{1}\cdot\frac{2.54\,\text{g}}{1\,\cancelhighlight{\text{cc}}}\amp=(2.8)(2.54)\,\text{g}</mrow>
            <mrow>\amp=7.112]\,\text{g}</mrow>
          </md>
          Therefore, the mass of the block is <m>7.112</m> grams.
        </p>
      </solution>
    </example>

    <example>
      <statement>
        <p>
          Given <m>8.0</m> grams of unknown substance that has a density of
          <quantity><mag>3.2</mag><unit base="gram"/><per prefix="milli" base="liter"/></quantity>,
          find its volume.
        </p>
      </statement>
      <solution>
        <p>
          Since the density of the substance is given to be
          <quantity><mag>3.2</mag><unit base="gram"/><per prefix="milli" base="liter"/></quantity>,
          this tells us that every <m>3.2</m> grams of the substance has a volume of
          <quantity><mag>1</mag><unit prefix="milli" base="liter"/></quantity>.
          We can think of this as a conversion fact that can be used to write a unit ratio.
          We can then use this unit ratio in the unit analysis process
          to convert the given mass of <m>8.0</m> grams into its equivalent volume,
          as shown below.
          <md>
            <mrow>\frac{8.0\,\cancelhighlight{\text{g}}}{1}\cdot\frac{1\,\text{mL}}{3.2\,\cancelhighlight{\text{g}}}\amp=\frac{8.0\,\text{mL}}{3.2}</mrow>
            <mrow>\amp=2.5\,\text{mL}</mrow>
          </md>
          Therefore, the <m>8.0</m> grams of the unknown substance has a volume of <m>2.5</m> milliliters.
        </p>
      </solution>
    </example>

    <p>
      One benefit of using unit analysis to solve density problems
      is that sometimes we want to find the mass in units other than grams
      or the volume in units other than <quantity><unit prefix="milli" base="liter"/></quantity>
      or <quantity><unit base="cubiccentimeter"/></quantity>.
      Since density may be given in <quantity><unit base="gram"/><per prefix="milli" base="liter"/></quantity>
      or <quantity><unit base="gram"/><per base="cubiccentimeter"/></quantity>,
      using unit analysis allows us to not only find the mass or volume,
      but also convert these measurements into different units,
      all in the same process.
      It's also useful when the initial volume or mass that is given is not given in
      <quantity><unit prefix="milli" base="liter"/></quantity>
      or <quantity><unit base="gram"/></quantity> respectively.
    </p>

    <example>
      <statement>
        <p>
          Given that the density of gold is
          <quantity><mag>19.3</mag><unit base="gram"/><per base="cubiccentimeter"/></quantity>,
          find the mass of <quantity><mag>200</mag><unit base="cubiccentimeter"/></quantity>
          of gold in kilograms.
        </p>
      </statement>
      <solution>
        <p>
          Think of this as converting the volume of <quantity><mag>200</mag><unit base="cubiccentimeter"/></quantity>
          of gold into its mass, measured in kilograms.
          Thus, start with the volume written as a ratio and then multiply by unit ratios,
          including the density ratio, to do this conversion.
          <md>
            <mrow>\frac{200\,\cancelhighlight{\text{cc}}}{1}\cdot\frac{19.3\,\cancelhighlight{\text{g}}}{1\,\cancelhighlight{\text{cc}}}\cdot\frac{1\,\text{kg}}{1000\,\cancelhighlight{\text{g}}}\amp=\frac{(200)(19.3)\,\text{kg}}{1000}</mrow>
            <mrow>\amp=3.86\,\text{kg}</mrow>
          </md>
          Therefore, <quantity><mag>200</mag><unit base="cubiccentimeter"/></quantity> of gold has a mass of
          <quantity><mag>3.86</mag><unit prefix="kilo" base="gram"/></quantity>.
        </p>
      </solution>
    </example>

    <example>
      <statement>
        <p>
          If the density of gasoline is
          <quantity><mag>0.675</mag><unit base="gram"/><per base="cubiccentimeter"/></quantity>,
          find the mass of a gallon of gasoline.
        </p>
      </statement>
      <solution>
        <p>
          Think of this as converting the volume of one gallon of gasoline into its mass.
          Thus, start with the volume written as a ratio and then multiply by unit ratios,
          including the density ratio, to do this conversion.
          <md>
            <mrow>\frac{1\,\cancelhighlight{\text{gal}}}{1}\cdot\frac{4\,\cancelhighlight{\text{qt}}}{1\,\cancelhighlight{\text{gal}}}\cdot\frac{946\,\cancelhighlight{\text{mL}}}{1\,\cancelhighlight{\text{qt}}}\cdot\frac{0.675\,\text{g}}{1\,\cancelhighlight{\text{mL}}}\amp=(4)(946)(0.675)\,\text{g}</mrow>
            <mrow>\amp=2554.2\,\text{g}</mrow>
          </md>
          Therefore, one gallon of gasoline has a mass of <m>2554.2</m> grams.
        </p>
      </solution>
    </example>
  </subsection> -->

  <subsection>
    <title>Converting Rates</title>

    <p>
      A rate unit has a numerator and a denominator. For example, speed is a rate, and speed can be measured in
      <quantity><unit base="mile"/><per base="hour"/></quantity>.
      The numerator unit is a mile and the denominator unit is an hour.
    </p>
    <p>
      Suppose we wanted to convert a speed rate,
      such as <quantity><mag>65</mag><unit base="mile"/><per base="hour"/></quantity>,
      into <quantity><unit base="meter"/><per base="second"/></quantity>.
      Or a concentration rate, such as <quantity><mag>180</mag><unit prefix="milli" base="gram"/><per base="liter"/></quantity>,
      into <quantity><unit base="gram"/><per prefix="deci" base="liter"/></quantity>.
      We can use the same process that we've used before to do these conversions.
      That is, we start by writing what we want to convert as a ratio,
      which will have units in both the numerator and denominator,
      and then we multiply by unit ratios until both units have been converted into the units we want.
      It helps to focus on converting one unit at a time
      and to make sure that the units in our unit ratios are placed so that the proper units will cancel.
    </p>

    <example>
      <statement>
        <p>
          Convert <quantity><mag>65</mag><unit base="mile"/><per base="hour"/></quantity>
          into <quantity><unit base="meter"/><per base="minute"/></quantity>.
        </p>
      </statement>
      <solution>
        <p>
          We start by writing what we are converting,
          which is <quantity><mag>65</mag><unit base="mile"/><per base="hour"/></quantity>, as a ratio.
          Then, our job is to convert the miles to meters and the hours to minutes, one at a time.
          It doesn't matter which unit ratio we use first, as long as the units line up to cancel appropriately.
          <md>
            <mrow>65\,\frac{\text{mi}}{\text{h}}\amp=\frac{65\,\text{mi}}{1\,\text{h}}\amp\amp\text{Write the rate as a ratio.}</mrow>
            <mrow>\amp\approx\frac{65\,\text{mi}}{1\,\text{h}}\cdot\frac{1.609\,\text{km}}{1\,\text{mi}}\cdot\frac{1000\,\text{m}}{1\,\text{km}}\cdot\frac{1\,\text{h}}{60\,\text{min}}\amp\amp\text{Use unit ratios to make cancellations.}</mrow>
            <mrow>\amp=\frac{65\,\cancelhighlight{\text{mi}}}{1\,\cancel{\text{h}}}\cdot\frac{1.609\,\secondcancelhighlight{\text{km}}}{1\,\cancelhighlight{\text{mi}}}\cdot\frac{1000\,\text{m}}{1\,\secondcancelhighlight{\text{km}}}\cdot\frac{1\,\cancel{\text{h}}}{60\,\text{min}}\amp\amp\text{Units may now cancel.}</mrow>
            <mrow>\amp=\frac{65}{1}\cdot\frac{1.609}{1}\cdot\frac{1000\,\text{m}}{1}\cdot\frac{1}{60\,\text{min}}</mrow>
            <mrow>\amp=\frac{65\cdot1.609\cdot1000}{60}\,\frac{\text{m}}{\text{min}}</mrow>
            <mrow>\amp\approx1743\,\frac{\text{m}}{\text{min}}</mrow>
          </md>
          Notice that the last unit ratio is used to convert the hours to minutes
          and the hour must be placed in the numerator to cancel
          the hour in the original rate that was in the denominator.
          Also, note that this will automatically cause minutes
          to end up in the denominator,
          which is where this unit should end up so that we end up with
          meters <em>per minute</em> for our final unit.
        </p>
      </solution>
    </example>

    <p>
      An important thing to keep in mind, as demonstrated in the previous example,
      as well as the next example, is that we avoid multiplying or dividing any numbers until the end,
      after the final units that we want have been obtained.
      Stopping partway through to multiply or divide some numbers could lead to confusion and mistakes.
    </p>

    <exercise>
      <webwork>
          <pg-code>
            $gdL = NumberWithUnits(0.018,'g/dL');
            # Make units parser require hours, not allow months, etc
            $evaluator = $gdL->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } ('g/dL');

                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
          </pg-code>
        <statement>
          <p>
            Convert
            <quantity><mag>180</mag><unit prefix="milli" base="gram"/><per base="liter"/></quantity>
            into <quantity><unit base="gram"/><per prefix="deci" base="liter"/></quantity>,
            given that there are <m>10</m> deciliters in a liter.
          </p>
          <p>
            <var name="$evaluator" width="20"/>
          </p>
        </statement>
        <solution>
          <p>
            We start by writing what we are converting,
            which is <quantity><mag>180</mag><unit prefix="milli" base="gram"/><per base="liter"/></quantity>,
            as a ratio. Then, we need to convert the milligrams into grams and the liters into deciliters,
            converting one unit at a time. We will start by converting the milligrams into grams.
            Then, we will convert the liters to deciliters.
            <md>
              <mrow>180\,\frac{\text{mg}}{\text{L}}\amp=\frac{180\,\text{mg}}{1\,\text{L}}\amp\amp\text{Write the rate as a ratio.}</mrow>
              <mrow>\amp=\frac{180\,\text{mg}}{1\,\text{L}}\cdot\frac{1\,\text{g}}{1000\,\text{mg}}\cdot\frac{1\,\text{L}}{10\,\text{dL}}\amp\amp\text{Use unit ratios to make cancellations.}</mrow>
              <mrow>\amp=\frac{180\,\cancel{\text{mg}}}{1\,\cancel{\text{L}}}\cdot\frac{1\,\text{g}}{1000\,\cancel{\text{mg}}}\cdot\frac{1\,\cancel{\text{L}}}{10\,\text{dL}}\amp\amp\text{Units may now cancel.}</mrow>
              <mrow>\amp=\frac{180}{1}\cdot\frac{1\,\text{g}}{1000}\cdot\frac{1}{10\,\text{dL}}</mrow>
              <mrow>\amp=\frac{180}{1000\cdot10}\,\frac{\text{g}}{\text{dL}}</mrow>
              <mrow>\amp\approx0.018\,\frac{\text{g}}{\text{dL}}</mrow>
            </md>
          </p>
          <p>
            So for example if salt is mixed into water with a concentration of
            <quantity><mag>180</mag><unit prefix="milli" base="gram"/><per base="liter"/></quantity>,
            the concentration can also be described as
            <quantity><mag>0.018</mag><unit base="gram"/><per prefix="deci" base="liter"/></quantity>.
          </p>
        </solution>
      </webwork>
    </exercise>
  </subsection>

  <reading-questions>
    <exercise>
      <statement>
        <p>
          Unit conversion is a lot like multiplying <fillin characters="9"/>.
        </p>
      </statement>
    </exercise>
    <exercise>
      <statement>
        <p>
          If you are using a unit ratio to convert inches to feet, how do you decide whether to use <m>\frac{1\,\text{ft}}{12\,\text{in}}</m>
          or to use <m>\frac{12\,\text{in}}{1\,\text{ft}}</m>?
        </p>
      </statement>
    </exercise>
    <exercise>
      <statement>
        <p>
          If you use a power of a unit ratio to make a unit conversion, what do you need to remember?
        </p>
      </statement>
    </exercise>
  </reading-questions>

  <exercises>
    <exercisegroup cols="3">
      <title>Review and Warmup</title>
      <exercise>
        <webwork source="Contrib/PCC/BasicAlgebra/FractionArithmetic/MultiplyFractions10.pg" />
      </exercise>
      <exercise>
        <webwork source="Contrib/PCC/BasicAlgebra/FractionArithmetic/MultiplyFractions10.pg" />
      </exercise>
      <exercise>
        <webwork source="Contrib/PCC/BasicAlgebra/FractionArithmetic/MultiplyFractions20.pg" />
      </exercise>
      <exercise>
        <webwork source="Contrib/PCC/BasicAlgebra/FractionArithmetic/MultiplyFractions20.pg" />
      </exercise>
      <exercise>
        <webwork source="Contrib/PCC/BasicAlgebra/FractionArithmetic/MultiplyFractions30.pg" />
      </exercise>
      <exercise>
        <webwork source="Contrib/PCC/BasicAlgebra/FractionArithmetic/MultiplyFractions30.pg" />
      </exercise>
    </exercisegroup>

    <exercisegroup cols="2">
      <title>Unit Conversions</title>
      <!-- Conversions that only need a single conversion from the appendix. -->
      <exercise>
        <webwork xml:id="webwork-unit-conversion">
          <pg-macros>
            <macro-file>ORCCA.pl</macro-file>
          </pg-macros>
          <pg-code>
            $digits = list_random(2,3);
            $decimals = random(0,$digits-1,1);
            $a = ($digits == 2) ? (random(1,9,1)*10 + random(1,9,1)) / 10**$decimals  :  (random(10,99,1)*10 + random(1,9,1)) / 10**$decimals;
            $unitsin = list_random(lex_sort(keys %ORCCAconversions));
            $unitsout = list_random(lex_sort(keys %{$ORCCAconversions{$unitsin}}));
            my @alternatives = ($unitsout, @{$unitAlternatives{$unitsout}});
            $word = $unitWords{$unitsout};
            $factor = $ORCCAconversions{$unitsin}->{$unitsout};
            $b = $a*$factor;
            $given = NumberWithUnits("$a $unitsin", {newUnit => $ORCCAunits});
            $get = NumberWithUnits("$b $unitsout", {newUnit => $ORCCAunits});
            $evaluator = $get->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } (@alternatives);
                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
            $factornum = ($factor > 1) ? $factor : 1;
            $factorden = ($factor > 1) ? 1 : 1/$factor;
            $factornumU = NumberWithUnits("$factornum $unitsout", {newUnit => $ORCCAunits});
            $factordenU = NumberWithUnits("$factorden $unitsin", {newUnit => $ORCCAunits});
          </pg-code>
          <statement>
            <p>
              Convert <m><var name="$given"/></m> to <var name="$word"/>.
            </p>
            <p>
              <var name="$evaluator" width="20"/>
            </p>
          </statement>
          <solution>
            <p>
              <md>
                <mrow><var name="$given"/>\amp=\frac{<var name="$given"/>}{1}</mrow>
                <mrow>\amp=\frac{<var name="$given"/>}{1}\cdot\frac{<var name="$factornumU"/>}{<var name="$factordenU"/>}</mrow>
                <mrow>\amp=\frac{<var name="$a"/>\cdot <var name="$factornumU"/>}{1\cdot <var name="$factorden"/>}</mrow>
                <mrow>\amp=<var name="$get"/></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion"/>
      </exercise>
      <!-- Conversions that need two conversions from the appendix. -->
      <exercise>
        <webwork xml:id="webwork-unit-conversion-2">
          <pg-macros>
            <macro-file>ORCCA.pl</macro-file>
          </pg-macros>
          <pg-code>
            $digits = list_random(2,3);
            $decimals = random(0,$digits-1,1);
            $a = ($digits == 2) ? (random(1,9,1)*10 + random(1,9,1)) / 10**$decimals  :  (random(10,99,1)*10 + random(1,9,1)) / 10**$decimals;
            do {
              $unitsin = list_random(lex_sort(keys %ORCCAconversions));
              $unitsmid = list_random(lex_sort(keys %{$ORCCAconversions{$unitsin}}));
              $unitsout = list_random(lex_sort(keys %{$ORCCAconversions{$unitsmid}}));
            } until ($unitsin ne $unitsout and not defined ($ORCCAconversions{$unitsin}->{$unitsout}));
            my @alternatives = ($unitsout, @{$unitAlternatives{$unitsout}});
            $word = $unitWords{$unitsout};
            $factor1 = $ORCCAconversions{$unitsin}->{$unitsmid};
            $factor2 = $ORCCAconversions{$unitsmid}->{$unitsout};
            $factor = $factor1*$factor2;
            $b = $a*$factor;
            $given = NumberWithUnits("$a $unitsin", {newUnit => $ORCCAunits});
            $get = NumberWithUnits("$b $unitsout", {newUnit => $ORCCAunits});
            $evaluator = $get->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } (@alternatives);
                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
            $factornum1 = ($factor1 > 1) ? $factor1 : 1;
            $factorden1 = ($factor1 > 1) ? 1 : 1/$factor1;
            $factornum1U = NumberWithUnits("$factornum1 $unitsmid", {newUnit => $ORCCAunits});
            $factorden1U = NumberWithUnits("$factorden1 $unitsin", {newUnit => $ORCCAunits});
            $factornum2 = ($factor2 > 1) ? $factor2 : 1;
            $factorden2 = ($factor2 > 1) ? 1 : 1/$factor2;
            $factornum2U = NumberWithUnits("$factornum2 $unitsout", {newUnit => $ORCCAunits});
            $factorden2U = NumberWithUnits("$factorden2 $unitsmid", {newUnit => $ORCCAunits});
          </pg-code>
          <statement>
            <p>
              Convert <m><var name="$given"/></m> to <var name="$word"/>.
            </p>
            <p>
              <var name="$evaluator" width="20"/>
            </p>
          </statement>
          <solution>
            <p>
              <md>
                <mrow><var name="$given"/>\amp=\frac{<var name="$given"/>}{1}</mrow>
                <mrow>\amp=\frac{<var name="$given"/>}{1}\cdot\frac{<var name="$factornum1U"/>}{<var name="$factorden1U"/>}\cdot\frac{<var name="$factornum2U"/>}{<var name="$factorden2U"/>}</mrow>
                <mrow>\amp=\frac{<var name="$a"/>\cdot <var name="$factornum1"/> \cdot <var name="$factornum2U"/>}{1\cdot <var name="$factorden1"/> \cdot <var name="$factorden2"/>}</mrow>
                <mrow>\amp=<var name="$get"/></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion-2"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion-2"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion-2"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion-2"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion-2"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion-2"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion-2"/>
      </exercise>
      <!-- Conversions that only need a single conversion from the appendix, but squared or cubed. -->
      <exercise>
        <webwork xml:id="webwork-unit-conversion-with-powers">
          <pg-macros>
            <macro-file>ORCCA.pl</macro-file>
          </pg-macros>
          <pg-code>
            $digits = list_random(2,3);
            $decimals = random(0,$digits-1,1);
            $unitsin = list_random('ft','in','yd','mi','m','mm','cm','dm','dam','hm','km');
            $a = ($digits == 2) ? (random(1,9,1)*10 + random(1,9,1)) / 10**$decimals  :  (random(10,99,1)*10 + random(1,9,1)) / 10**$decimals;
            $dimension = list_random(2,3);
            $unitsout = list_random(lex_sort(keys %{$ORCCAconversions{$unitsin}}));
            my @alternatives = map{$_."^$dimension"} ($unitsout, @{$unitAlternatives{$unitsout}});
            $word = $unitWords{$unitsout};
            $dimensionWord = ($dimension == 2) ? 'square' : 'cubic';
            $factor = $ORCCAconversions{$unitsin}->{$unitsout};
            $b = $a*$factor**$dimension;
            $given = NumberWithUnits("$a $unitsin^$dimension", {newUnit => $ORCCAunits});
            $get = NumberWithUnits("$b $unitsout^$dimension", {newUnit => $ORCCAunits});
            $evaluator = $get->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } (@alternatives);
                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
            $factornum = ($factor > 1) ? $factor : 1;
            $factorden = ($factor > 1) ? 1 : 1/$factor;
            $factornumU = NumberWithUnits("$factornum $unitsout", {newUnit => $ORCCAunits});
            $factordenU = NumberWithUnits("$factorden $unitsin", {newUnit => $ORCCAunits});
          </pg-code>
          <statement>
            <p>
              Convert <m><var name="$given"/></m> to <var name="$dimensionWord"/> <var name="$word"/>.
            </p>
            <p>
              <var name="$evaluator" width="20"/>
            </p>
          </statement>
          <solution>
            <p>
              <md>
                <mrow><var name="$given"/>\amp=\frac{<var name="$given"/>}{1}</mrow>
                <mrow>\amp=\frac{<var name="$given"/>}{1}\cdot\left(\frac{<var name="$factornumU"/>}{<var name="$factordenU"/>}\right)^{<var name="$dimension"/>}</mrow>
                <mrow>\amp=\frac{<var name="$given"/>}{1}\cdot\frac{<var name="$factornum"/>^{<var name="$dimension"/>}\,\mathrm{<var name="$unitsout"/>}^{<var name="$dimension"/>}}{<var name="$factorden"/>^{<var name="$dimension"/>}\,\mathrm{<var name="$unitsin"/>}^{<var name="$dimension"/>}}</mrow>
                <mrow>\amp=\frac{<var name="$a"/>\cdot <var name="$factornum"/>^{<var name="$dimension"/>}\,\mathrm{<var name="$unitsout"/>}^{<var name="$dimension"/>}}{1\cdot <var name="$factorden"/>^{<var name="$dimension"/>}}</mrow>
                <mrow>\amp=<var name="$get"/></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion-with-powers"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion-with-powers"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion-with-powers"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion-with-powers"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion-with-powers"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion-with-powers"/>
      </exercise>
      <exercise>
        <webwork copy="webwork-unit-conversion-with-powers"/>
      </exercise>
      <!-- Conversions of a rate unit. -->
      <!-- Speed -->
      <exercise>
        <webwork xml:id="webwork-speed-conversion">
          <pg-macros>
            <macro-file>ORCCA.pl</macro-file>
          </pg-macros>
          <pg-code>
            do {
              $digits = list_random(2,3);
              $decimals = random(0,$digits-1,1);
              $a = ($digits == 2) ? (random(1,9,1)*10 + random(1,9,1)) / 10**$decimals  :  (random(10,99,1)*10 + random(1,9,1)) / 10**$decimals;
              $numunitsin = list_random('ft','in','yd','mi','m','mm','cm','dm','dam','hm','km');
              $numunitsout = list_random(lex_sort(keys %{$ORCCAconversions{$numunitsin}}));
              $denunitsin = list_random('wk','d','h','min','s','ms','ns');
              $denunitsout = list_random(lex_sort(keys %{$ORCCAconversions{$denunitsin}}));
              $numword = $unitWords{$numunitsout};
              $denword = $unitWord{$denunitsout};
              $factornum = $ORCCAconversions{$numunitsin}->{$numunitsout};
              $factorden = $ORCCAconversions{$denunitsin}->{$denunitsout};
              $factor = $factornum/$factorden;
              $b = $a*$factor;
            } until (abs(log10($b)) &lt; 6);
            my @numalternatives = ($numunitsout, @{$unitAlternatives{$numunitsout}});
            my @denalternatives = ($denunitsout, @{$unitAlternatives{$denunitsout}});
            my @alternatives;
            for my $i (@numalternatives) {
              for my $j (@denalternatives) {
                push(@alternatives, $i.'/'.$j);
              };
            };
            $given = NumberWithUnits("$a $numunitsin/$denunitsin", {newUnit => $ORCCAunits});
            $get = NumberWithUnits("$b $numunitsout/$denunitsout", {newUnit => $ORCCAunits});
            $evaluator = $get->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } (@alternatives);
                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
            $factornum1 = ($factornum > 1) ? $factornum : 1;
            $factorden1 = ($factornum > 1) ? 1 : 1/$factornum;
            $factornum1U = NumberWithUnits("$factornum1 $numunitsout", {newUnit => $ORCCAunits});
            $factorden1U = NumberWithUnits("$factorden1 $numunitsin", {newUnit => $ORCCAunits});
            $factorden2 = ($factorden > 1) ? $factorden : 1;
            $factornum2 = ($factorden > 1) ? 1 : 1/$factorden;
            $factornum2U = NumberWithUnits("$factornum2 $denunitsin", {newUnit => $ORCCAunits});
            $factorden2U = NumberWithUnits("$factorden2 $denunitsout", {newUnit => $ORCCAunits});
          </pg-code>
          <statement>
            <p>
              Convert <m><var name="$given"/></m> to <var name="$numword"/> per <var name="$denword"/>.
            </p>
            <p>
              <var name="$evaluator" width="20"/>
            </p>
          </statement>
          <solution>
            <p>
              <md>
                <mrow><var name="$given"/>\amp=\frac{<var name="$a"/>\,\mathrm{<var name="$numunitsin"/>}}{1\,\mathrm{<var name="$denunitsin"/>}}</mrow>
                <mrow>\amp=\frac{<var name="$a"/>\,\mathrm{<var name="$numunitsin"/>}}{1\,\mathrm{<var name="$denunitsin"/>}}\cdot\frac{<var name="$factornum1U"/>}{<var name="$factorden1U"/>}\cdot\frac{<var name="$factornum2U"/>}{<var name="$factorden2U"/>}</mrow>
                <mrow>\amp=\frac{<var name="$a"/>\cdot <var name="$factornum1U"/> \cdot <var name="$factornum2"/>}{1\cdot <var name="$factorden1"/> \cdot <var name="$factorden2U"/>}</mrow>
                <mrow>\amp=<var name="$get"/></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise>
        <webwork copy="webwork-speed-conversion"/>
      </exercise>
      <!-- Area per unit Time -->
      <exercise>
        <webwork xml:id="webwork-area-per-time-conversion">
          <pg-macros>
            <macro-file>ORCCA.pl</macro-file>
          </pg-macros>
          <pg-code>
            do {
              $digits = list_random(2,3);
              $decimals = random(0,$digits-1,1);
              $a = ($digits == 2) ? (random(1,9,1)*10 + random(1,9,1)) / 10**$decimals  :  (random(10,99,1)*10 + random(1,9,1)) / 10**$decimals;
              $numunitsin = list_random('acre','ft^2','mi^2','ha','m^2','km^2');
              $numunitsout = list_random(lex_sort(keys %{$ORCCAconversions{$numunitsin}}));
              $denunitsin = list_random('wk','d','h','min','s','ms','ns');
              $denunitsout = list_random(lex_sort(keys %{$ORCCAconversions{$denunitsin}}));
              $numword = $unitWords{$numunitsout};
              $denword = $unitWord{$denunitsout};
              $factornum = $ORCCAconversions{$numunitsin}->{$numunitsout};
              $factorden = $ORCCAconversions{$denunitsin}->{$denunitsout};
              $factor = $factornum/$factorden;
              $b = $a*$factor;
            } until (abs(log10($b)) &lt; 6);
            my @numalternatives = ($numunitsout, @{$unitAlternatives{$numunitsout}});
            my @denalternatives = ($denunitsout, @{$unitAlternatives{$denunitsout}});
            my @alternatives;
            for my $i (@numalternatives) {
              for my $j (@denalternatives) {
                push(@alternatives, $i.'/'.$j);
              };
            };
            $given = NumberWithUnits("$a $numunitsin/$denunitsin", {newUnit => $ORCCAunits});
            $get = NumberWithUnits("$b $numunitsout/$denunitsout", {newUnit => $ORCCAunits});
            $evaluator = $get->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } (@alternatives);
                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
            $factornum1 = ($factornum > 1) ? $factornum : 1;
            $factorden1 = ($factornum > 1) ? 1 : 1/$factornum;
            $factornum1U = NumberWithUnits("$factornum1 $numunitsout", {newUnit => $ORCCAunits});
            $factorden1U = NumberWithUnits("$factorden1 $numunitsin", {newUnit => $ORCCAunits});
            $factorden2 = ($factorden > 1) ? $factorden : 1;
            $factornum2 = ($factorden > 1) ? 1 : 1/$factorden;
            $factornum2U = NumberWithUnits("$factornum2 $denunitsin", {newUnit => $ORCCAunits});
            $factorden2U = NumberWithUnits("$factorden2 $denunitsout", {newUnit => $ORCCAunits});
          </pg-code>
          <statement>
            <p>
              Convert <m><var name="$given"/></m> to <var name="$numword"/> per <var name="$denword"/>.
            </p>
            <p>
              <var name="$evaluator" width="20"/>
            </p>
          </statement>
          <solution>
            <p>
              <md>
                <mrow><var name="$given"/>\amp=\frac{<var name="$a"/>\,\mathrm{<var name="$numunitsin"/>}}{1\,\mathrm{<var name="$denunitsin"/>}}</mrow>
                <mrow>\amp=\frac{<var name="$a"/>\,\mathrm{<var name="$numunitsin"/>}}{1\,\mathrm{<var name="$denunitsin"/>}}\cdot\frac{<var name="$factornum1U"/>}{<var name="$factorden1U"/>}\cdot\frac{<var name="$factornum2U"/>}{<var name="$factorden2U"/>}</mrow>
                <mrow>\amp=\frac{<var name="$a"/>\cdot <var name="$factornum1U"/> \cdot <var name="$factornum2"/>}{1\cdot <var name="$factorden1"/> \cdot <var name="$factorden2U"/>}</mrow>
                <mrow>\amp=<var name="$get"/></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise>
        <webwork copy="webwork-area-per-time-conversion"/>
      </exercise>
      <!-- Volume per unit Time -->
      <exercise>
        <webwork xml:id="webwork-volume-per-time-conversion">
          <pg-macros>
            <macro-file>ORCCA.pl</macro-file>
          </pg-macros>
          <pg-code>
            do {
              $digits = list_random(2,3);
              $decimals = random(0,$digits-1,1);
              $a = ($digits == 2) ? (random(1,9,1)*10 + random(1,9,1)) / 10**$decimals  :  (random(10,99,1)*10 + random(1,9,1)) / 10**$decimals;
              $numunitsin = list_random('gal','in^3','cc','cm^3','mL','L');
              $numunitsout = list_random(lex_sort(keys %{$ORCCAconversions{$numunitsin}}));
              $denunitsin = list_random('wk','d','h','min','s','ms','ns');
              $denunitsout = list_random(lex_sort(keys %{$ORCCAconversions{$denunitsin}}));
              $numword = $unitWords{$numunitsout};
              $denword = $unitWord{$denunitsout};
              $factornum = $ORCCAconversions{$numunitsin}->{$numunitsout};
              $factorden = $ORCCAconversions{$denunitsin}->{$denunitsout};
              $factor = $factornum/$factorden;
              $b = $a*$factor;
            } until (abs(log10($b)) &lt; 6);
            my @numalternatives = ($numunitsout, @{$unitAlternatives{$numunitsout}});
            my @denalternatives = ($denunitsout, @{$unitAlternatives{$denunitsout}});
            my @alternatives;
            for my $i (@numalternatives) {
              for my $j (@denalternatives) {
                push(@alternatives, $i.'/'.$j);
              };
            };
            $given = NumberWithUnits("$a $numunitsin/$denunitsin", {newUnit => $ORCCAunits});
            $get = NumberWithUnits("$b $numunitsout/$denunitsout", {newUnit => $ORCCAunits});
            $evaluator = $get->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } (@alternatives);
                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
            $factornum1 = ($factornum > 1) ? $factornum : 1;
            $factorden1 = ($factornum > 1) ? 1 : 1/$factornum;
            $factornum1U = NumberWithUnits("$factornum1 $numunitsout", {newUnit => $ORCCAunits});
            $factorden1U = NumberWithUnits("$factorden1 $numunitsin", {newUnit => $ORCCAunits});
            $factorden2 = ($factorden > 1) ? $factorden : 1;
            $factornum2 = ($factorden > 1) ? 1 : 1/$factorden;
            $factornum2U = NumberWithUnits("$factornum2 $denunitsin", {newUnit => $ORCCAunits});
            $factorden2U = NumberWithUnits("$factorden2 $denunitsout", {newUnit => $ORCCAunits});
          </pg-code>
          <statement>
            <p>
              Convert <m><var name="$given"/></m> to <var name="$numword"/> per <var name="$denword"/>.
            </p>
            <p>
              <var name="$evaluator" width="20"/>
            </p>
          </statement>
          <solution>
            <p>
              <md>
                <mrow><var name="$given"/>\amp=\frac{<var name="$a"/>\,\mathrm{<var name="$numunitsin"/>}}{1\,\mathrm{<var name="$denunitsin"/>}}</mrow>
                <mrow>\amp=\frac{<var name="$a"/>\,\mathrm{<var name="$numunitsin"/>}}{1\,\mathrm{<var name="$denunitsin"/>}}\cdot\frac{<var name="$factornum1U"/>}{<var name="$factorden1U"/>}\cdot\frac{<var name="$factornum2U"/>}{<var name="$factorden2U"/>}</mrow>
                <mrow>\amp=\frac{<var name="$a"/>\cdot <var name="$factornum1U"/> \cdot <var name="$factornum2"/>}{1\cdot <var name="$factorden1"/> \cdot <var name="$factorden2U"/>}</mrow>
                <mrow>\amp=<var name="$get"/></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise>
        <webwork copy="webwork-volume-per-time-conversion"/>
      </exercise>
      <!-- Weight/Mass per Unit Time -->
      <exercise>
        <webwork xml:id="webwork-mass-per-time-conversion">
          <pg-macros>
            <macro-file>ORCCA.pl</macro-file>
          </pg-macros>
          <pg-code>
            do {
              $digits = list_random(2,3);
              $decimals = random(0,$digits-1,1);
              $a = ($digits == 2) ? (random(1,9,1)*10 + random(1,9,1)) / 10**$decimals  :  (random(10,99,1)*10 + random(1,9,1)) / 10**$decimals;
              $numunitsin = list_random('lb','oz','T','g','mg','kg');
              $numunitsout = list_random(lex_sort(keys %{$ORCCAconversions{$numunitsin}}));
              $denunitsin = list_random('wk','d','h','min','s','ms','ns');
              $denunitsout = list_random(lex_sort(keys %{$ORCCAconversions{$denunitsin}}));
              $numword = $unitWords{$numunitsout};
              $denword = $unitWord{$denunitsout};
              $factornum = $ORCCAconversions{$numunitsin}->{$numunitsout};
              $factorden = $ORCCAconversions{$denunitsin}->{$denunitsout};
              $factor = $factornum/$factorden;
              $b = $a*$factor;
            } until (abs(log10($b)) &lt; 6);
            my @numalternatives = ($numunitsout, @{$unitAlternatives{$numunitsout}});
            my @denalternatives = ($denunitsout, @{$unitAlternatives{$denunitsout}});
            my @alternatives;
            for my $i (@numalternatives) {
              for my $j (@denalternatives) {
                push(@alternatives, $i.'/'.$j);
              };
            };
            $given = NumberWithUnits("$a $numunitsin/$denunitsin", {newUnit => $ORCCAunits});
            $get = NumberWithUnits("$b $numunitsout/$denunitsout", {newUnit => $ORCCAunits});
            $evaluator = $get->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } (@alternatives);
                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
            $factornum1 = ($factornum > 1) ? $factornum : 1;
            $factorden1 = ($factornum > 1) ? 1 : 1/$factornum;
            $factornum1U = NumberWithUnits("$factornum1 $numunitsout", {newUnit => $ORCCAunits});
            $factorden1U = NumberWithUnits("$factorden1 $numunitsin", {newUnit => $ORCCAunits});
            $factorden2 = ($factorden > 1) ? $factorden : 1;
            $factornum2 = ($factorden > 1) ? 1 : 1/$factorden;
            $factornum2U = NumberWithUnits("$factornum2 $denunitsin", {newUnit => $ORCCAunits});
            $factorden2U = NumberWithUnits("$factorden2 $denunitsout", {newUnit => $ORCCAunits});
          </pg-code>
          <statement>
            <p>
              Convert <m><var name="$given"/></m> to <var name="$numword"/> per <var name="$denword"/>.
            </p>
            <p>
              <var name="$evaluator" width="20"/>
            </p>
          </statement>
          <solution>
            <p>
              <md>
                <mrow><var name="$given"/>\amp=\frac{<var name="$a"/>\,\mathrm{<var name="$numunitsin"/>}}{1\,\mathrm{<var name="$denunitsin"/>}}</mrow>
                <mrow>\amp=\frac{<var name="$a"/>\,\mathrm{<var name="$numunitsin"/>}}{1\,\mathrm{<var name="$denunitsin"/>}}\cdot\frac{<var name="$factornum1U"/>}{<var name="$factorden1U"/>}\cdot\frac{<var name="$factornum2U"/>}{<var name="$factorden2U"/>}</mrow>
                <mrow>\amp=\frac{<var name="$a"/>\cdot <var name="$factornum1U"/> \cdot <var name="$factornum2"/>}{1\cdot <var name="$factorden1"/> \cdot <var name="$factorden2U"/>}</mrow>
                <mrow>\amp=<var name="$get"/></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise>
        <webwork copy="webwork-mass-per-time-conversion"/>
      </exercise>
      <!-- Transfer Rate -->
      <exercise>
        <webwork xml:id="webwork-data-transfer-rate-conversion">
          <pg-macros>
            <macro-file>ORCCA.pl</macro-file>
          </pg-macros>
          <pg-code>
            do {
              $digits = list_random(2,3);
              $decimals = random(0,$digits-1,1);
              $a = ($digits == 2) ? (random(1,9,1)*10 + random(1,9,1)) / 10**$decimals  :  (random(10,99,1)*10 + random(1,9,1)) / 10**$decimals;
              $numunitsin = list_random('b','B','kb','kB','Mb','MB','GB','TB');
              $numunitsout = list_random(lex_sort(keys %{$ORCCAconversions{$numunitsin}}));
              $denunitsin = list_random('wk','d','h','min','s','ms','ns');
              $denunitsout = list_random(lex_sort(keys %{$ORCCAconversions{$denunitsin}}));
              $numword = $unitWords{$numunitsout};
              $denword = $unitWord{$denunitsout};
              $factornum = $ORCCAconversions{$numunitsin}->{$numunitsout};
              $factorden = $ORCCAconversions{$denunitsin}->{$denunitsout};
              $factor = $factornum/$factorden;
              $b = $a*$factor;
            } until (abs(log10($b)) &lt; 6);
            my @numalternatives = ($numunitsout, @{$unitAlternatives{$numunitsout}});
            my @denalternatives = ($denunitsout, @{$unitAlternatives{$denunitsout}});
            my @alternatives;
            for my $i (@numalternatives) {
              for my $j (@denalternatives) {
                push(@alternatives, $i.'/'.$j);
              };
            };
            $given = NumberWithUnits("$a $numunitsin/$denunitsin", {newUnit => $ORCCAunits});
            $get = NumberWithUnits("$b $numunitsout/$denunitsout", {newUnit => $ORCCAunits});
            $evaluator = $get->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } (@alternatives);
                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
            $factornum1 = ($factornum > 1) ? $factornum : 1;
            $factorden1 = ($factornum > 1) ? 1 : 1/$factornum;
            $factornum1U = NumberWithUnits("$factornum1 $numunitsout", {newUnit => $ORCCAunits});
            $factorden1U = NumberWithUnits("$factorden1 $numunitsin", {newUnit => $ORCCAunits});
            $factorden2 = ($factorden > 1) ? $factorden : 1;
            $factornum2 = ($factorden > 1) ? 1 : 1/$factorden;
            $factornum2U = NumberWithUnits("$factornum2 $denunitsin", {newUnit => $ORCCAunits});
            $factorden2U = NumberWithUnits("$factorden2 $denunitsout", {newUnit => $ORCCAunits});
          </pg-code>
          <statement>
            <p>
              Convert <m><var name="$given"/></m> to <var name="$numword"/> per <var name="$denword"/>.
            </p>
            <p>
              <var name="$evaluator" width="20"/>
            </p>
          </statement>
          <solution>
            <p>
              <md>
                <mrow><var name="$given"/>\amp=\frac{<var name="$a"/>\,\mathrm{<var name="$numunitsin"/>}}{1\,\mathrm{<var name="$denunitsin"/>}}</mrow>
                <mrow>\amp=\frac{<var name="$a"/>\,\mathrm{<var name="$numunitsin"/>}}{1\,\mathrm{<var name="$denunitsin"/>}}\cdot\frac{<var name="$factornum1U"/>}{<var name="$factorden1U"/>}\cdot\frac{<var name="$factornum2U"/>}{<var name="$factorden2U"/>}</mrow>
                <mrow>\amp=\frac{<var name="$a"/>\cdot <var name="$factornum1U"/> \cdot <var name="$factornum2"/>}{1\cdot <var name="$factorden1"/> \cdot <var name="$factorden2U"/>}</mrow>
                <mrow>\amp=<var name="$get"/></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise>
        <webwork copy="webwork-data-transfer-rate-conversion"/>
      </exercise>
      <!-- Density/Concentration -->
      <exercise>
        <webwork xml:id="webwork-density-conversion">
          <pg-macros>
            <macro-file>ORCCA.pl</macro-file>
          </pg-macros>
          <pg-code>
            do {
              $digits = list_random(2,3);
              $decimals = random(0,$digits-1,1);
              $a = ($digits == 2) ? (random(1,9,1)*10 + random(1,9,1)) / 10**$decimals  :  (random(10,99,1)*10 + random(1,9,1)) / 10**$decimals;
              $numunitsin = list_random('lb','oz','g','mg','kg');
              $numunitsout = list_random(lex_sort(keys %{$ORCCAconversions{$numunitsin}}));
              $denunitsin = list_random('c','pt','qt','gal','in^3','cc','cm^3','mL','L');
              $denunitsout = list_random(lex_sort(keys %{$ORCCAconversions{$denunitsin}}));
              $numword = $unitWords{$numunitsout};
              $denword = $unitWord{$denunitsout};
              $factornum = $ORCCAconversions{$numunitsin}->{$numunitsout};
              $factorden = $ORCCAconversions{$denunitsin}->{$denunitsout};
              $factor = $factornum/$factorden;
              $b = $a*$factor;
            } until (abs(log10($b)) &lt; 6);
            my @numalternatives = ($numunitsout, @{$unitAlternatives{$numunitsout}});
            my @denalternatives = ($denunitsout, @{$unitAlternatives{$denunitsout}});
            my @alternatives;
            for my $i (@numalternatives) {
              for my $j (@denalternatives) {
                push(@alternatives, $i.'/'.$j);
              };
            };
            $given = NumberWithUnits("$a $numunitsin/$denunitsin", {newUnit => $ORCCAunits});
            $get = NumberWithUnits("$b $numunitsout/$denunitsout", {newUnit => $ORCCAunits});
            $evaluator = $get->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } (@alternatives);
                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
            $factornum1 = ($factornum > 1) ? $factornum : 1;
            $factorden1 = ($factornum > 1) ? 1 : 1/$factornum;
            $factornum1U = NumberWithUnits("$factornum1 $numunitsout", {newUnit => $ORCCAunits});
            $factorden1U = NumberWithUnits("$factorden1 $numunitsin", {newUnit => $ORCCAunits});
            $factorden2 = ($factorden > 1) ? $factorden : 1;
            $factornum2 = ($factorden > 1) ? 1 : 1/$factorden;
            $factornum2U = NumberWithUnits("$factornum2 $denunitsin", {newUnit => $ORCCAunits});
            $factorden2U = NumberWithUnits("$factorden2 $denunitsout", {newUnit => $ORCCAunits});
          </pg-code>
          <statement>
            <p>
              Convert <m><var name="$given"/></m> to <var name="$numword"/> per <var name="$denword"/>.
            </p>
            <p>
              <var name="$evaluator" width="20"/>
            </p>
          </statement>
          <solution>
            <p>
              <md>
                <mrow><var name="$given"/>\amp=\frac{<var name="$a"/>\,\mathrm{<var name="$numunitsin"/>}}{1\,\mathrm{<var name="$denunitsin"/>}}</mrow>
                <mrow>\amp=\frac{<var name="$a"/>\,\mathrm{<var name="$numunitsin"/>}}{1\,\mathrm{<var name="$denunitsin"/>}}\cdot\frac{<var name="$factornum1U"/>}{<var name="$factorden1U"/>}\cdot\frac{<var name="$factornum2U"/>}{<var name="$factorden2U"/>}</mrow>
                <mrow>\amp=\frac{<var name="$a"/>\cdot <var name="$factornum1U"/> \cdot <var name="$factornum2"/>}{1\cdot <var name="$factorden1"/> \cdot <var name="$factorden2U"/>}</mrow>
                <mrow>\amp=<var name="$get"/></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise>
        <webwork copy="webwork-density-conversion"/>
      </exercise>
    </exercisegroup>

    <exercisegroup cols="3">
      <title>Applications</title>
      <!-- carpeting -->
      <exercise>
        <webwork xml:id="webwork-bedroom-carpet-area-conversion">
          <pg-code>
            $sqft = random(90,200,1);
            $sqftU = NumberWithUnits("$sqft ft^2");
            $sex = list_random('female','male');
            $name = RandomName(sex=>$sex);
            $Pronoun = ($sex eq 'male') ? 'He' : 'She';
            $pronoun = lc($Pronoun);
            $sqyd = $sqft/9;
            $conversion = {factor => 0.9144, m => 1};
            $sqydU = NumberWithUnits("$sqyd yd^2",
              {newUnit=>[
                {name=>'yd', conversion => $conversion},
                {name=>'yard', conversion => $conversion},
                {name=>'yards', conversion => $conversion},
              ]}
            );
            $evaluator = $sqydU->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } ('yd^2','yard^2','yards^2');
                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
          </pg-code>
          <statement>
            <p>
              <var name="$name"/>'s bedroom has <m><var name="$sqftU"/></m> of floor. <var name="$Pronoun"/> would like to carpet the floor, but carpeting is sold by the square yard.
              How many square yards of carpeting will <var name="$pronoun"/> need to get?
            </p>
            <p>
              <var name="$evaluator" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork copy="webwork-bedroom-carpet-area-conversion"/>
      </exercise>
      <!-- petrol -->
      <exercise>
        <webwork xml:id="webwork-petrol-conversion">
          <pg-code>
            $liters = random(26,50,1);
            $litersU = NumberWithUnits("$liters L");
            $sex = list_random('female','male');
            $name = RandomName(sex=>$sex);
            $Pronoun = ($sex eq 'male') ? 'He' : 'She';
            $pronoun = lc($Pronoun);
            $gallons = $liters/3.785;
            $conversion = {factor => 0.003785, m => 3};
            $gallonsU = NumberWithUnits("$gallons gal",
              {newUnit=>[
                {name=>'gal', conversion => $conversion},
                {name=>'gallon', conversion => $conversion},
                {name=>'gallons', conversion => $conversion},
              ]}
            );
            $evaluator = $gallonsU->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } ('gal','gallon','gallons');
                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
          </pg-code>
          <statement>
            <p>
              <var name="$name"/> is traveling in Europe and renting a car. <var name="$Pronoun"/> is used to thinking of gasoline amounts in gallons, but in Europe it is sold in liters. After filling the gas tank, <var name="$pronoun"/> notices it took <m><var name="$litersU"/></m> of gas. How many gallons is that?
            </p>
            <p>
              <var name="$evaluator" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork copy="webwork-petrol-conversion"/>
      </exercise>
      <!-- cooking -->
      <exercise>
        <webwork xml:id="webwork-cooking-unit-conversion">
          <pg-code>
            $milliliters = random(100,400,10);
            $millilitersU = NumberWithUnits("$milliliters mL", {newUnit => {name => 'mL', conversion => {factor => 10**-6, m => 3}}});
            $sex = list_random('female','male');
            $name = RandomName(sex=>$sex);
            $Pronoun = ($sex eq 'male') ? 'He' : 'She';
            $pronoun = lc($Pronoun);
            $n = list_random(6,7,9,10,11,13,14,15);
            $nWord = numberWord($n);
            $cups = $milliliters/236.588*$n/4;
            $conversion = {factor => 0.000236588, m => 3};
            $cupsU = NumberWithUnits("$cups c",
              {newUnit=>[
                {name=>'c', conversion => $conversion},
                {name=>'cup', conversion => $conversion},
                {name=>'cups', conversion => $conversion},
              ]}
            );
            $evaluator = $cupsU->cmp->withPostFilter(sub {
              my $ans = shift;
              if ($ans->{score}) {
                my $correct = $ans->{correct_value};
                my $student = $ans->{student_value};
                my %goodunits = map { $_ => 1 } ('c','cup','cups');
                if (!exists($goodunits{$student->{units}})) {
                  $ans->{ans_message} = "Your answer is equivalent to the correct answer, but it uses the wrong units";
                  $ans->score(0);
                }
              }
              return $ans;
            });
          </pg-code>
          <statement>
            <p>
              <var name="$name"/> found a family recipe from the old country
              that uses <m><var name="$millilitersU"/></m> of soup stock.
              The recipe serves four, but <var name="$name"/> wants to scale it up to serve <var name="$nWord"/>.
              And none of <var name="$name"/>'s measuring devices use the metric system.
              How many cups of soup stock should <var name="$pronoun"/> use?
            </p>
            <p>
              <var name="$evaluator" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork copy="webwork-cooking-unit-conversion"/>
      </exercise>
      <!-- Find distance traveled -->
      <exercise>
        <webwork xml:id="webwork-multiply-speed-by-time">
          <pg-code>
            $mph = random(21,68,1);
            $mphU = NumberWithUnits("$mph mph");
            $min = random(3,23,1);
            $minU = NumberWithUnits("$min min");
            $hours = $min/60;
            $miles = $mph*$hours;
            $milesU = NumberWithUnits("$miles mi");
            $sex = list_random('female','male');
            $name = RandomName(sex=>$sex);
            $Pronoun = ($sex eq 'male') ? 'He' : 'She';
            $pronoun = lc($Pronoun);
          </pg-code>
          <statement>
            <p>
              <var name="$name"/> was driving at a steady speed of <m><var name="$mphU"/></m>
              for <m><var name="$min"/></m> minutes. How far did <var name="$pronoun"/> travel in that time?
            </p>
            <p>
              <var name="$milesU" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork copy="webwork-multiply-speed-by-time"/>
      </exercise>
      <!-- biomass growth -->
      <exercise>
        <webwork xml:id="webwork-multiply-growth-rate-by-time">
          <pg-code>
            $d = {name=>'d',conversion=>{factor=>24*60*60,s=>1}};
            $wk = {name=>'wk',conversion=>{factor=>7*24*60*60,s=>1}};
            $rate = random(0.1,0.5,0.01);
            $rateU = NumberWithUnits("$rate kg/d", {newUnit => $d});
            $weeks = random(3,23,1);
            $weeksU = NumberWithUnits("$weeks wk", {newUnit => $wk});
            $days = $weeks*7;
            $kilograms = $rate*$days;
            $kilogramsU = NumberWithUnits("$kilograms kg");
          </pg-code>
          <statement>
            <p>
              The algae in a pond is growing at a rate of <m><var name="$rateU"/></m>.
              How much algae is in the pond after <m><var name="$weeks"/></m> weeks?
            </p>
            <p>
              <var name="$kilogramsU" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork copy="webwork-multiply-growth-rate-by-time"/>
      </exercise>
      <!-- data transfer -->
      <exercise>
        <webwork xml:id="webwork-multiply-data-transfer-rate-by-time">
          <pg-code>
            $b = {name=>'b'};
            $B = {name=>'B', conversion=>{factor => 8, b => 1}};
            $kb = {name=>'kb', conversion=>{factor => 2**10, b => 1}};
            $kB = {name=>'kB', conversion=>{factor => 8*2**10, b => 1}};
            $Mb = {name=>'Mb', conversion=>{factor => 2**20, b => 1}};
            $MB = {name=>'MB', conversion=>{factor => 8*2**20, b => 1}};
            $GB = {name=>'GB', conversion=>{factor => 2**30, b => 1}};
            $TB = {name=>'TB', conversion=>{factor => 8*2**30, b => 1}};
            $Mbps = {name=>'Mbps', conversion=>{factor => 2**20, b => 1, s => -1}};
            $rate = random(10,100,1);
            $rateU = NumberWithUnits("$rate Mbps", {newUnit => $Mbps});
            $minutes = random(12,199,1);
            $minutesU = NumberWithUnits("$minutes min");
            $seconds = $minutes*60;
            $megabytes = $rate*$seconds/8;
            $megabytesU = NumberWithUnits("$megabytes MB", {newUnit => [$B,$kB,$MB,$GB,$TB]});
            $sex = list_random('female','male');
            $name = RandomName(sex=>$sex);
            $Pronoun = ($sex eq 'male') ? 'He' : 'She';
            $pronoun = lc($Pronoun);
          </pg-code>
          <statement>
            <p>
              <var name="$name"/> is downloading content at an average rate of <m><var name="$rateU"/></m> (megabits per second).
              After <m><var name="$minutes"/></m> minutes, how much has <var name="$pronoun"/> downloaded?
              It is appropriate to express an amount of data like this in bytes, kilobytes, megabytes, gigabytes, or terabytes.
            </p>
            <p>
              <var name="$megabytesU" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork copy="webwork-multiply-data-transfer-rate-by-time"/>
      </exercise>
    </exercisegroup>
  </exercises>

  <conclusion>
    <p>
      This section is adapted from
      <pubtitle>Dimensional Analysis</pubtitle><fn><url href="https://cnx.org/contents/hAiMlVjM@8.4:caPlSDX_@6/Dimensional-Analysis" /></fn>,
      <pubtitle>Converting Between Two Systems of Measurements</pubtitle><fn><url href="https://cnx.org/contents/hAiMlVjM@8.4:8DuPvYyV@7/Converting-Between-the-Two-Systems-of-Measurement" /></fn>,
      and <pubtitle>Converting Rates</pubtitle><fn><url href="https://cnx.org/contents/hAiMlVjM@8.5:jRv6NP4J@7/Converting-Rates" /></fn>
      by Wendy Lightheart, OpenStax CNX, which is licensed under CC BY 4.0<fn><url href="http://creativecommons.org/licenses/by/4.0" /></fn>
    </p>
  </conclusion>

</section>
