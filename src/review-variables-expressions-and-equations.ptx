<?xml version="1.0" encoding="UTF-8" ?>
<!-- *********************************************************************-->
<!-- Copyright 2016-2018                                                  -->
<!-- Portland Community College                                           -->
<!--                                                                      -->
<!-- This file is part of Open Resources for Community College Algebra    -->
<!-- (ORCCA).                                                             -->
<!-- *********************************************************************-->
<section xml:id="review-variables-expressions-and-equations" permid="CAy">
  <title>Variables, Expressions, and Equations Chapter Review</title>
  <subsection permid="iHH">
    <title>Variables and Evaluating Expressions</title>
    <p permid="FQQ">
      In <xref ref="section-variables-and-evaluating-expressions">Section</xref>
      we covered the definitions of variables and expressions,
      and how to evaluate an expression with a particular number.
      We learned the formulas for perimeter and area of rectangles,
      triangles,
      and circles.
    </p>

    <paragraphs permid="pgN">
      <title>Evaluating Expressions</title>
      <p permid="lXZ">
        When we evaluate an expression's value,
        we substitute each variable with its given value.
      </p>
    </paragraphs>

    <example permid="GeY">
      <p permid="xCx">
        Evaluate the value of <m>\frac{5}{9}(F - 32)</m> if <m>F=212</m>.
        <md permid="giN">
          <mrow>\frac{5}{9}(F - 32)\amp=\frac{5}{9}(212 - 32)</mrow>
          <mrow>\amp=\frac{5}{9}(180)</mrow>
          <mrow>\amp=100</mrow>
        </md>
      </p>
    </example>

    <paragraphs permid="VnW">
      <title>Substituting a Negative Number</title>
      <p permid="Sfi">
        When we substitute a variable with a negative number,
        it's important to use parentheses around the number.
      </p>
    </paragraphs>

    <example permid="mmh">
      <p permid="dJG">
        Evaluate the following expressions if <m>x=-3</m>.

        <ol label="a." cols="4" permid="cbx">
          <li permid="RCs">
            <p permid="YLs">
              <m>\begin{aligned}[t]
              x^2\amp=(-3)^2\\
              \amp=9
              \end{aligned}</m>
            </p>
          </li>

          <li permid="xJB">
            <p permid="ESB">
              <m>\begin{aligned}[t]
              x^3\amp=(-3)^3\\
              \amp=(-3)(-3)(-3)\\
              \amp=-27
              \end{aligned}</m>
            </p>
          </li>

          <li permid="dQK">
            <p permid="kZK">
              <m>\begin{aligned}[t]
              -x^2\amp=-(-3)^2\\
              \amp=-9
              \end{aligned}</m>
            </p>
          </li>

          <li permid="JXT">
            <p permid="RgT">
              <m>\begin{aligned}[t]
              -x^3\amp=-(-3)^3\\
              \amp=-(-27)\\
              \amp=27
              \end{aligned}</m>
            </p>
          </li>
        </ol>
      </p>
    </example>
  </subsection>

  <subsection permid="OOQ">
    <title>Geometry Formulas</title>
    <p permid="ymr">
      In <xref ref="section-geometry-formulas">Section</xref>
      we established the following formulas.
      <dl permid="ZgR">
        <li permid="bFY">
          <title>Perimeter of a Rectangle</title>
          <p permid="xoc">
            <m>P=2(\ell+w)</m>
          </p>
        </li>

        <li permid="HNh">
          <title>Area of a Rectangle</title>
          <p permid="dvl">
            <m>A=\ell w</m>
          </p>
        </li>

        <li permid="nUq">
          <title>Area of a Triangle</title>
          <p permid="JCu">
            <m>A=\frac{1}{2}bh</m>
          </p>
        </li>

        <li permid="Ubz">
          <title>Circumference of a Circle</title>
          <p permid="pJD">
            <m>c=2\pi r</m>
          </p>
        </li>

        <li permid="AiI">
          <title>Area of a Circle</title>
          <p permid="VQM">
            <m>A=\pi r^2</m>
          </p>
        </li>

        <li permid="gpR">
          <title>Volume of a Rectangular Prism</title>
          <p permid="BXV">
            <m>V=wdh</m>
          </p>
        </li>

        <li permid="Mxa">
          <title>Volume of a Cylinder</title>
          <p permid="ife">
            <m>V=\pi r^2h</m>
          </p>
        </li>

        <li permid="sEj">
          <title>Volume of a Rectangular Prism or Cylinder</title>
          <p permid="Omn">
            <m>V=Bh</m>
          </p>
        </li>
      </dl>
    </p>
  </subsection>

  <subsection permid="uVZ">
    <title>Combining Like Terms</title>
    <p permid="etA">
      In <xref ref="section-combining-like-terms">Section</xref>
      we covered the definitions of a term and how to combine like terms.
    </p>

    <example permid="Stq">
      <statement>
        <p permid="JQP">
          List the terms in the expression <m>5x-3y+\frac{2w}{3}</m>.
        </p>
      </statement>
      <solution permid="VCr">
        <p permid="jyS">
          The expression has three terms that are being added, <m>5x</m>,
          <m>-3y</m> and <m>\frac{2w}{3}</m>.
        </p>
      </solution>
    </example>

    <example permid="yAz">
      <statement>
        <p permid="pXY">
          Simplify the expression <m>5x-3x^2+2x+5x^2</m>,
          if possible, by combining like terms.
        </p>
      </statement>
      <solution permid="BJA">
        <p permid="PGb">
          This expression has four terms:
          <m>5x</m>, <m>-3x^2</m>, <m>2x</m>, and <m>5x^2</m>.
          Both <m>5x</m> and <m>2x</m> are like terms;
          also <m>-3x^2</m> and <m>5x^2</m> are like terms.
          When we combine like terms, we get:
          <me permid="MpW">
            5x-3x^2+2x+5x^2=7x+2x^2
          </me>
          Note that we cannot combine <m>7x</m> and <m>2x^2</m> because <m>x</m> and <m>x^2</m> represent different quantities.
        </p>
      </solution>
    </example>
  </subsection>

  <subsection permid="bdi">
    <title>Equations and Inequalities as True/False Statements</title>
    <p permid="KAJ">
      In <xref ref="section-equations-and-inequalities-as-true-false-statements">Section</xref>
      we covered the definitions of an equation and an inequality,
      as well as how to verify if a particular number is a solution to them.
    </p>

    <paragraphs permid="Bvf">
      <title>Checking Possible Solutions</title>
      <p permid="qHS">
        Given an equation or an inequality
        (with one variable),
        checking if some particular number is a solution is just a matter of replacing the value of the variable with the specified number and determining if the resulting equation/inequality is true or false.
        This may involve some amount of arithmetic simplification.
      </p>
    </paragraphs>

    <example permid="eHI">
      <statement>
        <p permid="Wfh">
          Is <m>-5</m> a solution to <m>2(x+3)-2=4-x</m>?
        </p>
      </statement>
      <solution permid="hQJ">
        <p permid="vNk">
          To find out,
          substitute in <m>-5</m> for <m>x</m> and see what happens.
          <md permid="sxf">
            <mrow>2(x+3)-2\amp=4-x</mrow>
            <mrow>2(\substitute{(-5)}+3)-2\amp\stackrel{?}{=}4-\substitute{(-5)}</mrow>
            <mrow>2(\highlight{-2})-2\amp\stackrel{?}{=}\highlight{9}</mrow>
            <mrow>\highlight{-4}-2\amp\stackrel{?}{=}9</mrow>
            <mrow>\highlight{-6}\amp\stackrel{\text{no}}{=}9</mrow>
          </md>
          So no, <m>-5</m> is not a solution to <m>2(x+3)-2=4-x</m>.
        </p>
      </solution>
    </example>
  </subsection>

  <subsection permid="Hkr">
    <title>Solving One-Step Equations</title>
    <p permid="WPb">
      In <xref ref="section-solving-one-step-equations">Section</xref>
      we covered to to add, subtract, multiply,
      or divide on both sides of an equation to isolate the variable,
      summarized in <xref ref="fact-properties-of-equivalent-equations">Fact</xref>.
      We also learned how to state our answer,
      either as a solution or a solution set.
      Last we discussed how to solve equations with fractions.
    </p>

    <paragraphs permid="hCo">
      <title>Solving One-Step Equations</title>
      <p permid="CWk">
        When we solve linear equations,
        we use <xref ref="fact-properties-of-equivalent-equations" text="title" /> and follow an algorithm to <xref ref="algorithm-steps-to-solve-one-step-linear-equation" text="title">solve a linear equation</xref>.
      </p>
    </paragraphs>

    <example permid="KOR">
      <statement>
        <p permid="Cmq">
          Solve for <m>g</m> in <m>\frac{1}{2}=\frac{2}{3}+g</m>.
        </p>
      </statement>
      <solution permid="NXS">
        <p permid="bUt">
          We will subtract <m>\frac{2}{3}</m> on both sides of the equation:
          <md permid="YEo">
            <mrow>\frac{1}{2}\amp=\frac{2}{3}+g</mrow>
            <mrow>\frac{1}{2}\subtractright{\frac{2}{3}}\amp=\frac{2}{3}+g\subtractright{\frac{2}{3}}</mrow>
            <mrow>\frac{3}{6}-\frac{4}{6}\amp=g</mrow>
            <mrow>-\frac{1}{6}\amp=g</mrow>
          </md>
        </p>

        <p permid="IbC">
          We will check the solution by substituting <m>g</m> in the original equation with <m>-\frac{1}{6}</m>:
          <md permid="ELx">
            <mrow>\frac{1}{2}\amp=\frac{2}{3}+g</mrow>
            <mrow>\frac{1}{2}\amp\stackrel{?}{=}\frac{2}{3}+\left(\substitute{-\frac{1}{6}}\right)</mrow>
            <mrow>\frac{1}{2}\amp\stackrel{?}{=}\frac{4}{6}+\left(-\frac{1}{6}\right)</mrow>
            <mrow>\frac{1}{2}\amp\stackrel{?}{=}\frac{3}{6}</mrow>
            <mrow>\frac{1}{2}\amp\stackrel{\checkmark}{=}\frac{1}{2}</mrow>
          </md>
          The solution <m>-\frac{1}{6}</m> is checked and the solution set is <m>\left\{-\frac{1}{6}\right\}</m>.
        </p>
      </solution>
    </example>
  </subsection>

  <subsection permid="nrA">
    <title>Solving One-Step Inequalities</title>
    <p permid="jdt">
      In <xref ref="section-solving-one-step-inequalities">Section</xref>
      we covered how solving inequalities is very much like how we solve equations,
      except that if we <xref ref="fact-changing-direction-of-inequality-sign" text="title">multiply or divide by a negative</xref>
      we switch the inequality sign.
    </p>

    <paragraphs permid="NJx">
      <title>Solving One-Step Inequalities</title>
      <p permid="PkC">
        When we solve linear inequalities,
        we also use <xref ref="fact-properties-of-equivalent-equations" text="title" /> with one small complication: When we multiply or divide by the same <em>negative</em>
        number on both sides of an inequality, the direction reverses!
      </p>
    </paragraphs>

    <example permid="qWa">
      <statement>
        <p permid="itz">
          Solve the inequality <m>-2x\geq12</m>.
          State the solution set with both interval notation and set-builder notation.
        </p>
      </statement>
      <solution permid="ufb">
        <p permid="oiL">
          To solve this inequality, we will divide each side by <m>-2</m>:
          <md permid="kSG">
            <mrow>-2x\amp\geq12</mrow>
            <mrow>\divideunder{-2x}{-2}\amp\highlight{{}\leq{}}\divideunder{12}{-2}\amp\amp\text{Note the change in direction.}</mrow>
            <mrow>x\amp\leq-6</mrow>
          </md>
          <ul permid="DyN">
            <li permid="Foa">
              <p permid="utw">
                The inequality's solution set in interval notation is <m>(-\infty,-6]</m>.
              </p>
            </li>

            <li permid="lvj">
              <p permid="aAF">
                The inequality's solution set in set-builder notation is <m>\{x\mid x\leq-6\}</m>.
              </p>
            </li>
          </ul>
        </p>
      </solution>
<!--                <p>Since there are infinitely many solutions, it's impossible to literally check them all. We found that all values of <m>x</m> for which <m>x\leq-6</m> are solutions, One approach is to check that <m>-6</m> satisfies the inequality, and also that one number less than <m>-6</m> (any number, your choice) is a solution.<md>
                    <mrow>-2x\amp\geq12\amp -2x\amp\ge12</mrow>
                    <mrow>-2(\substitute{-6})\amp\stackrel{?}{\geq}12\amp -2(\substitute{-7})\amp\stackrel{?}{\ge}12</mrow>
                    <mrow>12\amp\stackrel{\checkmark}{\geq}12\amp 14\amp\stackrel{\checkmark}{\ge}12</mrow>
                </md>
                </p>
-->
    </example>
  </subsection>

  <subsection permid="TyJ">
    <title>Percentages</title>
    <p permid="vrL">
      In <xref ref="section-percentages">Section</xref>
      we covered how to translate sentences with percentages into equations that we can solve.
    </p>

    <paragraphs permid="tQG">
      <title>Solving One-Step Equations Involving Percentages</title>
      <p permid="byU">
        An important skill for solving percent-related problems is to boil down a complicated word problem into a simple form like
        <q><m>2</m> is <m>50\%</m> of <m>4</m>.</q>
      </p>
    </paragraphs>

    <example permid="Xdj">
      <p permid="OAI">
        What percent of <m>2346.19</m> is <m>1995.98</m>?
      </p>

      <p permid="uHR">
        Using <m>P</m> to represent the unknown quantity,
        we write and solve the equation:
        <md permid="QZP">
          <mrow>\overbrace{\strut P}^{\text{what percent}}\overbrace{\strut \cdot}^{\text{of}} \overbrace{\strut 2346.19}^{\text{\$2346.19}}\amp\overbrace{\strut =}^{\text{is}}\overbrace{\strut 1995.98}^{\text{\$1995.98}}</mrow>
          <mrow>\divideunder{P\cdot 2346.19}{2346.19}\amp=\divideunder{1995.98}{2346.19}</mrow>
          <mrow>P\amp=0.85073\ldots</mrow>
          <mrow>P\amp\approx85.07\%</mrow>
        </md>
      </p>

      <p permid="aPa">
        In summary, <m>1995.98</m> is approximately <m>85.07\%</m> of <m>2346.19</m>.
      </p>
    </example>
  </subsection>

  <subsection permid="zFS">
    <title>Modeling with Equations and Inequalities</title>
    <p permid="HGd">
      In <xref ref="section-modeling-with-equations-and-inequalities">Section</xref>
      we covered how to translate phrases into mathematics,
      and how to set up equations and inequalities for application models.
    </p>

    <paragraphs permid="ZXP">
      <title>Modeling with Equations and Inequalities</title>
      <p permid="nNm">
        To set up an equation modeling a real world scenario,
        the first thing we need to do is to identify what variable we will use.
        The variable we use will be determined by whatever is unknown in our problem statement.
        Once we've identified and defined our variable,
        we'll use the numerical information provided in the equation to set up our equation.
      </p>
    </paragraphs>

    <example permid="Dks">
      <statement>
        <p permid="GWj">
          A bathtub contains
          <quantity>
            <mag>2.5</mag><unit base="foot" exp="3"/>
          </quantity>
          of water.
          More water is being poured in at a rate of
          <quantity>
            <mag>1.75</mag><unit base="foot" exp="3"/>
          </quantity>
          per minute.
          When will the amount of water in the bathtub reach
          <quantity>
            <mag>6.25</mag><unit base="foot" exp="3"/>
          </quantity>?
        </p>
      </statement>
      <solution permid="amk">
        <p permid="UpU">
          Since the question being asked in this problem starts with <q>when,</q>
          we immediately know that the unknown is time.
          As the volume of water in the tub is measured in
          <quantity>
            <unit base="foot" exp="3"/>
          </quantity>
          per minute, we know that time needs to be measured in minutes.
          We'll defined <m>t</m> to be the number of minutes that water is poured into the tub.
          Since each minute there are
          <quantity>
            <mag>1.75</mag><unit base="foot" exp="3"/>
          </quantity>
          of water added,
          we will add the expression <m>1.75t</m> to <m>2.5</m> to obtain the total amount of water.
          Thus the equation we set up is:
          <me permid="xgY">
            2.5+1.75t=6.25
          </me>
        </p>
      </solution>
    </example>
  </subsection>

  <subsection permid="fNb">
    <title>Introduction to Exponent Rules</title>
    <p permid="TUv">
      In <xref ref="section-introduction-to-exponent-rules">Section</xref>
      we covered the <xref ref="list-rules-of-exponents" text="title">rules of exponents for multiplication</xref>.
    </p>
            <!-- <paragraphs>
                <title>Rules of Exponents</title>
                <p>Let <m>x,</m> and <m>y</m> represent real numbers, variables, or algebraic expressions, and let <m>m</m> and <m>n</m> represent positive integers. Then the following properties hold:
                    <dl>
                        <li>
                            <title>Product of Powers</title>
                            <p><m>x^m\cdot x^n=x^{m+n}</m></p>
                        </li>
                        <li>
                            <title>Power to Power</title>
                            <p><m>(x^m)^n=x^{m\cdot n}</m></p>
                        </li>
                        <li>
                            <title>Product to Power</title>
                            <p><m>(xy)^n = x^n\cdot y^n</m></p>
                        </li>
                    </dl>
                </p>
            </paragraphs> -->
    <example permid="jrB">
      <statement>
        <p permid="nds">
          Simplify the following expressions using the rules of exponents:

          <ol label="a." cols="4" permid="IiG">
            <li permid="qfc">
              <p permid="GHO">
                <m>-2t^3\cdot 4t^5</m>
              </p>
            </li>

            <li permid="Wml">
              <p permid="mOX">
                <m>5\left(v^4\right)^2</m>
              </p>
            </li>

            <li permid="Ctu">
              <p permid="SWg">
                <m>-(3u)^2</m>
              </p>
            </li>

            <li permid="iAD">
              <p permid="zdp">
                <m>(-3z)^2</m>
              </p>
            </li>
          </ol>
        </p>
      </statement>
      <solution permid="Gtt">
        <p permid="Axd">
          <ol label="a." cols="4" permid="jFW">
            <li permid="OHM">
              <p permid="fky">
                <m>-2t^3\cdot 4t^5=-8t^8</m>
              </p>
            </li>

            <li permid="uOV">
              <p permid="LrH">
                <m>5\left(v^4\right)^2=5v^8</m>
              </p>
            </li>

            <li permid="aWe">
              <p permid="ryQ">
                <m>-(3u)^2=-9u^2</m>
              </p>
            </li>

            <li permid="Hdn">
              <p permid="XFZ">
                <m>(-3z)^2=9z^2</m>
              </p>
            </li>
          </ol>
        </p>
      </solution>
    </example>
  </subsection>

  <subsection permid="LUk">
    <title>Simplifying Expressions</title>
    <p permid="AbE">
      In <xref ref="section-simplifying-expressions">Section</xref>
      we covered the definitions of the identities and inverses,
      and the various <xref ref="list-algebraic-properties" text="title">algebraic properties</xref>.
      We then learned about the order of operations.
    </p>
<!--
        <paragraphs>
            <title>Algebraic Properties</title>
            <p>Let <m>a</m>, <m>b</m>, and <m>c</m> represent real numbers, variables, or algebraic expressions. Then the following properties hold:<dl>
                <li>
                    <title>Commutative Property of Multiplication</title><idx><h>properties</h><h>commutative property of multiplication</h></idx><idx><h>multiplication</h><h>commutative property of</h></idx>
                    <p><men xml:id="equation-commutative-property-multiplication">a\cdot b=b\cdot a</men></p>
                </li>
                <li>
                    <title>Associative Property of Multiplication</title><idx><h>properties</h><h>associative property of multiplication</h></idx><idx><h>multiplication</h><h>associative property of</h></idx>
                    <p><me>a\cdot(b\cdot c)=(a\cdot b)\cdot c</me></p>
                </li>
                <li>
                    <title>Commutative Property of Addition</title><idx><h>properties</h><h>commutative property of addition</h></idx><idx><h>addition</h><h>commutative property of</h></idx>
                    <p><me>a+b=b+a</me></p>
                </li>
                <li>
                    <title>Associative Property of Addition</title><idx><h>properties</h><h>associative property of addition</h></idx><idx><h>addition</h><h>associative property of</h></idx>
                    <p><me>a+(b+c)=(a+b)+c</me></p>
                </li>
                <li>
                    <title>Distributive Property</title><idx><h>properties</h><h>distributive property</h></idx>
                    <p><men xml:id="equation-distributive-property">a(b+c)=ab+ac</men></p>
                </li>
            </dl></p>
        </paragraphs> -->
    <example permid="PyK">
      <statement>
        <p permid="TkB">
          Use the associative, commutative,
          and distributive properties to simplify the expression <m>5x+9(-2x+3)</m> as much as possible.
        </p>
      </statement>
      <solution permid="mAC">
        <p permid="gEm">
          We will remove parentheses by the distributive property,
          and then combine like terms:
          <md permid="doh">
            <mrow>5x+9(-2x+3)\amp=5x+9(-2x+3)</mrow>
            <mrow>\amp=5x+9(-2x)+9(3)</mrow>
            <mrow>\amp=5x-18x+27</mrow>
            <mrow>\amp=-13x+27</mrow>
          </md>
        </p>
      </solution>
    </example>
  </subsection>

  <exercises permid="sbt">
    <exercisegroup cols="2" permid="YiC">

      <exercise permid="UiD">
        <webwork source="BasicAlgebra/EvaluateExpressions/EvaluateFormula70.pg" />
      </exercise>

      <exercise permid="ApM">
        <webwork source="BasicAlgebra/EvaluateExpressions/EvaluateFormula70.pg" />
      </exercise>

    </exercisegroup>
    <exercisegroup cols="2" permid="EpL">

      <exercise permid="gwV">
        <webwork source="BasicAlgebra/EvaluateExpressions/FahrenheitCelsius10.pg" />
      </exercise>

      <exercise permid="MEe">
        <webwork source="BasicAlgebra/EvaluateExpressions/FahrenheitCelsius10.pg" />
      </exercise>

    </exercisegroup>
    <exercisegroup cols="2" permid="kwU">

      <exercise permid="sLn">
        <webwork source="BasicAlgebra/EvaluateExpressions/evaluate100.pg" />
      </exercise>

      <exercise permid="YSw">
        <webwork source="BasicAlgebra/EvaluateExpressions/evaluate100.pg" />
      </exercise>

      <exercise permid="EZF">
        <webwork source="BasicAlgebra/EvaluateExpressions/evaluate120.pg" />
      </exercise>

      <exercise permid="lgO">
        <webwork source="BasicAlgebra/EvaluateExpressions/evaluate120.pg" />
      </exercise>

      <exercise permid="RnX">
        <webwork>
            <setup>

            <pg-code>
                Context("Numeric");
                Context()->noreduce('(-x)+y','(-x)-y');
                Context()->variables->are(x=>'Real',y=>'Real',z=>'Real',t=>'Real',s=>'Real');
                @termcount = (1,2,2,3,3,4,4)[NchooseK(7,4)];
                for $i (0..3) {
                    $expression[$i] = Formula("0");
                    $answers[$i] = List();
                    my @vars;
                    my @exps;
                    for $j (1..$termcount[$i]) {
                        my $nextvar = list_random('x','y','z','t','s');
                        my $nextexp;
                        do {$nextexp = list_random(0,1,1,1,2,2);} until ($exps[$j-2] != 0 or $nextexp != 0);
                        push(@vars,$nextvar);
                        push(@exps,$nextexp);
                        $string = non_zero_random(-9,9,1).$vars[$j-1].'^'.$exps[$j-1];
                        $expression[$i] = Compute("$expression[$i]+ $string")->reduce->reduce;
                        $answers[$i] = List($answers[$i]->value,Formula("$string")->reduce->reduce);
                    }
                }
                $exp0=$expression[0];
                $exp1=$expression[1];
                $exp2=$expression[2];
                $exp3=$expression[3];
            </pg-code>
            </setup>
            <statement>
              <p permid="zrK">
                List the terms in each expression.

                <ol label="a." permid="opP">
                  <li permid="nkw">
                    <p permid="DNi">
                      <m><var name="$exp0" /></m>
                    </p>

                    <p permid="jUr">
                      <var name="$answers[0]" width="25" />
                    </p>
                  </li>

                  <li permid="TrF">
                    <p permid="QbA">
                      <m><var name="$exp1" /></m>
                    </p>

                    <p permid="wiJ">
                      <var name="$answers[1]" width="25" />
                    </p>
                  </li>

                  <li permid="zyO">
                    <p permid="cpS">
                      <m><var name="$exp2" /></m>
                    </p>

                    <p permid="Ixb">
                      <var name="$answers[2]" width="25" />
                    </p>
                  </li>

                  <li permid="fFX">
                    <p permid="oEk">
                      <m><var name="$exp3" /></m>
                    </p>

                    <p permid="ULt">
                      <var name="$answers[3]" width="25" />
                    </p>
                  </li>
                </ol>
              </p>
            </statement>
            <solution permid="SHL">
              <p permid="MLv">
                <ol label="a." permid="PNf">
                  <li permid="LNg">
                    <p permid="ASC">
                      The terms are <m><var name="$answers[0]" /></m>.
                    </p>
                  </li>

                  <li permid="rUp">
                    <p permid="gZL">
                      The terms are <m><var name="$answers[1]" /></m>.
                    </p>
                  </li>

                  <li permid="Yby">
                    <p permid="NgU">
                      The terms are <m><var name="$answers[2]" /></m>.
                    </p>
                  </li>

                  <li permid="EiH">
                    <p permid="tod">
                      The terms are <m><var name="$answers[3]" /></m>.
                    </p>
                  </li>
                </ol>
              </p>
            </solution>
        </webwork>
      </exercise>

      <exercise permid="xvg">
        <webwork>
            <setup>

            <pg-code>
                Context("Numeric");
                Context()->noreduce('(-x)+y','(-x)-y');
                Context()->variables->are(x=>'Real',y=>'Real',z=>'Real',t=>'Real',s=>'Real');
                @termcount = (1,2,2,3,3,4,4)[NchooseK(7,4)];
                for $i (0..3) {
                    $expression[$i] = Formula("0");
                    $answers[$i] = List();
                    my @vars;
                    my @exps;
                    for $j (1..$termcount[$i]) {
                        my $nextvar = list_random('x','y','z','t','s');
                        my $nextexp;
                        do {$nextexp = list_random(0,1,1,1,2,2);} until ($exps[$j-2] != 0 or $nextexp != 0);
                        push(@vars,$nextvar);
                        push(@exps,$nextexp);
                        $string = non_zero_random(-9,9,1).$vars[$j-1].'^'.$exps[$j-1];
                        $expression[$i] = Compute("$expression[$i]+ $string")->reduce->reduce;
                        $answers[$i] = List($answers[$i]->value,Formula("$string")->reduce->reduce);
                    }
                }
                $exp0=$expression[0];
                $exp1=$expression[1];
                $exp2=$expression[2];
                $exp3=$expression[3];
            </pg-code>
            </setup>
            <statement>
              <p permid="fyT">
                List the terms in each expression.

                <ol label="a." permid="UwY">
                  <li permid="kpQ">
                    <p permid="Zvm">
                      <m><var name="$exp0" /></m>
                    </p>

                    <p permid="FCv">
                      <var name="$answers[0]" width="25" />
                    </p>
                  </li>

                  <li permid="QwZ">
                    <p permid="lJE">
                      <m><var name="$exp1" /></m>
                    </p>

                    <p permid="RQN">
                      <var name="$answers[1]" width="25" />
                    </p>
                  </li>

                  <li permid="wEi">
                    <p permid="xXW">
                      <m><var name="$exp2" /></m>
                    </p>

                    <p permid="eff">
                      <var name="$answers[2]" width="25" />
                    </p>
                  </li>

                  <li permid="cLr">
                    <p permid="Kmo">
                      <m><var name="$exp3" /></m>
                    </p>

                    <p permid="qtx">
                      <var name="$answers[3]" width="25" />
                    </p>
                  </li>
                </ol>
              </p>
            </statement>
            <solution permid="yOU">
              <p permid="sSE">
                <ol label="a." permid="vUo">
                  <li permid="ISA">
                    <p permid="WAG">
                      The terms are <m><var name="$answers[0]" /></m>.
                    </p>
                  </li>

                  <li permid="oZJ">
                    <p permid="CHP">
                      The terms are <m><var name="$answers[1]" /></m>.
                    </p>
                  </li>

                  <li permid="VgS">
                    <p permid="iOY">
                      The terms are <m><var name="$answers[2]" /></m>.
                    </p>
                  </li>

                  <li permid="Bob">
                    <p permid="OWh">
                      The terms are <m><var name="$answers[3]" /></m>.
                    </p>
                  </li>
                </ol>
              </p>
            </solution>
        </webwork>
      </exercise>

      <exercise permid="dCp">
        <webwork>
            <setup>

            <pg-code>
                Context("Numeric");
                Context()->noreduce('(-x)+y','(-x)-y');
                Context()->variables->are(x=>'Real',y=>'Real',z=>'Real',t=>'Real',s=>'Real');
                Context()->operators->set(
                    '*' => {class => 'bizarro::BOP::multiply', isCommand => 1},
                );
                @termcount = (2,2,2,3,3,3,4,4)[NchooseK(8,4)];
                for $i (0..3) {
                    $expression[$i] = Formula("0");
                    my @vars;
                    my @exps;
                    for $j (1..$termcount[$i]) {
                        my $nextvar = list_random(@vars,@vars,@vars,'x','y','z','t','s');
                        my $nextexp;
                        do {$nextexp = list_random(@exps,@exps,@exps,0,1,1,1,2,2);} until ($exps[$j-2] != 0 or $nextexp != 0);
                        push(@vars,$nextvar);
                        push(@exps,$nextexp);
                        $string = non_zero_random(-9,9,1).$vars[$j-1].'^'.$exps[$j-1];
                        $expression[$i] = Compute("$expression[$i]+$string")->reduce->reduce;
                    }
                }
                $exp0=$expression[0];
                $exp1=$expression[1];
                $exp2=$expression[2];
                $exp3=$expression[3];
                for $i (0..3) {
                    $answers[$i] = Formula($expression[$i]->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'+'.
                            $expression[$i]->D('x')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'x+'.
                            $expression[$i]->D('y')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'y+'.
                            $expression[$i]->D('z')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'z+'.
                            $expression[$i]->D('s')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'s+'.
                            $expression[$i]->D('t')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'t+'.
                            $expression[$i]->D('x')->D('x')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'/2x^2+'.
                            $expression[$i]->D('y')->D('y')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'/2y^2+'.
                            $expression[$i]->D('z')->D('z')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'/2z^2+'.
                            $expression[$i]->D('s')->D('s')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'/2s^2+'.
                            $expression[$i]->D('t')->D('t')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'/2t^2')->reduce->reduce;
                    $evaluator[$i] = $answers[$i] -> cmp(
                       checker=>sub{
                          my ( $correct, $student, $ansHash ) = @_;
                          return 0 if $ansHash->{isPreview} || $correct != $student;
                          $student = $ansHash->{student_formula};
                          $correct = $correct->{original_formula} if defined $correct->{original_formula};
                          $student = Formula("$student"); $correct = Formula("$correct");
                          return 0 unless ($correct == $student);
                          Context()->flags->set(bizarroMul=>1);
                          delete $correct->{test_values}, $student->{test_values};
                          my $OK = (($correct == $student) or ($student == $correct));
                          Context()->flags->set(bizarroMul=>0);
                          Value::Error("Your answer is not in the expected form. It might not be fully simplified.") unless $OK;
                          return $OK;
                    });
                }
            </pg-code>
            </setup>
            <statement>
              <p permid="LGc">
                Simplify each expression, if possible, by combining like terms.
              </p>
              <instruction>
                If the expression cannot be simplified further, just enter it as it is.
              </instruction>
              <p permid="rNl">
                <ol label="a." permid="AEh">
                  <li permid="hvk">
                    <p permid="vdq">
                      <m><var name="$exp0" /></m>
                    </p>

                    <p permid="bkz">
                      <var name="$evaluator[0]" width="25" />
                    </p>
                  </li>

                  <li permid="NCt">
                    <p permid="HrI">
                      <m><var name="$exp1" /></m>
                    </p>

                    <p permid="nyR">
                      <var name="$evaluator[1]" width="25" />
                    </p>
                  </li>

                  <li permid="tJC">
                    <p permid="TGa">
                      <m><var name="$exp2" /></m>
                    </p>

                    <p permid="zNj">
                      <var name="$evaluator[2]" width="25" />
                    </p>
                  </li>

                  <li permid="ZQL">
                    <p permid="fUs">
                      <m><var name="$exp3" /></m>
                    </p>

                    <p permid="MbB">
                      <var name="$evaluator[3]" width="25" />
                    </p>
                  </li>
                </ol>
              </p>
            </statement>
        </webwork>
      </exercise>

      <exercise permid="JJy">
        <webwork>
            <setup>

            <pg-code>
                Context("Numeric");
                Context()->noreduce('(-x)+y','(-x)-y');
                Context()->variables->are(x=>'Real',y=>'Real',z=>'Real',t=>'Real',s=>'Real');
                Context()->operators->set(
                    '*' => {class => 'bizarro::BOP::multiply', isCommand => 1},
                );
                @termcount = (2,2,2,3,3,3,4,4)[NchooseK(8,4)];
                for $i (0..3) {
                    $expression[$i] = Formula("0");
                    my @vars;
                    my @exps;
                    for $j (1..$termcount[$i]) {
                        my $nextvar = list_random(@vars,@vars,@vars,'x','y','z','t','s');
                        my $nextexp;
                        do {$nextexp = list_random(@exps,@exps,@exps,0,1,1,1,2,2);} until ($exps[$j-2] != 0 or $nextexp != 0);
                        push(@vars,$nextvar);
                        push(@exps,$nextexp);
                        $string = non_zero_random(-9,9,1).$vars[$j-1].'^'.$exps[$j-1];
                        $expression[$i] = Compute("$expression[$i]+$string")->reduce->reduce;
                    }
                }
                $exp0=$expression[0];
                $exp1=$expression[1];
                $exp2=$expression[2];
                $exp3=$expression[3];
                for $i (0..3) {
                    $answers[$i] = Formula($expression[$i]->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'+'.
                            $expression[$i]->D('x')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'x+'.
                            $expression[$i]->D('y')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'y+'.
                            $expression[$i]->D('z')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'z+'.
                            $expression[$i]->D('s')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'s+'.
                            $expression[$i]->D('t')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'t+'.
                            $expression[$i]->D('x')->D('x')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'/2x^2+'.
                            $expression[$i]->D('y')->D('y')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'/2y^2+'.
                            $expression[$i]->D('z')->D('z')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'/2z^2+'.
                            $expression[$i]->D('s')->D('s')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'/2s^2+'.
                            $expression[$i]->D('t')->D('t')->eval(x=>0,y=>0,z=>0,t=>0,s=>0).'/2t^2')->reduce->reduce;
                    $evaluator[$i] = $answers[$i] -> cmp(
                       checker=>sub{
                          my ( $correct, $student, $ansHash ) = @_;
                          return 0 if $ansHash->{isPreview} || $correct != $student;
                          $student = $ansHash->{student_formula};
                          $correct = $correct->{original_formula} if defined $correct->{original_formula};
                          $student = Formula("$student"); $correct = Formula("$correct");
                          return 0 unless ($correct == $student);
                          Context()->flags->set(bizarroMul=>1);
                          delete $correct->{test_values}, $student->{test_values};
                          my $OK = (($correct == $student) or ($student == $correct));
                          Context()->flags->set(bizarroMul=>0);
                          Value::Error("Your answer is not in the expected form. It might not be fully simplified.") unless $OK;
                          return $OK;
                    });
                }
            </pg-code>
            </setup>
            <statement>
              <p permid="XUu">
                Simplify each expression, if possible, by combining like terms.
              </p>
              <instruction>
                If the expression cannot be simplified further, just enter it as it is.
              </instruction>
              <p permid="EbD">
                <ol label="a." permid="gLq">
                  <li permid="FXU">
                    <p permid="siK">
                      <m><var name="$exp0" /></m>
                    </p>

                    <p permid="YpT">
                      <var name="$evaluator[0]" width="25" />
                    </p>
                  </li>

                  <li permid="mfd">
                    <p permid="Exc">
                      <m><var name="$exp1" /></m>
                    </p>

                    <p permid="kEl">
                      <var name="$evaluator[1]" width="25" />
                    </p>
                  </li>

                  <li permid="Smm">
                    <p permid="QLu">
                      <m><var name="$exp2" /></m>
                    </p>

                    <p permid="wSD">
                      <var name="$evaluator[2]" width="25" />
                    </p>
                  </li>

                  <li permid="ytv">
                    <p permid="cZM">
                      <m><var name="$exp3" /></m>
                    </p>

                    <p permid="JgV">
                      <var name="$evaluator[3]" width="25" />
                    </p>
                  </li>
                </ol>
              </p>
            </statement>
        </webwork>
      </exercise>

      <exercise permid="pQH">
        <webwork>
            <setup>

            <pg-code>
                Context("Fraction");
                Context()->noreduce('(-x)+y','(-x)-y');
                Context()->flags->set(reduceConstants=>0);
                Context()->variables->are(x=>'Real',y=>'Real',z=>'Real',t=>'Real',s=>'Real');
                Context()->operators->set(
                    '*' => {class => 'bizarro::BOP::multiply', isCommand => 1},
                );
                @termcount = (2,2,2,3,3,3,4,4)[NchooseK(8,4)];
                for $i (0..3) {
                    $expression[$i] = Formula("0");
                    my @vars;
                    my @exps;
                    for $j (1..$termcount[$i]) {
                        my $nextvar = list_random(@vars,@vars,@vars,'x','y','z','t','s');
                        my $nextexp;
                        do {$nextexp = list_random(@exps,@exps,@exps,0,1,1,1,2,2);} until ($exps[$j-2] != 0 or $nextexp != 0);
                        push(@vars,$nextvar);
                        push(@exps,$nextexp);
                        $string = Fraction(non_zero_random(-9,9,1),non_zero_random(-9,9,1)).$vars[$j-1].'^'.$exps[$j-1];
                        $expression[$i] = Compute("$expression[$i]+$string")->reduce->reduce;
                    }
                }
                $exp0=$expression[0];
                $exp1=$expression[1];
                $exp2=$expression[2];
                $exp3=$expression[3];
                for $i (0..3) {
                    $answers[$i] = Formula(Fraction($expression[$i]->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'+'.
                            Fraction($expression[$i]->D('x')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'x+'.
                            Fraction($expression[$i]->D('y')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'y+'.
                            Fraction($expression[$i]->D('z')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'z+'.
                            Fraction($expression[$i]->D('s')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'s+'.
                            Fraction($expression[$i]->D('t')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'t+'.
                            Fraction($expression[$i]->D('x')->D('x')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'/2x^2+'.
                            Fraction($expression[$i]->D('y')->D('y')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'/2y^2+'.
                            Fraction($expression[$i]->D('z')->D('z')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'/2z^2+'.
                            Fraction($expression[$i]->D('s')->D('s')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'/2s^2+'.
                            Fraction($expression[$i]->D('t')->D('t')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'/2t^2')->reduce->reduce;
                    $evaluator[$i] = $answers[$i] -> cmp(
                       checker=>sub{
                          my ( $correct, $student, $ansHash ) = @_;
                          return 0 if $ansHash->{isPreview} || $correct != $student;
                          $student = $ansHash->{student_formula};
                          $correct = $correct->{original_formula} if defined $correct->{original_formula};
                          $student = Formula("$student"); $correct = Formula("$correct");
                          return 0 unless ($correct == $student);
                          Context()->flags->set(bizarroMul=>1);
                          delete $correct->{test_values}, $student->{test_values};
                          my $OK = (($correct == $student) or ($student == $correct));
                          Context()->flags->set(bizarroMul=>0);
                          Value::Error("Your answer is not in the expected form. It might not be fully simplified.") unless $OK;
                          return $OK;
                    });
                }
            </pg-code>
            </setup>
            <statement>
              <p permid="kiM">
                Simplify each expression, if possible, by combining like terms.
              </p>
              <instruction>
                If the expression cannot be simplified further, just enter it as it is.
              </instruction>
              <p permid="QpV">
                <ol label="a." permid="MSz">
                  <li permid="eAE">
                    <p permid="poe">
                      <m><var name="$exp0" /></m>
                    </p>

                    <p permid="Vvn">
                      <var name="$evaluator[0]" width="25" />
                    </p>
                  </li>

                  <li permid="KHN">
                    <p permid="BCw">
                      <m><var name="$exp1" /></m>
                    </p>

                    <p permid="hJF">
                      <var name="$evaluator[1]" width="25" />
                    </p>
                  </li>

                  <li permid="qOW">
                    <p permid="NQO">
                      <m><var name="$exp2" /></m>
                    </p>

                    <p permid="tXX">
                      <var name="$evaluator[2]" width="25" />
                    </p>
                  </li>

                  <li permid="WWf">
                    <p permid="afg">
                      <m><var name="$exp3" /></m>
                    </p>

                    <p permid="Gmp">
                      <var name="$evaluator[3]" width="25" />
                    </p>
                  </li>
                </ol>
              </p>
            </statement>
        </webwork>
      </exercise>

      <exercise permid="VXQ">
        <webwork>
            <setup>

            <pg-code>
                Context("Fraction");
                Context()->noreduce('(-x)+y','(-x)-y');
                Context()->flags->set(reduceConstants=>0);
                Context()->variables->are(x=>'Real',y=>'Real',z=>'Real',t=>'Real',s=>'Real');
                Context()->operators->set(
                    '*' => {class => 'bizarro::BOP::multiply', isCommand => 1},
                );
                @termcount = (2,2,2,3,3,3,4,4)[NchooseK(8,4)];
                for $i (0..3) {
                    $expression[$i] = Formula("0");
                    my @vars;
                    my @exps;
                    for $j (1..$termcount[$i]) {
                        my $nextvar = list_random(@vars,@vars,@vars,'x','y','z','t','s');
                        my $nextexp;
                        do {$nextexp = list_random(@exps,@exps,@exps,0,1,1,1,2,2);} until ($exps[$j-2] != 0 or $nextexp != 0);
                        push(@vars,$nextvar);
                        push(@exps,$nextexp);
                        $string = Fraction(non_zero_random(-9,9,1),non_zero_random(-9,9,1)).$vars[$j-1].'^'.$exps[$j-1];
                        $expression[$i] = Compute("$expression[$i]+$string")->reduce->reduce;
                    }
                }
                $exp0=$expression[0];
                $exp1=$expression[1];
                $exp2=$expression[2];
                $exp3=$expression[3];
                for $i (0..3) {
                    $answers[$i] = Formula(Fraction($expression[$i]->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'+'.
                            Fraction($expression[$i]->D('x')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'x+'.
                            Fraction($expression[$i]->D('y')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'y+'.
                            Fraction($expression[$i]->D('z')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'z+'.
                            Fraction($expression[$i]->D('s')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'s+'.
                            Fraction($expression[$i]->D('t')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'t+'.
                            Fraction($expression[$i]->D('x')->D('x')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'/2x^2+'.
                            Fraction($expression[$i]->D('y')->D('y')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'/2y^2+'.
                            Fraction($expression[$i]->D('z')->D('z')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'/2z^2+'.
                            Fraction($expression[$i]->D('s')->D('s')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'/2s^2+'.
                            Fraction($expression[$i]->D('t')->D('t')->eval(x=>0,y=>0,z=>0,t=>0,s=>0)).'/2t^2')->reduce->reduce;
                    $evaluator[$i] = $answers[$i] -> cmp(
                       checker=>sub{
                          my ( $correct, $student, $ansHash ) = @_;
                          return 0 if $ansHash->{isPreview} || $correct != $student;
                          $student = $ansHash->{student_formula};
                          $correct = $correct->{original_formula} if defined $correct->{original_formula};
                          $student = Formula("$student"); $correct = Formula("$correct");
                          return 0 unless ($correct == $student);
                          Context()->flags->set(bizarroMul=>1);
                          delete $correct->{test_values}, $student->{test_values};
                          my $OK = (($correct == $student) or ($student == $correct));
                          Context()->flags->set(bizarroMul=>0);
                          Value::Error("Your answer is not in the expected form. It might not be fully simplified.") unless $OK;
                          return $OK;
                    });
                }
            </pg-code>
            </setup>
            <statement>
              <p permid="wxe">
                Simplify each expression, if possible, by combining like terms.
              </p>
              <instruction>
                If the expression cannot be simplified further, just enter it as it is.
              </instruction>
              <p permid="cEn">
                <ol label="a." permid="sZI">
                  <li permid="Ddo">
                    <p permid="mty">
                      <m><var name="$exp0" /></m>
                    </p>

                    <p permid="SAH">
                      <var name="$evaluator[0]" width="25" />
                    </p>
                  </li>

                  <li permid="jkx">
                    <p permid="yHQ">
                      <m><var name="$exp1" /></m>
                    </p>

                    <p permid="eOZ">
                      <var name="$evaluator[1]" width="25" />
                    </p>
                  </li>

                  <li permid="PrG">
                    <p permid="KWi">
                      <m><var name="$exp2" /></m>
                    </p>

                    <p permid="rdr">
                      <var name="$evaluator[2]" width="25" />
                    </p>
                  </li>

                  <li permid="vyP">
                    <p permid="XkA">
                      <m><var name="$exp3" /></m>
                    </p>

                    <p permid="DrJ">
                      <var name="$evaluator[3]" width="25" />
                    </p>
                  </li>
                </ol>
              </p>
            </statement>
        </webwork>
      </exercise>

      <exercise permid="CeZ">
        <webwork >
        <setup>

            <pg-code>
                Context("Numeric");
                Context()->noreduce('(-x)-y','(-x)+y');

                $x = non_zero_random(-5,5,1);

                $a = random(2,5,1);
                $b = non_zero_random(-5,5,1);
                $left = Compute("$a*x+$b")->reduce;
                $c = non_zero_random(-5,5,1);

                $ans = random(1,2,1);
                $d = ($ans==1) ? -($a*$x+$x+$b-$c) : -($a*$x+$x+$b-$c)+non_zero_random(-2,2,1);
                $right = Compute("$c-($d+x)")->reduce;
                $leftValue = $left->eval(x=>$x);
                $rightValue = $right->eval(x=>$x);

                $ax = $a*$x;
                $dx = $d+$x;
                $trueOrFalse = ($ans==1) ? "true" : "false";
                $isOrNot = ($ans==1) ? "is" : "is not";

                $yesno=PopUp(['?','is', 'is not'],$ans);
            </pg-code>
        </setup>
        <statement>
          <p permid="ILw">
            Is <m><var name="$x" /></m> a solution for <m>x</m> in the equation <m><var name="$left" />=<var name="$right" /></m>?
            Evaluating the left and right sides gives:
          </p>

          <sidebyside margins="0%" permid="vFT">

            <tabular permid="hYa">
              <col halign="right" />
              <col halign="center" />
              <col halign="left" />
              <row>
                <cell><m><var name="$left" /></m></cell>
                <cell><m>=</m></cell>
                <cell><m><var name="$right" /></m></cell>
              </row>
              <row>
                <cell><var name="$leftValue" width="2"/></cell>
                <cell><m>{}\stackrel{?}{=}{}</m></cell>
                <cell><var name="$rightValue" width="2"/></cell>
              </row>
            </tabular>

          </sidebyside>

          <p permid="oSF">
            So <m><var name="$x" /></m> <var name="$yesno" form="popup"/> a solution to <m><var name="$left" />=<var name="$right" /></m>.
          </p>
        </statement>
        <solution permid="eWd">
          <p permid="YZN">
            To check whether a number is a solution or not,
            we substitute the variable with the given value <m><var name="$x" /></m>,
            and we have:
            <md permid="Jvq">
              <mrow><var name="$left" />\amp=<var name="$right" /></mrow>
              <mrow><var name="$a" />(<var name="$x" />)+<var name="$b" />\amp{}\stackrel{?}{=}{}<var name="$c" />-(<var name="$d" />+<var name="$x" />)</mrow>
              <mrow><var name="$ax" />+<var name="$b" />\amp{}\stackrel{?}{=}{}<var name="$c" />-(<var name="$dx" />)</mrow>
              <mrow><var name="$leftValue" />\amp{}\stackrel{?}{=}{}<var name="$rightValue" /></mrow>
            </md>
            Since the equation is <var name="$trueOrFalse" />,
            the number <m><var name="$x" /></m> <var name="$isOrNot" /> a solution of the equation <m><var name="$left" />=<var name="$right" /></m>.
          </p>
        </solution>
        </webwork>
      </exercise>

      <exercise permid="imi">
        <webwork >
        <setup>

            <pg-code>
                Context("Numeric");
                Context()->noreduce('(-x)-y','(-x)+y');

                $x = non_zero_random(-5,5,1);

                $a = random(2,5,1);
                $b = non_zero_random(-5,5,1);
                $left = Compute("$a*x+$b")->reduce;
                $c = non_zero_random(-5,5,1);

                $ans = random(1,2,1);
                $d = ($ans==1) ? -($a*$x+$x+$b-$c) : -($a*$x+$x+$b-$c)+non_zero_random(-2,2,1);
                $right = Compute("$c-($d+x)")->reduce;
                $leftValue = $left->eval(x=>$x);
                $rightValue = $right->eval(x=>$x);

                $ax = $a*$x;
                $dx = $d+$x;
                $trueOrFalse = ($ans==1) ? "true" : "false";
                $isOrNot = ($ans==1) ? "is" : "is not";

                $yesno=PopUp(['?','is', 'is not'],$ans);
            </pg-code>
        </setup>
        <statement>
          <p permid="UZO">
            Is <m><var name="$x" /></m> a solution for <m>x</m> in the equation <m><var name="$left" />=<var name="$right" /></m>?
            Evaluating the left and right sides gives:
          </p>

          <sidebyside margins="0%" permid="bNc">

            <tabular permid="Ofj">
              <col halign="right" />
              <col halign="center" />
              <col halign="left" />
              <row>
                <cell><m><var name="$left" /></m></cell>
                <cell><m>=</m></cell>
                <cell><m><var name="$right" /></m></cell>
              </row>
              <row>
                <cell><var name="$leftValue" width="2"/></cell>
                <cell><m>{}\stackrel{?}{=}{}</m></cell>
                <cell><var name="$rightValue" width="2"/></cell>
              </row>
            </tabular>

          </sidebyside>

          <p permid="BgX">
            So <m><var name="$x" /></m> <var name="$yesno" form="popup"/> a solution to <m><var name="$left" />=<var name="$right" /></m>.
          </p>
        </statement>
        <solution permid="Ldm">
          <p permid="FgW">
            To check whether a number is a solution or not,
            we substitute the variable with the given value <m><var name="$x" /></m>,
            and we have:
            <md permid="pCz">
              <mrow><var name="$left" />\amp=<var name="$right" /></mrow>
              <mrow><var name="$a" />(<var name="$x" />)+<var name="$b" />\amp{}\stackrel{?}{=}{}<var name="$c" />-(<var name="$d" />+<var name="$x" />)</mrow>
              <mrow><var name="$ax" />+<var name="$b" />\amp{}\stackrel{?}{=}{}<var name="$c" />-(<var name="$dx" />)</mrow>
              <mrow><var name="$leftValue" />\amp{}\stackrel{?}{=}{}<var name="$rightValue" /></mrow>
            </md>
            Since the equation is <var name="$trueOrFalse" />,
            the number <m><var name="$x" /></m> <var name="$isOrNot" /> a solution of the equation <m><var name="$left" />=<var name="$right" /></m>.
          </p>
        </solution>
        </webwork>
      </exercise>

      <exercise permid="Otr">
        <webwork >
        <setup>

            <pg-code>
                Context("Numeric");
                Context()->noreduce('(-x)-y','(-x)+y');

                $x = non_zero_random(-5,5,1);

                $a = random(-5,-2,1);
                $b = non_zero_random(-5,5,1);
                $left = Compute("$a*x**2+$b*x")->reduce;
                $leftValue = $left->eval(x=>$x);

                $c = non_zero_random(-5,5,1);

                $ans = random(1,2,1);
                $d = ($ans==1) ? random($leftValue-$c*$x+1,$leftValue-$c*$x+10,1) : random($leftValue-$c*$x-10,$leftValue-$c*$x-1,1);
                $right = Compute("$c*x+$d")->reduce;
                $rightValue = $right->eval(x=>$x);

                $x2 = ($x)**2;
                $s1 = $a*$x2;
                $cx = $c*$x;
                $trueOrFalse = ($ans==1) ? "true" : "false";
                $isOrNot = ($ans==1) ? "is" : "is not";

                $yesno=PopUp(['?','is', 'is not'],$ans);
            </pg-code>
        </setup>
        <statement>
          <p permid="hog">
            Is <m><var name="$x" /></m> a solution for <m>x</m> in the inequality <m><var name="$left" />\le<var name="$right" /></m>?
            Evaluating the left and right sides gives:
          </p>

          <sidebyside margins="0%" permid="HUl">

            <tabular permid="ums">
              <col halign="right" />
              <col halign="center" />
              <col halign="left" />
              <row>
                <cell><m><var name="$left" /></m></cell>
                <cell><m>\le</m></cell>
                <cell><m><var name="$right" /></m></cell>
              </row>
              <row>
                <cell><var name="$leftValue" width="2"/></cell>
                <cell><m>{}\stackrel{?}{\le}{}</m></cell>
                <cell><var name="$rightValue" width="2"/></cell>
              </row>
            </tabular>

          </sidebyside>

          <p permid="Nvp">
            So <m><var name="$x" /></m> <var name="$yesno" form="popup"/> a solution to <m><var name="$left" />\le<var name="$right" /></m>.
          </p>
        </statement>
        <solution permid="rkv">
          <p permid="lof">
            To check whether a number is a solution or not,
            we substitute the variable with the given value <m><var name="$x" /></m>,
            and we have:
            <md permid="VJI">
              <mrow><var name="$left" />\amp\le<var name="$right" /></mrow>
              <mrow><var name="$a" />(<var name="$x" />)^2+<var name="$b" />\amp{}\stackrel{?}{\le}{}<var name="$c" />(<var name="$x" />)+<var name="$d" /></mrow>
              <mrow><var name="$a" />(<var name="$x2" />)+<var name="$b" />\amp{}\stackrel{?}{\le}{}<var name="$cx" />+<var name="$d" /></mrow>
              <mrow><var name="$leftValue" />\amp{}\stackrel{?}{\le}{}<var name="$rightValue" /></mrow>
            </md>
            Since the inequality is <var name="$trueOrFalse" />,
            the number <m><var name="$x" /></m> <var name="$isOrNot" /> a solution of the inequality <m><var name="$left" />\le<var name="$right" /></m>.
          </p>
        </solution>
        </webwork>
      </exercise>

      <exercise permid="uAA">
        <webwork >
        <setup>

            <pg-code>
                Context("Numeric");
                Context()->noreduce('(-x)-y','(-x)+y');

                $x = non_zero_random(-5,5,1);

                $a = random(-5,-2,1);
                $b = non_zero_random(-5,5,1);
                $left = Compute("$a*x**2+$b*x")->reduce;
                $leftValue = $left->eval(x=>$x);

                $c = non_zero_random(-5,5,1);

                $ans = random(1,2,1);
                $d = ($ans==1) ? random($leftValue-$c*$x+1,$leftValue-$c*$x+10,1) : random($leftValue-$c*$x-10,$leftValue-$c*$x-1,1);
                $right = Compute("$c*x+$d")->reduce;
                $rightValue = $right->eval(x=>$x);

                $x2 = ($x)**2;
                $s1 = $a*$x2;
                $cx = $c*$x;
                $trueOrFalse = ($ans==1) ? "true" : "false";
                $isOrNot = ($ans==1) ? "is" : "is not";

                    $yesno=PopUp(['?','is', 'is not'],$ans);
            </pg-code>
        </setup>
        <statement>
          <p permid="tCy">
            Is <m><var name="$x" /></m> a solution for <m>x</m> in the inequality <m><var name="$left" />\le<var name="$right" /></m>?
            Evaluating the left and right sides gives:
          </p>

          <sidebyside margins="0%" permid="obu">

            <tabular permid="atB">
              <col halign="right" />
              <col halign="center" />
              <col halign="left" />
              <row>
                <cell><m><var name="$left" /></m></cell>
                <cell><m>\le</m></cell>
                <cell><m><var name="$right" /></m></cell>
              </row>
              <row>
                <cell><var name="$leftValue" width="2"/></cell>
                <cell><m>{}\stackrel{?}{\le}{}</m></cell>
                <cell><var name="$rightValue" width="2"/></cell>
              </row>
            </tabular>

          </sidebyside>

          <p permid="ZJH">
            So <m><var name="$x" /></m> <var name="$yesno" form="popup"/> a solution to <m><var name="$left" />\le<var name="$right" /></m>.
          </p>
        </statement>
        <solution permid="XrE">
          <p permid="Rvo">
            To check whether a number is a solution or not,
            we substitute the variable with the given value <m><var name="$x" /></m>,
            and we have:
            <md permid="BQR">
              <mrow><var name="$left" />\amp\le<var name="$right" /></mrow>
              <mrow><var name="$a" />(<var name="$x" />)^2+<var name="$b" />\amp{}\stackrel{?}{\le}{}<var name="$c" />(<var name="$x" />)+<var name="$d" /></mrow>
              <mrow><var name="$a" />(<var name="$x2" />)+<var name="$b" />\amp{}\stackrel{?}{\le}{}<var name="$cx" />+<var name="$d" /></mrow>
              <mrow><var name="$leftValue" />\amp{}\stackrel{?}{\le}{}<var name="$rightValue" /></mrow>
            </md>
            Since the inequality is <var name="$trueOrFalse" />,
            the number <m><var name="$x" /></m> <var name="$isOrNot" /> a solution of the inequality <m><var name="$left" />\le<var name="$right" /></m>.
          </p>
        </solution>
        </webwork>
      </exercise>

    </exercisegroup>
    <exercisegroup cols="4" permid="QEd">

      <exercise permid="aHJ">
        <webwork source="BasicAlgebra/SolveLinearEquations/solveLinearEqnOneStepAddSubtract20.pg" />
      </exercise>

      <exercise permid="GOS">
        <webwork source="BasicAlgebra/SolveLinearEquations/solveLinearEqnOneStepAddSubtract20.pg" />
      </exercise>

      <exercise permid="mWb">
        <webwork source="BasicAlgebra/SolveLinearEquations/solveLinearEqnOneStepAddSubtract40.pg" />
      </exercise>

      <exercise permid="Tdk">
        <webwork source="BasicAlgebra/SolveLinearEquations/solveLinearEqnOneStepAddSubtract40.pg" />
      </exercise>

      <exercise permid="zkt">
        <webwork source="BasicAlgebra/SolveLinearEquations/solveLinearEqnOneStepMultiDiv20.pg" />
      </exercise>

      <exercise permid="frC">
        <webwork source="BasicAlgebra/SolveLinearEquations/solveLinearEqnOneStepMultiDiv20.pg" />
      </exercise>

      <exercise permid="LyL">
        <webwork source="BasicAlgebra/SolveLinearEquations/solveLinearEqnOneStepMultiDiv80.pg" />
      </exercise>

      <exercise permid="rFU">
        <webwork source="BasicAlgebra/SolveLinearEquations/solveLinearEqnOneStepMultiDiv80.pg" />
      </exercise>

    </exercisegroup>
    <exercisegroup cols="2" permid="wLm">

      <exercise permid="XNd">
        <webwork source="BasicMath/Percent/MTH20PercentApplicationType1_120.pg" />
      </exercise>

      <exercise permid="DUm">
        <webwork source="BasicMath/Percent/MTH20PercentApplicationType1_120.pg" />
      </exercise>

      <exercise permid="kbv">
        <webwork source="BasicMath/Percent/MTH20PercentApplicationType2_120.pg" />
      </exercise>

      <exercise permid="QiE">
        <webwork source="BasicMath/Percent/MTH20PercentApplicationType2_120.pg" />
      </exercise>

      <exercise permid="wpN">
        <webwork source="BasicMath/Percent/MTH20PercentApplicationType3_110.pg" />
      </exercise>

      <exercise permid="cwW">
        <webwork source="BasicMath/Percent/MTH20PercentApplicationType3_110.pg" />
      </exercise>

      <exercise permid="IEf">
        <webwork source="BasicAlgebra/LinearEquationApplications/PercentIncreaseDecrease50.pg" />
      </exercise>

      <exercise permid="oLo">
        <webwork source="BasicAlgebra/LinearEquationApplications/PercentIncreaseDecrease50.pg" />
      </exercise>

      <exercise permid="USx">
        <webwork source="BasicAlgebra/LinearEquationApplications/PercentIncreaseDecrease70.pg" />
      </exercise>

      <exercise permid="AZG">
        <webwork source="BasicAlgebra/LinearEquationApplications/PercentIncreaseDecrease70.pg" />
      </exercise>

      <exercise permid="hgP">
        <webwork source="BasicAlgebra/LinearEquationApplications/ModelingWithEquation20.pg" />
      </exercise>

      <exercise permid="NnY">
        <webwork source="BasicAlgebra/LinearEquationApplications/ModelingWithEquation20.pg" />
      </exercise>

      <exercise permid="tvh">
        <webwork source="BasicAlgebra/LinearEquationApplications/ModelingWithEquation90.pg" />
      </exercise>

      <exercise permid="ZCq">
        <webwork source="BasicAlgebra/LinearEquationApplications/ModelingWithEquation90.pg" />
      </exercise>

      <exercise permid="FJz">
        <webwork source="BasicAlgebra/LinearEquationApplications/ModelingWithEquation130.pg" />
      </exercise>

      <exercise permid="lQI">
        <webwork source="BasicAlgebra/LinearEquationApplications/ModelingWithEquation130.pg" />
      </exercise>

    </exercisegroup>
    <exercisegroup cols="3" permid="cSv">

      <exercise permid="RXR">
        <webwork source="BasicAlgebra/AlgebraicProperties/CommutativePropertyAddition20.pg" />
      </exercise>

      <exercise permid="yfa">
        <webwork source="BasicAlgebra/AlgebraicProperties/CommutativePropertyAddition20.pg" />
      </exercise>

      <exercise permid="emj">
        <webwork source="BasicAlgebra/AlgebraicProperties/AssociativePropertyMultiplication10.pg" />
      </exercise>

      <exercise permid="Kts">
        <webwork source="BasicAlgebra/AlgebraicProperties/AssociativePropertyMultiplication10.pg" />
      </exercise>

      <exercise permid="qAB">
        <webwork source="BasicAlgebra/AlgebraicProperties/DistributiveProperty10.pg" />
      </exercise>

      <exercise permid="WHK">
        <webwork source="BasicAlgebra/AlgebraicProperties/DistributiveProperty10.pg" />
      </exercise>

      <exercise permid="COT">
        <webwork source="BasicAlgebra/AlgebraicProperties/DistributiveProperty40.pg" />
      </exercise>

      <exercise permid="iWc">
        <webwork source="BasicAlgebra/AlgebraicProperties/DistributiveProperty40.pg" />
      </exercise>

      <exercise permid="Pdl">
        <webwork source="BasicAlgebra/AlgebraicProperties/DistributiveProperty50.pg" />
      </exercise>

      <exercise permid="vku">
        <webwork source="BasicAlgebra/AlgebraicProperties/DistributiveProperty50.pg" />
      </exercise>

      <exercise permid="brD">
        <webwork source="BasicAlgebra/Exponents/exponentsMultiplication0.pg" />
      </exercise>

      <exercise permid="HyM">
        <webwork source="BasicAlgebra/Exponents/exponentsMultiplication0.pg" />
      </exercise>

      <exercise permid="nFV">
        <webwork source="BasicAlgebra/Exponents/exponentsMultiplication20.pg" />
      </exercise>

      <exercise permid="TNe">
        <webwork source="BasicAlgebra/Exponents/exponentsMultiplication20.pg" />
      </exercise>

      <exercise permid="zUn">
        <webwork source="BasicAlgebra/Exponents/exponentsMultiplication23.pg" />
      </exercise>

      <exercise permid="gbw">
        <webwork source="BasicAlgebra/Exponents/exponentsMultiplication23.pg" />
      </exercise>

      <exercise permid="MiF">
        <webwork source="BasicAlgebra/Exponents/exponentsMultiplication30.pg" />
      </exercise>

      <exercise permid="spO">
        <webwork source="BasicAlgebra/Exponents/exponentsMultiplication30.pg" />
      </exercise>

      <exercise permid="YwX">
        <webwork source="BasicAlgebra/Exponents/exponentsMultiplication44.pg" />
      </exercise>

      <exercise permid="EEg">
        <webwork source="BasicAlgebra/Exponents/exponentsMultiplication44.pg" />
      </exercise>

      <exercise permid="kLp">
        <webwork source="BasicAlgebra/Exponents/exponentsMultiplication55.pg" />
      </exercise>

      <exercise permid="QSy">
        <webwork source="BasicAlgebra/Exponents/exponentsMultiplication55.pg" />
      </exercise>

      <exercise permid="wZH">
        <webwork source="BasicAlgebra/AlgebraicProperties/ExpressionAlgebraSkill20.pg" />
      </exercise>

      <exercise permid="dgQ">
        <webwork source="BasicAlgebra/AlgebraicProperties/ExpressionAlgebraSkill20.pg" />
      </exercise>

    </exercisegroup>
    <exercisegroup cols="2" permid="IZE">

      <exercise permid="JnZ">
        <webwork source="BasicAlgebra/PolynomialMultiplication/PolynomialMultiplication15.pg" />
      </exercise>

      <exercise permid="pvi">
        <webwork source="BasicAlgebra/PolynomialMultiplication/PolynomialMultiplication15.pg" />
      </exercise>

    </exercisegroup>
  </exercises>
</section>

