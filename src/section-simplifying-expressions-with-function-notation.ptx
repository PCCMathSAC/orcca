<?xml version="1.0" encoding="UTF-8" ?>
<!-- *********************************************************************-->
<!-- Copyright 2016-2019                                                  -->
<!-- Portland Community College                                           -->
<!--                                                                      -->
<!-- This file is part of Open Resources for Community College Algebra    -->
<!-- (ORCCA).                                                             -->
<!--                                                                      -->
<!-- Open Resources for Community College Algebra is licensed under a     -->
<!-- Creative Commons Attribution 4.0 International License.              -->
<!--                                                                      -->
<!-- Under this license, any user of this textbook or the textbook        -->
<!-- contents must provide proper attribution as follows.                 -->
<!--                                                                      -->
<!-- If you redistribute all or part of this textbook, then you must      -->
<!-- include in every digital format page view (including but not         -->
<!-- limited to EPUB, PDF, and HTML) and on every physical printed page   -->
<!-- the following attribution:                                           -->
<!--                                                                      -->
<!-- Original source material, products with readable and accessible      -->
<!-- math content, and other information freely available at              -->
<!-- pcc.edu/orcca.                                                       -->
<!--                                                                      -->
<!-- If you redistribute all or part of this textbook, then you must      -->
<!-- reproduce any math content (such as math expressions and equations)  -->
<!-- in a readable manner, and offer math content in at least one web     -->
<!-- accessible manner.                                                   -->
<!--                                                                      -->
<!-- The Portland Community College name, Portland Community College      -->
<!-- logo, ORCCA name, Open Resources for Community College Algebra name, -->
<!-- ORCCA logo, and front and back cover designs are not subject to the  -->
<!-- Creative Commons license and may not be reproduced without the       -->
<!-- prior and express written consent of Portland Community College.     -->
<!--                                                                      -->
<!-- For questions regarding this license, please contact                 -->
<!-- orcca-group@pcc.edu.                                                 -->
<!-- *********************************************************************-->
<section xml:id="section-simplifying-expressions-with-function-notation" permid="Dvs">
  <title>Simplifying Expressions with Function Notation</title>
  <objectives permid="Afn">
    <title>PCC Course Content and Outcome Guide</title>
    <ul>
      <li>
        <xref ref="ccog-distinguish-and-simplify-simple-function-composition" text="local">MTH 95 CCOG</xref>
      </li>
    </ul>
  </objectives>

  <introduction permid="gmw">
    <figure permid="YWs">
      <caption>Alternative Video Lesson</caption>
      <video youtubeplaylist="PLfPh0EsBc0yL6Wtjo_0vJ9y3VjNEXwExp" />
    </figure>

    <p permid="sPj">
      In this section,
      we will discuss algebra simplification that will appear in many facets of education.
      Simplification is a skill, like cooking noodles or painting a wall.
      It may not always be exciting,
      but it does serve a purpose.
      Also like cooking noodles or painting a wall,
      it isn't usually difficult,
      and yet there are common avoidable mistakes that people make.
      With practice from this section,
      you'll have experience to prevent yourself from overcooking the noodles or ruining your paintbrush.
    </p>
  </introduction>

  <subsection permid="jCB">
    <title>Negative Signs in and out of Function Notation</title>
    <p permid="XvA">
      Let's start by reminding ourselves about the meaning of function notation.
      When we write <m>f(x)</m>,
      we have a process <m>f</m> that is doing something to an input value <m>x</m>.
      Whatever is inside those parentheses is the input to the function.
      What if we use something for input that is not quite as simple as <q><m>x</m>?</q>
    </p>

    <example xml:id="example-f-of-minus-x" permid="AAM">
      <statement>
        <p permid="HYh">
          Find and simplify a formula for <m>f(-x)</m>,
          where <m>f(x)=x^2+3x-4</m>.
        </p>
      </statement>
      <solution permid="MtF">
        <p permid="KiT">
          Those parentheses encase <q><m>-x</m>,</q>
          so we are meant to treat <q><m>-x</m></q> as the input.
          The rule that we have been given for <m>f</m> is
          <me permid="vYk">
            f(x)=x^2+3x-4
          </me>.
          But the <m>x</m>'s that are in this formula are just place-holders.
          What <m>f</m> does to a number can just as easily be communicated with
          <me permid="cft">
            f(\phantom{x})=(\phantom{x})^2+3(\phantom{x})-4
          </me>.
          So now that we are meant to treat
          <q><m>-x</m></q> as the input,
          we will insert <q><m>-x</m></q> into those slots,
          after which we can do more familiar algebraic simplification:
          <md permid="ImC">
            <mrow>f(\phantom{-x})\amp=(\phantom{-x})^2+3(\phantom{-x})-4</mrow>
            <mrow>f(\substitute{-x})\amp=(\substitute{-x})^2+3(\substitute{-x})-4</mrow>
            <mrow>\amp=x^2-3x-4</mrow>
          </md>
        </p>
      </solution>
    </example>

    <p permid="DCJ">
      The previous example contrasts nicely with this one:
    </p>

    <example xml:id="example-minus-f-of-x" permid="gHV">
      <statement>
        <p permid="ofq">
          Find and simplify a formula for <m>-f(x)</m>,
          where <m>f(x)=x^2+3x-4</m>.
        </p>
      </statement>
      <solution permid="sAO">
        <p permid="qqc">
          Here, the parentheses only encase <q><m>x</m>.</q>
          The negative sign is on the outside.
          So the way to see this expression is that first <m>f</m> will do what it does to <m>x</m>,
          and then that result will be negated:
          <md permid="otL">
            <mrow>-f(x)\amp=-(\substitute{x^2+3x-4})</mrow>
            <mrow>\amp=-x^2-3x+4</mrow>
          </md>
        </p>

        <p permid="Wxl">
          Note that the answer to this exercise,
          which was to simplify <m>-f(x)</m>,
          is different from the answer to <xref ref="example-f-of-minus-x">Example</xref>,
          which was to simplify <m>f(-x)</m>.
          In general you cannot pass a negative sign in and out of function notation and still have the same quantity.
        </p>
      </solution>
    </example>

    <p permid="jJS">
      In <xref ref="example-f-of-minus-x">Example</xref>
      and <xref ref="example-minus-f-of-x">Example</xref>,
      we are working with the expressions <m>f(-x)</m> and <m>-f(x)</m>,
      and trying to find <q>simplified</q> formulas.
      If it seems strange to be doing these things,
      perhaps this applied example will help.
    </p>

    <exercise permid="MPe">
      <webwork>
            <pg-code>
                Context("LimitedPolynomial-Strict");
                Context()->variables->are(t=>'Real');
                Context()->flags->set(tolType=>'absolute', tolerance=>0.1);
                $N = Formula("3.34t^2+26.2t+6980");
                $answer = Formula("3.34t^2-26.2t+6980");
                $evaluator = $answer->cmp()->withPostFilter(AnswerHints(
                  Formula("3.34t^2+26.2t+6980") => "This is N(t), not N(-t).",
                  Formula("-3.34t^2-26.2t-6980") => "This is -N(t), not N(-t).",
                ));
            </pg-code>
          <statement>
            <p permid="FdB">
              The NASDAQ Composite Index measures how well a portion of the stock market is doing.
              Suppose <m>N(t)</m> is the value of the index <m>t</m> days after January<nbsp/>1, 2018.
              A formula for <m>N</m> is <m>N(t)=<var name="$N" /></m>.
            </p>

            <p permid="lkK">
              What if you wanted a new function, <m>B</m>,
              that gives the value of the NASDAQ index <m>t</m> days
              <em>before</em> January<nbsp/>1, 2018?
              Technically, <m>t</m> days <em>before</em>
              is the same as <em>negative</em> <m>t</m> days after.
              So <m>B(t)</m> is the same as <m>N(-t)</m>,
              and now the expression <m>N(-t)</m> means something.
              Find a simplified formula for <m>N(-t)</m>.
            </p>

            <p permid="RrT">
              <m>N(-t)=</m><var name="$answer" evaluator="$evaluator" width="20" />
            </p>
          </statement>
          <solution permid="xkH">
            <p permid="CEu">
              <md permid="UAU">
                <mrow>N(\phantom{-t})\amp=3.34(\phantom{-t})^2+26.2(\phantom{-t})+6980</mrow>
                <mrow>N(\substitute{-t})\amp=3.34(\substitute{-t})^2+26.2(\substitute{-t})+6980</mrow>
                <mrow>\amp=3.34t^2-26.2t+6980</mrow>
              </md>
            </p>
          </solution>
      </webwork>
    </exercise>
  </subsection>

  <subsection permid="PJK">
    <title>Other Nontrivial Simplifications</title>
    <example xml:id="example-h-of-5x" permid="sWn">
      <statement>
        <p permid="Umz">
          Find and simplify a formula for <m>h(5x)</m>,
          where <m>h(x)=\frac{x}{x-2}</m>.
        </p>
      </statement>
      <solution permid="YHX">
        <p permid="iLD">
          The parentheses encase <q><m>5x</m>,</q>
          so we are meant to treat <q><m>5x</m></q> as the input.
          <md permid="AId">
            <mrow>h(\phantom{5x})\amp=\frac{\substitute{(\phantom{5x})}}{\substitute{(\phantom{5x})}-2}</mrow>
            <mrow>h(\substitute{5x})\amp=\frac{\substitute{5x}}{\substitute{5x}-2}</mrow>
            <mrow>\amp=\frac{5x}{5x-2}</mrow>
          </md>
        </p>
            <!-- <p>Note that the factor of <m>5x</m> in the numerator could not cancel, as <m>5x</m> is not a <em>factor</em> of the denominator. This type of simplification is discussed more fully in <xref ref="section-multiplication-and-division-of-rational-expressions">Section</xref>.</p> -->
      </solution>
    </example>

    <example permid="Zdw">
      <statement>
        <p permid="AtI">
          Find and simplify a formula for
          <m>\frac{1}{3}g(3x)</m>, where <m>g(x)=2x^2+8</m>.
        </p>
      </statement>
      <solution permid="EPg">
        <p permid="OSM">
          Do the <m>\frac{1}{3}</m> and the <m>3</m> cancel each other?
          No.
          The <m>3</m> is part of the input,
          affecting <m>x</m> right away.
          Then <m>g</m> does whatever it does to <m>3x</m>,
          and <em>then</em> we multiply the result by <m>\frac{1}{3}</m>.
          Since the function <m>g</m> acts <q>in between,</q>
          we don't have the chance to cancel the <m>3</m> with the <m>\frac{1}{3}</m>.
          Let's see what actually happens:
        </p>

        <p permid="uZV">
          Those parentheses encase <q><m>3x</m>,</q>
          so we are meant to treat <q><m>3x</m></q> as the input.
          We will keep the <m>\frac{1}{3}</m> where it is until it is possible to simplify:
          <md permid="gPm">
            <mrow>\frac{1}{3}g(\phantom{3x})\amp=\frac{1}{3}\left(2(\phantom{3x})^2+8\right)</mrow>
            <mrow>\frac{1}{3}g(\substitute{3x})\amp=\frac{1}{3}\left(2(\substitute{3x})^2+8\right)</mrow>
            <mrow>\amp=\frac{1}{3}\left(2\left(9x^2\right)+8\right)</mrow>
            <mrow>\amp=\frac{1}{3}\left(18x^2+8\right)</mrow>
            <mrow>\amp=6x^2+\frac{8}{3}</mrow>
          </md>
        </p>
      </solution>
    </example>

    <example xml:id="example-f-of-x-minus-four" permid="FkF">
      <statement>
        <p permid="gAR">
          If <m>k(x)=x^2-3x</m>, find and simplify a formula for <m>k(x-4)</m>.
        </p>
      </statement>
      <solution permid="kWp">
        <p permid="bhe">
          This type of exercise is often challenging for algebra students.
          But let's focus on those parentheses one more time.
          They encase <q><m>x-4</m>,</q>
          so we are meant to treat <q><m>x-4</m></q> as the input.
          <md permid="MWv">
            <mrow>k(\phantom{x-4})\amp=(\phantom{x-4})^2-3(\phantom{x-4})</mrow>
            <mrow>k(\substitute{x-4})\amp=(\substitute{x-4})^2-3(\substitute{x-4})</mrow>
            <mrow>\amp=x^2-8x+16-3x+12</mrow>
            <mrow>\amp=x^2-11x+28</mrow>
          </md>
        </p>
      </solution>
    </example>

    <exercise permid="RyX">
      <webwork>
            <pg-code>
                $answer = Formula("x+5+sqrt(x+13)");
            </pg-code>
          <statement>
            <p permid="xzc">
              If <m>q(x)=x+\sqrt{x+8}</m>, find and simplify a formula for <m>q(x+5)</m>.
            </p>

            <p permid="dGl">
              <m>q(x+5)=</m><var name="$answer" width="25"/>
            </p>
          </statement>
          <solution permid="drQ">
            <p permid="Hon">
              Starting with the generic formula for <m>q</m>:
              <md permid="tdE">
                <mrow>q(\phantom{x+5})\amp=(\phantom{x+5})+\sqrt{(\phantom{x+5})+8}</mrow>
                <mrow>q(\substitute{x+5})\amp=\substitute{x+5}+\sqrt{\substitute{x+5}+8}</mrow>
                <mrow>\amp=x+5+\sqrt{x+13}</mrow>
              </md>
            </p>
          </solution>
      </webwork>
    </exercise>

    <example permid="lrO">
      <statement>
        <p permid="MIa">
          If <m>f(x)=\frac{1}{x}</m>, find and simplify a formula for <m>f(x+3)+2</m>.
        </p>
      </statement>
      <solution permid="Rdy">
        <p permid="nvw">
          Do not be tempted to add the <m>3</m> and the <m>2</m>.
          The <m>3</m> is added to input <em>before</em>
          the function <m>f</m> does its work.
          The <m>2</m> is added to the result
          <em>after</em> <m>f</m> has done its work.
          <md permid="ZkN">
            <mrow>f(\phantom{x+3})+2\amp=\frac{1}{\substitute{(\phantom{x+3})}}+2</mrow>
            <mrow>f(\substitute{x+3})+2\amp=\frac{1}{\substitute{x+3}}+2</mrow>
          </md>
          This last expression is considered fully simplified.
          However you might combine the two terms using a technique from <xref ref="section-addition-and-subtraction-of-rational-expressions">Section</xref>.
        </p>
      </solution>
    </example>

    <p permid="PRb">
      The tasks we have practiced in this section are the kind of tasks that will make it easier to understand interesting and useful material in college algebra and calculus.
    </p>
  </subsection>

  <reading-questions>
    <exercise>
      <statement>
        <p>
          Explain how <m>f(x+2)</m> probably does <em>not</em> mean that <m>f</m> is being multiplied by <m>x+2</m>.
        </p>
      </statement>
    </exercise>
  </reading-questions>

  <exercises permid="vQT">
    <exercisegroup cols="3" permid="bYc">
      <title>Review and Warmup</title>
      <exercise permid="xGg">
        <webwork source="Contrib/PCC/BasicAlgebra/AlgebraicProperties/DistributiveProperty10.pg" />
      </exercise>

      <exercise permid="dNp">
        <webwork source="Contrib/PCC/BasicAlgebra/AlgebraicProperties/DistributiveProperty10.pg" />
      </exercise>

      <exercise permid="JUy">
        <webwork source="Contrib/PCC/BasicAlgebra/AlgebraicProperties/DistributiveProperty20.pg" />
      </exercise>

      <exercise permid="qbH">
        <webwork source="Contrib/PCC/BasicAlgebra/AlgebraicProperties/DistributiveProperty20.pg" />
      </exercise>

      <exercise permid="WiQ">
        <webwork source="Contrib/PCC/BasicAlgebra/PolynomialMultiplication/PolynomialMultiplication191.pg" />
      </exercise>

      <exercise permid="CpZ">
        <webwork source="Contrib/PCC/BasicAlgebra/PolynomialMultiplication/PolynomialMultiplication191.pg" />
      </exercise>

      <exercise permid="ixi">
        <webwork source="Contrib/PCC/BasicAlgebra/PolynomialMultiplication/PolynomialMultiplication195.pg" />
      </exercise>

      <exercise permid="OEr">
        <webwork source="Contrib/PCC/BasicAlgebra/PolynomialMultiplication/PolynomialMultiplication195.pg" />
      </exercise>

    </exercisegroup>

    <exercisegroup cols="2" permid="Ifl">
      <title>Simplifying Function Expressions</title>
      <exercise permid="uLA">
        <webwork xml:id="webwork-simplify-composition">
          <pg-code>
            $x = RandomVariableName(type=>'variable');
            $f = RandomVariableName(type=>'function');
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            $a = non_zero_random(1,9,1);
            $inner = Formula("$x+$a");
            $m = non_zero_random(-8,8,1);
            $b = non_zero_random(-8,8,1);
            $fofx = Formula("$b+$m $x")->reduce;
            $emptyf = $fofx->TeX;
            $emptyf =~ s/$x/(\phantom{$x})/g;
            $subbed = $fofx->substitute($x=>$inner)->reduce;
            $answer = Formula("$m $x + ($b + $m*$a)")->reduce;
            $bpmxpma = Formula("$b+$m $x+$m*$a")->reduce;
            Context("LimitedPolynomial-Strict");
            Context()->variables->are($x=>'Real');
            $answer = Formula("$answer");
          </pg-code>
          <statement>
            <p permid="JNu">
              Simplify <m><var name="$f" />(<var name="$inner" />)</m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="pUD">
              <var name="$answer" width="30" />
            </p>
          </statement>
          <solution permid="JyZ">
            <p permid="TCF">
              <md permid="FrW">
                <mrow><var name="$f" />(\phantom{<var name="$x" />})\amp= <var name="$emptyf" /></mrow>
                <mrow><var name="$f" />(<var name="$inner" />)\amp=<var name="$subbed" /></mrow>
                <mrow>\amp=<var name="$bpmxpma" /></mrow>
                <mrow>\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="aSJ">
        <webwork copy="webwork-simplify-composition"/>
      </exercise>
      <exercise permid="GZS">
        <webwork xml:id="webwork-simplify-composition-2">
          <pg-code>
            $x = RandomVariableName(type=>'variable');
            $f = RandomVariableName(type=>'function');
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            $inner = Formula("-$x");
            $m = non_zero_random(-8,8,1);
            $b = non_zero_random(-8,8,1);
            $fofx = Formula("$b+$m $x")->reduce;
            $emptyf = $fofx->TeX;
            $emptyf =~ s/$x/(\phantom{$x})/g;
            $subbed = $fofx->substitute($x=>$inner)->reduce('x*(-y)'=>0, '(-x)*y=>0');
            $answer = Formula("$b-$m $x")->reduce;
            Context("LimitedPolynomial-Strict");
            Context()->variables->are($x=>'Real');
            $answer = Formula("$answer");
          </pg-code>
          <statement>
            <p permid="iqe">
              Simplify <m><var name="$f" />(<var name="$inner" />)</m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="Oxn">
              <var name="$answer" width="30" />
            </p>
          </statement>
          <solution permid="VNr">
            <p permid="fQX">
              <md permid="RGo">
                <mrow><var name="$f" />(\phantom{<var name="$x" />})\amp= <var name="$emptyf" /></mrow>
                <mrow><var name="$f" />(<var name="$inner" />)\amp=<var name="$subbed" /></mrow>
                <mrow>\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="nhb">
        <webwork copy="webwork-simplify-composition-2"/>
      </exercise>
      <exercise permid="Tok">
        <webwork xml:id="webwork-simplify-composition-3">
          <pg-code>
            $x = RandomVariableName(type=>'variable');
            $f = RandomVariableName(type=>'function');
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            $a = non_zero_random(1,9,1);
            $inner = Formula("$x+$a");
            $m = non_zero_random(-8,8,0.1);
            $b = non_zero_random(-8,8,1);
            $fofx = Formula("$b+$m $x")->reduce;
            $emptyf = $fofx->TeX;
            $emptyf =~ s/$x/(\phantom{$x})/g;
            $subbed = $fofx->substitute($x=>$inner)->reduce;
            $answer = Formula("$m $x + ($b + $m*$a)")->reduce;
            $bpmxpma = Formula("$b+$m $x+$m*$a")->reduce;
            Context("LimitedPolynomial-Strict");
            Context()->variables->are($x=>'Real');
            $answer = Formula("$answer");
          </pg-code>
          <statement>
            <p permid="GSO">
              Simplify <m><var name="$f" />(<var name="$inner" />)</m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="mZX">
              <var name="$answer" width="30" />
            </p>
          </statement>
          <solution permid="ibJ">
            <p permid="sfp">
              <md permid="dUG">
                <mrow><var name="$f" />(\phantom{<var name="$x" />})\amp= <var name="$emptyf" /></mrow>
                <mrow><var name="$f" />(<var name="$inner" />)\amp=<var name="$subbed" /></mrow>
                <mrow>\amp=<var name="$bpmxpma" /></mrow>
                <mrow>\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="zvt">
        <webwork copy="webwork-simplify-composition-3"/>
      </exercise>
      <exercise permid="fCC">
        <webwork xml:id="webwork-simplify-composition-4">
          <pg-code>
            $x = RandomVariableName(type=>'variable');
            $f = RandomVariableName(type=>'function');
            Context("Fraction");
            Context()->flags->set(reduceConstants=>0);
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            do {$a = Fraction(non_zero_random(-9,9,1), non_zero_random(2,9,1));} until (($a->value)[1] != 1);
            $inner = Formula("$x+$a");
            do {$m = Fraction(non_zero_random(-9,9,1), non_zero_random(2,9,1));} until (($m->value)[1] != 1);
            do {$b = Fraction(non_zero_random(-9,9,1), non_zero_random(2,9,1));} until (($b->value)[1] != 1);
            $fofx = Formula("$b+$m $x")->reduce;
            $emptyf = $fofx->TeX;
            $emptyf =~ s/$x/(\phantom{$x})/g;
            $subbed = $fofx->substitute($x=>$inner)->reduce;
            $newconst = $b + $m*$a;
            $answer = Formula("$m $x + $newconst")->reduce;
            $ma = $m*$a;
            $mxpma = Formula("$m $x + $ma");
            Context("LimitedPolynomial-Strict");
            Context()->flags->set(reduceConstants=>0);
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            Context()->variables->are($x=>'Real');
            $answer = Formula("$answer");
          </pg-code>
          <statement>
            <p permid="fvy">
              Simplify <m><var name="$f" />(<var name="$inner" />)</m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="LCH">
              <var name="$answer" width="30" />
            </p>
          </statement>
          <solution permid="uqb">
            <p permid="EtH">
              <md permid="qiY">
                <mrow><var name="$f" />(\phantom{<var name="$x" />})\amp= <var name="$emptyf" /></mrow>
                <mrow><var name="$f" />(<var name="$inner" />)\amp=<var name="$subbed" /></mrow>
                <mrow>\amp=<var name="$b" /> + <var name="$mxpma" /></mrow>
                <mrow>\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="LJL">
        <webwork copy="webwork-simplify-composition-4"/>
      </exercise>
      <exercise permid="rQU">
        <webwork xml:id="webwork-simplify-vertical-shift">
          <pg-code>
            $x = RandomVariableName(type=>'variable');
            $f = RandomVariableName(type=>'function');
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            $a = non_zero_random(1,9,1);
            $m = non_zero_random(-8,8,1);
            $b = non_zero_random(-8,8,1);
            $fofx = Formula("$m $x+$b")->reduce;
            $answer = Formula("$m $x + ($b + $a)")->reduce;
            Context("LimitedPolynomial-Strict");
            Context()->variables->are($x=>'Real');
            $answer = Formula("$answer");
          </pg-code>
          <statement>
            <p permid="DYi">
              Simplify <m><var name="$f" />(<var name="$x" />)+<var name="$a" /></m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="kfr">
              <var name="$answer" width="30" />
            </p>
          </statement>
          <solution permid="GEt">
            <p permid="QHZ">
              <md permid="Cxq">
                <mrow><var name="$f" />(<var name="$x" />)+<var name="$a" />\amp= <var name="$fofx" />+<var name="$a" /></mrow>
                <mrow>\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="XYd">
        <webwork copy="webwork-simplify-vertical-shift"/>
      </exercise>
      <exercise permid="Efm">
        <webwork xml:id="webwork-simplify-vertical-shift-2">
          <pg-code>
            $x = RandomVariableName(type=>'variable');
            $f = RandomVariableName(type=>'function');
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            $a = non_zero_random(1,9,1);
            $m = non_zero_random(-8,8,0.1);
            $b = non_zero_random(-8,8,1);
            $fofx = Formula("$b+$m $x")->reduce;
            $answer = Formula("$m $x + ($b + $a)")->reduce;
            Context("LimitedPolynomial-Strict");
            Context()->variables->are($x=>'Real');
            $answer = Formula("$answer");
          </pg-code>
          <statement>
            <p permid="cAS">
              Simplify <m><var name="$f" />(<var name="$x" />)+<var name="$a" /></m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="IIb">
              <var name="$answer" width="30" />
            </p>
          </statement>
          <solution permid="SSL">
            <p permid="cWr">
              <md permid="OLI">
                <mrow><var name="$f" />(<var name="$x" />)+<var name="$a" />\amp= <var name="$fofx" />+<var name="$a" /></mrow>
                <mrow>\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="kmv">
        <webwork copy="webwork-simplify-vertical-shift-2"/>
      </exercise>
      <exercise permid="QtE">
        <webwork xml:id="webwork-simplify-composition-5">
          <pg-code>
            $x = RandomVariableName(type=>'variable');
            $f = RandomVariableName(type=>'function');
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            $a = non_zero_random(2,9,1);
            $inner = Formula("$a $x")->reduce;
            $g = non_zero_random(-8,8,1);
            $m = non_zero_random(-8,8,1);
            $b = non_zero_random(-8,8,1);
            $fofx = Formula("$g $x^2 + $m $x + $b")->reduce;
            $emptyf = $fofx->TeX;
            $emptyf =~ s/$x/(\phantom{$x})/g;
            $subbed = $fofx->substitute($x=>$inner)->reduce;
            $answer = Formula(" $a^2*$g $x^2 + $m*$a $x + $b")->reduce;
            $a2x2 = Formula("$a^2 $x^2")->reduce;
            $max = Formula("$m*$a $x")->reduce;
            Context("LimitedPolynomial-Strict");
            Context()->variables->are($x=>'Real');
            $answer = Formula("$answer");
          </pg-code>
          <statement>
            <p permid="BdC">
              Simplify <m><var name="$f" />(<var name="$inner" />)</m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="hkL">
              <var name="$answer" width="30" />
            </p>
          </statement>
          <solution permid="fhd">
            <p permid="pkJ">
              <md permid="baa">
                <mrow><var name="$f" />(\phantom{<var name="$x" />})\amp= <var name="$emptyf" /></mrow>
                <mrow><var name="$f" />(<var name="$inner" />)\amp=<var name="$subbed" /></mrow>
                <mrow>\amp=<var name="$g" />(<var name="$a2x2"/>) + <var name="$max" /> + <var name="$b" /></mrow>
                <mrow>\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="wAN">
        <webwork copy="webwork-simplify-composition-5"/>
      </exercise>
      <exercise permid="cHW">
        <webwork xml:id="webwork-simplify-composition-6">
          <pg-code>
            $x = RandomVariableName(type=>'variable');
            $f = RandomVariableName(type=>'function');
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            $inner = Formula("-$x")->reduce;
            $g = non_zero_random(-8,8,1);
            $m = non_zero_random(-8,8,1);
            $b = non_zero_random(-8,8,1);
            $fofx = Formula("$g $x^2 + $m $x + $b")->reduce;
            $emptyf = $fofx->TeX;
            $emptyf =~ s/$x/(\phantom{$x})/g;
            $subbed = $fofx->substitute($x=>$inner)->reduce;
            $answer = Formula("$g $x^2 - $m $x + $b")->reduce;
            $a2x2 = Formula("$x^2")->reduce;
            $max = Formula("-$m $x")->reduce;
            Context("LimitedPolynomial-Strict");
            Context()->variables->are($x=>'Real');
            $answer = Formula("$answer");
          </pg-code>
          <statement>
            <p permid="ZGm">
              Simplify <m><var name="$f" />(<var name="$inner" />)</m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="FNv">
              <var name="$answer" width="30" />
            </p>
          </statement>
          <solution permid="rvv">
            <p permid="Bzb">
              <md permid="nos">
                <mrow><var name="$f" />(\phantom{<var name="$x" />})\amp= <var name="$emptyf" /></mrow>
                <mrow><var name="$f" />(<var name="$inner" />)\amp=<var name="$subbed" /></mrow>
                <mrow>\amp=<var name="$g" />(<var name="$a2x2"/>) + <var name="$max" /> + <var name="$b" /></mrow>
                <mrow>\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="IPf">
        <webwork copy="webwork-simplify-composition-6"/>
      </exercise>
      <exercise permid="oWo">
        <webwork xml:id="webwork-simplify-vertical-scaling">
          <pg-code>
            $x = RandomVariableName(type=>'variable');
            $f = RandomVariableName(type=>'function');
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            $a = non_zero_random(2,9,1);
            $g = non_zero_random(-8,8,1);
            $m = non_zero_random(-8,8,1);
            $b = non_zero_random(-8,8,1);
            $fofx = Formula("$g $x^2 + $m $x + $b")->reduce;
            $answer = Formula(" $a*$g $x^2 + $m*$a $x + $a*$b")->reduce;
            Context("LimitedPolynomial-Strict");
            Context()->variables->are($x=>'Real');
            $answer = Formula("$answer");
          </pg-code>
          <statement>
            <p permid="yiW">
              Simplify <m><var name="$a" /><var name="$f" />(<var name="$x" />)</m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="eqf">
              <var name="$answer" width="30" />
            </p>
          </statement>
          <solution permid="DJN">
            <p permid="NNt">
              <md permid="zCK">
                <mrow><var name="$a" /><var name="$f" />(<var name="$x" />)\amp= <var name="$a" />\left(<var name="$fofx" />\right)</mrow>
                <mrow>\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="Vdx">
        <webwork copy="webwork-simplify-vertical-scaling"/>
      </exercise>
      <exercise permid="BkG">
        <webwork xml:id="webwork-simplify-composition-7">
          <pg-code>
            $x = RandomVariableName(type=>'variable');
            $f = RandomVariableName(type=>'function');
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            $a = non_zero_random(-9,9,1);
            $inner = Formula("$x + $a")->reduce;
            $g = non_zero_random(-8,8,0.1);
            $m = non_zero_random(-8,8,1);
            $b = non_zero_random(-8,8,1);
            $fofx = Formula("$g $x^2 + $m $x + $b")->reduce;
            $emptyf = $fofx->TeX;
            $emptyf =~ s/$x/(\phantom{$x})/g;
            $subbed = $fofx->substitute($x=>$inner)->reduce;
            $answer = Formula("$g $x^2 + (2*$a*$g+$m) $x + ($g*($a)^2 + $m*$a + $b)")->reduce;
            $xpa2 = Formula("$x^2 + 2*$a $x + $a^2")->reduce;
            $mxpa = Formula("$m*$x + $m*$a")->reduce;
            $gxpa2 = Formula("$g $x^2 + $g*2*$a $x + $g*($a)^2")->reduce;
            Context("LimitedPolynomial-Strict");
            Context()->variables->are($x=>'Real');
            $answer = Formula("$answer");
          </pg-code>
          <statement>
            <p permid="WLG">
              Simplify <m><var name="$f" />(<var name="$inner" />)</m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="CSP">
              <var name="$answer" width="30" />
            </p>
          </statement>
          <solution permid="PYf">
            <p permid="abL">
              <md permid="LRc">
                <mrow><var name="$f" />(\phantom{<var name="$x" />})\amp= <var name="$emptyf" /></mrow>
                <mrow><var name="$f" />(<var name="$inner" />)\amp=<var name="$subbed" /></mrow>
                <mrow>\amp=<var name="$g" />(<var name="$xpa2"/>) + <var name="$mxpa" /> + <var name="$b" /></mrow>
                <mrow>\amp=<var name="$gxpa2"/> + <var name="$mxpa" /> + <var name="$b" /></mrow>
                <mrow>\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="hrP">
        <webwork copy="webwork-simplify-composition-7"/>
      </exercise>
      <exercise permid="NyY">
        <webwork xml:id="webwork-simplify-vertical-shift-3">
          <pg-code>
            $x = RandomVariableName(type=>'variable');
            $f = RandomVariableName(type=>'function');
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            $a = non_zero_random(2,9,1);
            $g = non_zero_random(-8,8,1);
            $m = non_zero_random(-8,8,1);
            $b = non_zero_random(-8,8,1);
            $fofx = Formula("$g $x^2 + $m $x + $b")->reduce;
            $answer = Formula(" $g $x^2 + $m $x + ($a+$b)")->reduce;
            Context("LimitedPolynomial-Strict");
            Context()->variables->are($x=>'Real');
            $answer = Formula("$answer");
          </pg-code>
          <statement>
            <p permid="voq">
              Simplify <m><var name="$f" />(<var name="$x" />)+<var name="$a" /></m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="bvz">
              <var name="$answer" width="30" />
            </p>
          </statement>
          <solution permid="cmx">
            <p permid="mqd">
              <md permid="Yfu">
                <mrow><var name="$f" />(<var name="$x" />)+<var name="$a" />\amp= <var name="$fofx" />+<var name="$a" /></mrow>
                <mrow>\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="tGh">
        <webwork copy="webwork-simplify-vertical-shift-3"/>
      </exercise>
      <exercise permid="ZNq">
        <webwork xml:id="webwork-simplify-composition-8">
          <pg-code>
            Context()->operators->set(
            '+' => {class => 'bizarro::BOP::add', isCommand => 1},
            '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
            '*' => {class => 'bizarro::BOP::multiply', isCommand => 1},
            );
            $x = 'x';
            $f = RandomVariableName(type=>'function');
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            $a = non_zero_random(1,9,1);
            $inner = Formula("$x+$a");
            $m = list_random(1,2,3,5,6,7)*list_random(-1,1);
            $b = non_zero_random(-8,8,1);
            $fofx = Formula("sqrt($b+$m $x)")->reduce;
            $emptyf = $fofx->TeX;
            $emptyf =~ s/$x/(\phantom{$x})/g;
            $subbed = $fofx->substitute($x=>$inner)->reduce;
            $answer = Formula("sqrt($m $x + ($b + $m*$a))")->reduce;
            $tippingpoint = -($b + $m*$a)/$m;
            if ($m > 0) {
              Context()->variables->set($x=>{limits=>[$tippingpoint,$tippingpoint+10]});
            }
            else {
              Context()->variables->set($x=>{limits=>[$tippingpoint-10,$tippingpoint]});
            };
            $mxpma = Formula("$m $x+$m $a")->reduce;
            $evaluator = $answer -> cmp(
              checker=>sub{
                my ( $correct, $student, $ansHash ) = @_;
                return 0 if $ansHash->{isPreview} || $correct != $student;
                $student = $ansHash->{student_formula};
                $correct = $correct->{original_formula} if defined $correct->{original_formula};
                $student = Formula("$student"); $correct = Formula("$correct");
                return 0 unless ($correct == $student);
                Context()->flags->set(bizarroAdd=>1, bizarroSub=>1);
                delete $correct->{test_values};
                delete $student->{test_values};
                my $OK = (($correct == $student) or ($student == $correct));
                Context()->flags->set(bizarroAdd=>0, bizarroSub=>0);
                Value::Error("Your answer is correct, but please simplify it further") unless $OK;
                return $OK;
            });
          </pg-code>
          <statement>
            <p permid="TRa">
              Simplify <m><var name="$f" />(<var name="$inner" />)</m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="zYj">
              <var name="$answer" evaluator="$evaluator" width="30" />
            </p>
          </statement>
          <solution permid="oAP">
            <p permid="yEv">
              <md permid="ktM">
                <mrow><var name="$f" />(\phantom{<var name="$x" />})\amp= <var name="$emptyf" /></mrow>
                <mrow><var name="$f" />(<var name="$inner" />)\amp=<var name="$subbed" /></mrow>
                <mrow>\amp=\sqrt{<var name="$b" /> + <var name="$mxpma" />}</mrow>
                <mrow>\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="FUz">
        <webwork copy="webwork-simplify-composition-8"/>
      </exercise>
      <exercise permid="mbI">
        <webwork xml:id="webwork-simplify-vertical-shift-4">
          <pg-code>
            Context()->operators->set(
            '+' => {class => 'bizarro::BOP::add', isCommand => 1},
            '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
            '*' => {class => 'bizarro::BOP::multiply', isCommand => 1},
            );
            $x = 'x';
            $f = RandomVariableName(type=>'function');
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            $a = non_zero_random(1,9,1);
            $m = list_random(1,2,3,5,6,7)*list_random(-1,1);
            $b = non_zero_random(-8,8,1);
            $fofx = Formula("sqrt($b+$m $x)")->reduce;
            $emptyf = $fofx->TeX;
            $emptyf =~ s/$x/(\phantom{$x})/g;
            $answer = Formula("sqrt($b+$m $x)+$a")->reduce;
            if ($m > 0) {($min, $max) = (100, 200)}
            else {($min, $max) = (-200, -100)};
            Context()->variables->set(x=>{limits=>[$min,$max]});
            $evaluator = $answer -> cmp(
              checker=>sub{
                my ( $correct, $student, $ansHash ) = @_;
                return 0 if $ansHash->{isPreview} || $correct != $student;
                $student = $ansHash->{student_formula};
                $correct = $correct->{original_formula} if defined $correct->{original_formula};
                $student = Formula("$student"); $correct = Formula("$correct");
                return 0 unless ($correct == $student);
                Context()->flags->set(bizarroAdd=>1, bizarroSub=>1, bizarroMul=>1);
                delete $correct->{test_values};
                delete $student->{test_values};
                my $OK = (($correct == $student) or ($student == $correct));
                Context()->flags->set(bizarroAdd=>0, bizarroSub=>0, bizarroMul=>0);
                Value::Error("Your answer is correct, but please simplify it further") unless $OK;
                return $OK;
            });
          </pg-code>
          <statement>
            <p permid="stK">
              Simplify <m><var name="$f" />(x)+<var name="$a" /></m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="YAT">
              <var name="$answer" evaluator="$evaluator" width="30" />
            </p>
          </statement>
          <solution permid="APh">
            <p permid="KSN">
              <md permid="wIe">
                <mrow><var name="$f" />(x)+<var name="$a" />\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="SiR">
        <webwork copy="webwork-simplify-vertical-shift-4"/>
      </exercise>
      <exercise permid="yqa">
        <webwork xml:id="webwork-simplify-composition-9">
          <pg-code>
            Context()->operators->set(
            '+' => {class => 'bizarro::BOP::add', isCommand => 1},
            '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
            '*' => {class => 'bizarro::BOP::multiply', isCommand => 1},
            );
            $x = 'x';
            $f = RandomVariableName(type=>'function');
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            $a = non_zero_random(1,9,1);
            $inner = Formula("$x+$a");
            $m = list_random(1,2,3,5,6,7)*list_random(-1,1);
            $b = non_zero_random(-8,8,1);
            $c = non_zero_random(-9,9,1);
            $fofx = Formula("$c $x + sqrt($b+$m $x)")->reduce;
            $emptyf = $fofx->TeX;
            $emptyf =~ s/$x/(\phantom{$x})/g;
            $subbed = $fofx->substitute($x=>$inner)->reduce;
            $answer = Formula("$c $x + $c*$a + sqrt($m $x + ($b + $m*$a))")->reduce;
            $crita  = -($b + $m*$a)/$m;
            $critb = (abs($m) == 1) ? $crita : bizarro::f(-1*bizarro::g($b+$m*$a)/bizarro::g($m));
            $cxpca = Formula("$c $x+$c $a")->reduce;
            $mxpma = Formula("$m $x+$m $a")->reduce;
            $evaluator = $answer -> cmp(
              checker=>sub{
                my ( $correct, $student, $ansHash ) = @_;
                return 0 if $ansHash->{isPreview};
                $student = $ansHash->{student_formula};
                $correct = $correct->{original_formula} if defined $correct->{original_formula};
                $student = Formula("$student"); $correct = Formula("$correct");
                $student->{limits} = ($m > 0) ? [$crita+1,$crita+10] : [$crita-10,$crita-1];
                $correct->{limits} = ($m > 0) ? [$crita+1,$crita+10] : [$crita-10,$crita-1];
                return 0 unless ($student == $correct);
                Context()->flags->set(bizarroAdd=>1, bizarroSub=>1, bizarroMul=>1);
                delete $correct->{test_points};
                delete $student->{test_points};
                delete $correct->{test_values};
                delete $student->{test_values};
                $student->{limits} = ($m > 0) ? [$critb+1,$critb+10] : [$critb-10,$critb-1];
                $correct->{limits} = ($m > 0) ? [$critb+1,$critb+10] : [$critb-10,$critb-1];
                my $OK = (($correct == $student) or ($student == $correct));
                Context()->flags->set(bizarroAdd=>0, bizarroSub=>0, bizarroMul=>0);
                Value::Error("Your answer is correct, but please simplify it further") unless $OK;
                return $OK;
            });
          </pg-code>
          <statement>
            <p permid="QWu">
              Simplify <m><var name="$f" />(<var name="$inner" />)</m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="xdD">
              <var name="$answer" evaluator="$evaluator" width="30" />
            </p>
          </statement>
          <solution permid="Ndz">
            <p permid="Xhf">
              <md permid="IWw">
                <mrow><var name="$f" />(\phantom{<var name="$x" />})\amp= <var name="$emptyf" /></mrow>
                <mrow><var name="$f" />(<var name="$inner" />)\amp=<var name="$subbed" /></mrow>
                <mrow>\amp=<var name="$mxpma" /> + \sqrt{<var name="$b" /> + <var name="$mxpma" />}</mrow>
                <mrow>\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="exj">
        <webwork copy="webwork-simplify-composition-9"/>
      </exercise>
      <exercise permid="KEs">
        <webwork xml:id="webwork-simplify-composition-10">
          <pg-code>
              Context()->operators->set(
              '+' => {class => 'bizarro::BOP::add', isCommand => 1},
              '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
              '*' => {class => 'bizarro::BOP::multiply', isCommand => 1},
              );
              $x = list_random('x','y','z','s','t');
              $f = list_random('g','h','F','G','H','K');
              Context()->variables->are($x=>'Real');
              Context()->noreduce('(-x)+y', '(-x)-y');
              do {
                $a = non_zero_random(1,9,1);
                $inner = Formula("$x+$a");
                $m = non_zero_random(-8,8,1);
                do {$b = non_zero_random(-8,8,1);} until (gcd($m,$b) == 1);
              } until ($m*$a+$b != 0);
              do {$c = non_zero_random(-9,9,1);} until (gcd($c,gcd($m,$b)) == 1);
              $fofx = Formula("$c/($m $x+$b)")->reduce;
              $emptyf = $fofx->TeX;
              $emptyf =~ s/$x/(\phantom{$x})/g;
              $subbed = $fofx->substitute($x=>$inner)->reduce;
              $g = gcd(gcd($m,$m*$a+$b),$c);
              $preanswer = ($g == 1) ? '' : '\amp = ' . Formula("$c/($m $x + ($m*$a+$b))")->reduce->TeX . '\\';
              $answer = Formula("($c/$g)/($m/$g $x + ($m*$a+$b)/$g)")->reduce;
              $mxpma = Formula("$m $x+$m $a")->reduce;
              $evaluator = $answer -> cmp(
                 checker=>sub{
                    my ( $correct, $student, $ansHash ) = @_;
                    return 0 if $ansHash->{isPreview} || $correct != $student;
                    $student = $ansHash->{student_formula};
                    $correct = $correct->{original_formula} if defined $correct->{original_formula};
                    $student = Formula("$student"); $correct = Formula("$correct");
                    return 0 unless ($correct == $student);
                    Context()->flags->set(bizarroAdd=>1, bizarroSub=>1, bizarroMul=>1);
                    delete $correct->{test_values};
                    delete $student->{test_values};
                    my $OK = (($correct == $student) or ($student == $correct));
                    Context()->flags->set(bizarroAdd=>0, bizarroSub=>0, bizarroMul=>0);
                    Value::Error("Your answer is correct, but please simplify it further") unless $OK;
                    return $OK;
              });
          </pg-code>
          <statement>
            <p permid="pze">
              Simplify <m><var name="$f" />(<var name="$inner" />)</m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="VGn">
              <var name="$answer" evaluator="$evaluator" width="30" />
            </p>
          </statement>
          <solution permid="ZrR">
            <p permid="jvx">
              <md permid="VkO">
                <mrow><var name="$f" />(\phantom{<var name="$x" />})\amp= <var name="$emptyf" /></mrow>
                <mrow><var name="$f" />(<var name="$inner" />)\amp=<var name="$subbed" /></mrow>
                <mrow>\amp=\frac{<var name="$c" />}{<var name="$mxpma" /> + <var name="$b" />}</mrow>
                <mrow><var name="$preanswer" />\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="qLB">
        <webwork copy="webwork-simplify-composition-10"/>
      </exercise>
      <exercise permid="WSK">
        <webwork xml:id="webwork-simplify-composition-11">
          <pg-code>
            Context()->operators->set(
            '+' => {class => 'bizarro::BOP::add', isCommand => 1},
            '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
            '*' => {class => 'bizarro::BOP::multiply', isCommand => 1},
            );
            $x = list_random('x','y','z','s','t');
            $f = list_random('g','h','F','G','H','K');
            Context()->variables->are($x=>'Real');
            Context()->noreduce('(-x)+y', '(-x)-y');
            $a = non_zero_random(2,9,1)*list_random(-1,1);
            $inner = Formula("$a $x");
            $m = non_zero_random(-8,8,1);
            $b = non_zero_random(-8,8,1);
            $c = non_zero_random(1,9,1);
            $fofx = Formula("$c $x/($m $x^2+$b)")->reduce;
            $emptyf = $fofx->TeX;
            $innertex = $inner->TeX;
            $emptyf =~ s/$x/(\phantom{$innertex})/g;
            $subbed = $emptyf;
            $subbed =~ s/\phantom//g;
            $G = gcd($m*($a**2), $b);
            $G = gcd($G, $c*$a);
            $answer = Formula("$c*$a/$G $x/($m*($a)^2/$G $x^2+$b/$G)")->reduce;
            $cax = Formula("$c*$a $x")->reduce;
            $a2x2 = Formula("($a)^2 $x^2")->reduce;
            $evaluator = $answer -> cmp(
              checker=>sub{
                my ( $correct, $student, $ansHash ) = @_;
                return 0 if $ansHash->{isPreview} || $correct != $student;
                $student = $ansHash->{student_formula};
                $correct = $correct->{original_formula} if defined $correct->{original_formula};
                $student = Formula("$student"); $correct = Formula("$correct");
                return 0 unless ($correct == $student);
                Context()->flags->set(bizarroAdd=>1, bizarroSub=>1, bizarroMul=>1);
                delete $correct->{test_values};
                delete $student->{test_values};
                my $OK = (($correct == $student) or ($student == $correct));
                Context()->flags->set(bizarroAdd=>0, bizarroSub=>0, bizarroMul=>0);
                Value::Error("Your answer is correct, but please simplify it further") unless $OK;
                return $OK;
            });
          </pg-code>
          <statement>
            <p permid="ObO">
              Simplify <m><var name="$f" />(<var name="$inner" />)</m>,
              where <m><var name="$f" />(<var name="$x" />)=<var name="$fofx" /></m>.
            </p>
            <p permid="uiX">
              <var name="$answer" evaluator="$evaluator" width="30" />
            </p>
          </statement>
          <solution permid="lGj">
            <p permid="vJP">
              <md permid="hzg">
                <mrow><var name="$f" />(\phantom{<var name="$x" />})\amp= <var name="$emptyf" /></mrow>
                <mrow><var name="$f" />(<var name="$inner" />)\amp=<var name="$subbed" /></mrow>
                <mrow>\amp=\frac{<var name="$cax" />}{<var name="$m" />\left(<var name="$a2x2" />\right) + <var name="$b" />}</mrow>
                <mrow>\amp=<var name="$answer" /></mrow>
              </md>
            </p>
          </solution>
        </webwork>
      </exercise>
      <exercise permid="CZT">
        <webwork copy="webwork-simplify-composition-11"/>
      </exercise>
    </exercisegroup>

    <exercisegroup cols="2" permid="omu">

      <exercise permid="jhc">
        <webwork source="Contrib/PCC/BasicAlgebra/FunctionBasics/FunctionComposition65.pg" />
      </exercise>

      <exercise permid="Pol">
        <webwork source="Contrib/PCC/BasicAlgebra/FunctionBasics/FunctionComposition65.pg" />
      </exercise>

      <exercise permid="vvu">
        <webwork source="Contrib/PCC/BasicAlgebra/FunctionBasics/FunctionComposition66.pg" />
      </exercise>

      <exercise permid="bCD">
        <webwork source="Contrib/PCC/BasicAlgebra/FunctionBasics/FunctionComposition66.pg" />
      </exercise>

    </exercisegroup>

    <exercisegroup permid="UtD">
      <title>Applications</title>
      <exercise permid="HJM">
        <webwork source="Library/LoyolaChicago/Precalc/Chap2Sec4/Q38.pg" />
      </exercise>

      <exercise permid="nQV">
        <webwork>
            <pg-code>
              Context()->operators->set(
              '+' => {class => 'bizarro::BOP::add', isCommand => 1},
              '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
              '*' => {class => 'bizarro::BOP::multiply', isCommand => 1},
              );
              $base = random(40,60,2);
              $amplitude = random(20,30,1);
              Context()->variables->are(t=>'Real');
              $T = Formula("$amplitude t/(t^2+1)+$base");
              $shift = random(1,4,1);
              $answer = Formula("($amplitude t + $amplitude * $shift)/(t^2 + 2*$shift t+ ($shift**2+1))+$base");
              $evaluator = $answer -> cmp(
                 checker=>sub{
                    my ( $correct, $student, $ansHash ) = @_;
                    return 0 if $ansHash->{isPreview} || $correct != $student;
                    $student = $ansHash->{student_formula};
                    $correct = $correct->{original_formula} if defined $correct->{original_formula};
                    $student = Formula("$student"); $correct = Formula("$correct");
                    return 0 unless ($correct == $student);
                    Context()->flags->set(bizarroAdd=>1, bizarroSub=>1, bizarroMul=>1);
                    delete $correct->{test_values};
                    delete $student->{test_values};
                    my $OK = (($correct == $student) or ($student == $correct));
                    Context()->flags->set(bizarroAdd=>0, bizarroSub=>0, bizarroMul=>0);
                    Value::Error("Your answer is correct, but please simplify it further") unless $OK;
                    return $OK;
              });
            </pg-code>
            <statement>
              <p permid="mEy">
                Suppose <m>T(t)</m> represents the temperature outside,
                in Fahrenheit, at <m>t</m> hours past noon,
                and a formula for <m>T</m> is <m>T(t)=<var name="$T" /></m>.
              </p>

              <p permid="SLH">
                If we introduce <m>F(t)</m> as the temperature outside,
                in Fahrenheit,
                at <m>t</m> hours past <var name="$shift" />:00pm,
                then <m>F(t)=T(t+<var name="$shift" />)</m>.
                Find a simplified formula for <m>T(t+<var name="$shift" />)</m>.
              </p>

              <p permid="ySQ">
                <m>T(t+<var name="$shift" />) = </m><var name="$answer" evaluator="$evaluator" width="20" />
              </p>
            </statement>
        </webwork>
      </exercise>

      <exercise permid="TYe">
        <webwork>
            <pg-code>
              Context()->operators->set(
              '+' => {class => 'bizarro::BOP::add', isCommand => 1},
              '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
              '*' => {class => 'bizarro::BOP::multiply', isCommand => 1},
              );
              $amplitude = random(20,80,10);
              $shift = list_random(2,4,5);
              $base = $amplitude/$shift;
              Context()->variables->are(t=>'Real');
              $T = Formula("$base - $amplitude /(t+$shift)");
              $answer = Formula("1024*$base  - 1024*$amplitude /(t+$shift)");
              $evaluator = $answer -> cmp(
                 checker=>sub{
                    my ( $correct, $student, $ansHash ) = @_;
                    return 0 if $ansHash->{isPreview} || $correct != $student;
                    $student = $ansHash->{student_formula};
                    $correct = $correct->{original_formula} if defined $correct->{original_formula};
                    $student = Formula("$student"); $correct = Formula("$correct");
                    return 0 unless ($correct == $student);
                    Context()->flags->set(bizarroAdd=>1, bizarroSub=>1, bizarroMul=>1);
                    delete $correct->{test_values};
                    delete $student->{test_values};
                    my $OK = (($correct == $student) or ($student == $correct));
                    Context()->flags->set(bizarroAdd=>0, bizarroSub=>0, bizarroMul=>0);
                    Value::Error("Your answer is correct, but please simplify it further") unless $OK;
                    return $OK;
              });
            </pg-code>
            <statement>
              <p permid="eZZ">
                Suppose <m>G(t)</m> represents how many gigabytes of data has been downloaded <m>t</m> minutes after you started a download,
                and a formula for <m>G</m> is <m>G(t)=<var name="$T" /></m>.
              </p>

              <p permid="Lhi">
                If we introduce <m>M(t)</m> as how many megabytes of data has been downloaded <m>t</m> minutes after you started a download,
                then <m>M(t)=1024G(t)</m>.
                Find a simplified formula for <m>1024G(t)</m>.
              </p>

              <p permid="ror">
                <m>1024G(t) = </m><var name="$answer" evaluator="$evaluator" width="20" />
              </p>
            </statement>
        </webwork>
      </exercise>

    </exercisegroup>
  </exercises>
</section>

