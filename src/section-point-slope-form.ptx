<?xml version="1.0" encoding="UTF-8" ?>
<!-- *********************************************************************-->
<!-- Copyright 2016-2018                                                  -->
<!-- Portland Community College                                           -->
<!--                                                                      -->
<!-- This file is part of Open Resources for Community College Algebra    -->
<!-- (ORCCA).                                                             -->
<!-- *********************************************************************-->
<section xml:id="section-point-slope-form" permid="vPt">
  <title>Point-Slope Form</title>
  <objectives permid="bfE">
    <title>PCC Course Content and Outcome Guide</title>
    <ul permid="gzr">
      <li permid="ljk">
        <xref ref="mth60-graph-lines-with-ordered-pairs" />
      </li>

      <li permid="Rqt">
        <xref ref="mth60-graph-lines-with-point-and-slope" />
      </li>

      <li permid="xxC">
        <xref ref="mth60-find-slope-intercept-form-equation" />
      </li>

      <li permid="dEL">
        <xref ref="mth60-find-equations-in-point-slope-form" />
      </li>

      <li permid="JLU"><xref ref="mth60-interpret-slope-in-context" /></li>

      <li permid="pTd"><xref ref="mth60-create-and-graph-linear-model" /></li>

      <li permid="Wam">
        <xref ref="mth60-create-tables-and-graphs-in-context" />
      </li>
    </ul>
  </objectives>

  <introduction permid="HmN">
    <p permid="ksm">
      In <xref ref="section-slope-intercept-form">Section</xref>,
      we learned that a linear equation can be written in slope-intercept form,
      <m>y=mx+b\text{.}</m> This section covers an alternative that can often be more useful depending on the application:
      <term>point-slope form</term>.
    </p>

    <figure permid="Qzv">
      <caption>Alternative Video Lesson</caption>
      <video youtubeplaylist="PLmuZCPhWPt-e3HVQTn7ysJcPB_-5mUO5O" />
    </figure>
  </introduction>

  <subsection permid="bWC">
    <title>Point-Slope Motivation and Definition</title>
    <p permid="ihA">
      Starting in 1990, the population of the United States has been growing by about <m>2.865</m> million per year.
      Also, back in 1990, the population was <m>253</m> million.
      Since the rate of growth has been roughly constant,
      a linear model is appropriate.
      Let's try to write an equation to model this.
    </p>

    <p permid="OoJ">
      We consider using <xref ref="equation-slope-intercept-form" text="title">slope-intercept form</xref>,
      but we would need to know the <m>y</m>-intercept,
      and nothing in the background tells us that.
      We'd need to know the population of the United States in the year 0, before there even was a United States.
    </p>

    <p permid="uvS">
      We could do some side work to calculate the <m>y</m>-intercept,
      but let's try something else.
      Here are some things we know:

      <ol permid="Fcb">
        <li permid="Chv">
          <p permid="Bcc">
            The slope equation is <m>m=\frac{y_2-y_1}{x_2-x_1}</m>.
          </p>
        </li>

        <li permid="ioE">
          <p permid="hjl">
            The slope is <m>m=2.865</m>
            (million per year).
          </p>
        </li>

        <li permid="OvN">
          <p permid="Nqu">
            One point on the line is <m>(1990,253)</m>,
            because in 1990, the population was <m>253</m> million.
          </p>
        </li>
      </ol>
    </p>

    <p permid="aDb">
      If we use the generic <m>(x,y)</m> to represent a point
      <em>somewhere</em> on this line,
      then the rate of change between
      <m>(1990,253)</m> and <m>(x,y)</m> has to be <m>2.865</m>.
      So
      <me permid="XIv">
        \frac{y-253}{x-1990}=2.865
      </me>.
      There is good reason<fn>
      It will help us to see that <m>y</m> (population)
      <em>depends</em> on <m>x</m>
      (whatever year it is).
      </fn> to want to isolate <m>y</m> in this equation:
      <md permid="DPE">
        <mrow>\frac{y-253}{x-1990}\amp=2.865</mrow>
        <mrow>y-253\amp=2.865\multiplyright{(x-1990)}\amp\amp\text{(could distribute, but not going to)}</mrow>
        <mrow>y\amp=2.865(x-1990)\addright{253}</mrow>
      </md>
    </p>

    <p permid="GKk">
      This is a good place to stop.
      We have isolated <m>y</m>,
      and three <em>meaningful</em> numbers appear in the population:
      the rate of growth, a certain year,
      and the population in that year.
      This is a specific example of <term>point-slope form</term>.
      Before we look deeper at point-slope form,
      let's continue reducing the line equation into slope-intercept form.
      <md permid="jWN">
        <mrow>y\amp=2.865(x-1990)+253</mrow>
        <mrow>y\amp=2.865x - 5701.35 + 253</mrow>
        <mrow>y\amp=2.865x - 5448.35</mrow>
      </md>
    </p>

    <p permid="mRt">
      One concern with <xref ref="equation-slope-intercept-form" text="title">slope-intercept form</xref>
      is that it uses the <m>y</m>-intercept,
      which might be somewhat meaningless in the context of an application.
      For example,
      here we have found that the <m>y</m>-intercept is at <m>(0,-5448.35)</m>,
      but what practical use is that?
      It's nonsense to say that in the year 0, the population of the United States was <m>-5448.35</m> million.
      It doesn't make sense to have a negative population.
      It doesn't make sense to talk about the United States population before there even was a United States.
      And it doesn't make sense to use this model for years earlier than 1990 because the background information says clearly that the rate of change we have applies to years 1990 and later.
    </p>

    <p permid="SYC">
      For all these reasons, we prefer the equation when it was in the form
      <me permid="QdW">
        y=2.865(x-1990)\addright{253}
      </me>
    </p>

    <definition xml:id="definition-point-slope-form" permid="lqo">
      <title>Point-Slope Form</title>
      <idx><h>point-slope form</h></idx>
      <idx><h>form</h><h>point-slope</h></idx>
      <statement>
        <p permid="qhy">
          When <m>x</m> and <m>y</m> have a linear relationship where <m>m</m> is the slope and
          <m>(x_0,y_0)</m> is some specific point that the line passes through,
          one equation for this relationship is
          <men xml:id="equation-point-slope-form" permid="wlf">
            y=m\left(x-x_0\right)+y_0
          </men>
          and this equation is called the
          <term>point-slope form</term> of the line.
          It is called this because the slope and one point on the line are immediately discernible from the numbers in the equation.
        </p>

        <figure permid="WoH">
          <caption></caption>
          <image width="47%" permid="OYD">
            <description></description>

            <latex-image>

            <![CDATA[\begin{tikzpicture}
                \begin{axis}[xmin=-1,xmax=9,
                            ymin=-1,ymax=9,
                            ticks=none,
                            grid=none]
                    \addplot+[domain = -1:9]{2/7*(x-5)+4} node[pos=0.7,above,sloped] {$y=m\left(x-x_0\right)+y_0$};
                    \addplot[soliddot] coordinates {(5,4)} node[below right] {$\left(x_0,y_0\right)$};
                \end{axis}
            \end{tikzpicture}
            ]]>
            </latex-image>
          </image>

        </figure>
      </statement>
    </definition>

    <remark permid="xEG">
      <title>Alternative Point-Slope Form</title>
      <p permid="rWL">
        It is also common to define point-slope form as
        <men xml:id="equation-point-slope-form-variant" permid="cso">
          y-y_0=m\left(x-x_0\right)
        </men>
        by subtracting <m>y_0</m> from each side.
        Some exercises may appear using this form.
      </p>
    </remark>

    <exercise xml:id="exercise-point-slope" permid="Whq">
      <webwork>
          <setup>

            <pg-code>
                $slope=3;
                Context("Point");
                $point=OneOf(Point(2,-1), Point(3,2), Point(4,5), Point(5,8));
                Context("Numeric")->variables->add(y=>'Real');
                parser::Assignment->Allow;
                Context()->flags->set(reduceConstants=>0);
                Context()->operators->undefine("/");
                Parser::Number::NoDecimals();
                $eq=Formula("y=3*(x-3)+2");
                $gr = init_graph(-1,-1,9,9,axes=>[0,0],grid=>[10,10],size=>[240,240]);
                $gr -> lb('reset');
                $gr->h_ticks(0,"black",1..8);
                $gr->v_ticks(0,"black",1..8);
                for my $i (2,4,6,8) {
                  $gr->lb(new Label($i,-0.5,$i,'black','center','middle','small'));
                  $gr->lb(new Label(-0.5,$i,$i,'black','center','middle','small'));
                };
                $gr->lb(new Label(9,-0.5,'x','black','right','middle','small'));
                $gr->lb(new Label(-0.5,9,'y','black','center','top','small'));
                ($start,$stop) = (2,5.333);
                $gr->moveTo(3,2);
                $gr->arrowTo($start,3*($start-3)+2,'blue',1);
                $gr->moveTo(3,2);
                $gr->arrowTo($stop,3*($stop-3)+2,'blue',1);
            </pg-code>
          </setup>
          <statement>
            <p permid="wGE">
              Consider the line in this graph:
            </p>

            <sidebyside widths="47%" permid="dLP">
              <image permid="BES" pg-name="$gr" />
            </sidebyside>

            <p permid="cNN">
              <ol label="a." permid="YUS">
                <li permid="uCW">
                  <p permid="txD">
                    Identify a point visible on this line that has integer coordinates.
                  </p>

                  <p permid="ZEM">
                    <var name="$point" width="10" />
                  </p>
                </li>

                <li permid="aKf">
                  <p permid="FLV">
                    What is the slope of the line?
                  </p>

                  <p permid="lTe">
                    <var name="$slope" width="10" />
                  </p>
                </li>

                <li permid="GRo">
                  <p permid="San">
                    Use point-slope form to write an equation for this line,
                    making use of a point with integer coordinates.
                  </p>

                  <p permid="yhw">
                    <var name="$eq" width="20" />
                  </p>
                </li>
              </ol>
            </p>
          </statement>
          <solution permid="fPx">
            <p permid="kNL">
              <ol label="a." permid="odQ">
                <li permid="mYx">
                  <p permid="eoF">
                    The visible points with integer coordinates are <m>(2,-1)</m>,
                    <m>(3,2)</m>,
                    <m>(4,5)</m>, and <m>(5,8)</m>.
                  </p>
                </li>

                <li permid="TfG">
                  <p permid="KvO">
                    Several slope triangles are visible where the <q>run</q>
                    is <m>1</m> and the <q>rise</q> is <m>3</m>.
                    So the slope is <m>\frac{3}{1}=3</m>.
                  </p>
                </li>

                <li permid="zmP">
                  <p permid="qCX">
                    Using <m>(3,2)</m>, the point-slope equation is
                    <m>y=3(x-3)+2</m>. (You could use other points, like <m>(2,-1)</m>,
                    and get a different-looking equation like
                    <m>y=3(x-2)+(-1)</m> which simplifies to <m>y=3(x-2)-1</m>.)
                  </p>
                </li>
              </ol>
            </p>
          </solution>
      </webwork>
    </exercise>

    <p permid="zfL">
      In <xref ref="exercise-point-slope">Checkpoint</xref>,
      the solution explains that each of the following are acceptable equations for the same line:
      <md permid="Izx">
        <mrow>y\amp=3(x-3)+2\amp y\amp=3(x-2)-1</mrow>
      </md>
      The first uses <m>(3,2)</m> as a point on the line,
      and the second uses <m>(2,-1)</m>.
      Are those two equations really equivalent?
      Let's distribute and simplify each of them to get <xref ref="equation-slope-intercept-form" text="title">slope-intercept form</xref>.
      <md permid="oGG">
        <mrow>y\amp=3(x-3)+2\amp y\amp=3(x-2)-1</mrow>
        <mrow>y\amp=3x-9+2\amp y\amp=3x-6-1</mrow>
        <mrow>y\amp=3x-7\amp y\amp=3x-7</mrow>
      </md>
      So, yes.
      It didn't matter which point we used to write a point-slope equation.
      We get different-looking equations that still represent the same line.
    </p>

    <p permid="fmU">
      Point-slope form is preferable when we know a line's slope and a point on it,
      but we don't know the <m>y</m>-intercept.
    </p>

    <example permid="Rxx">
      <p permid="CvQ">
        A spa chain has been losing customers at a roughly constant rate since the year 2010.
        In 2013, it had <m>2{,}975</m> customers;
        in 2016, it had <m>2{,}585</m> customers.
        Management estimated that the company will go out of business once its customer base decreases to
        <m>1{,}800\text{.}</m> If this trend continues,
        when will the company close?
      </p>

      <p permid="iCZ">
        The given information tells us two points on the line:
        <m>(2013,2975)</m> and <m>(2016,2585)\text{.}</m> The <xref ref="equation-slope-formula" text="title">slope formula</xref> will give us the slope.
        After labeling those two points as
        <m>(\overset{x_1}{2013},\overset{y_1}{2975})</m> and <m>(\overset{x_2}{2016},\overset{y_2}{2585})</m>, we have:
        <md permid="UNP">
          <mrow>\text{slope}\amp=\frac{y_2-y_1}{x_2-x_1}</mrow>
          <mrow>\amp=\frac{2585-2975}{2016-2013}</mrow>
          <mrow>\amp=\frac{-390}{3}</mrow>
          <mrow>\amp=-130</mrow>
        </md>
        And considering units,
        this means they are losing <m>130</m> customers per year.
      </p>

      <p permid="OKi">
        Let's note that we could try to make an equation for this line in slope-intercept form,
        but then we would need to calculate the <m>y</m>-intercept,
        which in context would correspond to the number of customers in year <m>0</m>.
        We could do it,
        but we'd be working with numbers that have no real-world meaning in this context.
      </p>

      <p permid="uRr">
        For point-slope form, since we calculated the slope,
        we know at least this much:
        <me permid="AUY">
          y=-130(x-x_0)+y_0\text{.}
        </me>
        Now we can pick one of those two given points,
        say <m>(2013,2975)\text{,}</m> and get the equation
        <me permid="hch">
          y=-130(x-2013)+2975\text{.}
        </me>
        Note that all three numbers in this equation have meaning in the context of the spa chain.
      </p>

      <p permid="aYA">
        We're ready to answer the question about when the chain might go out of business.
        Substitute <m>y</m> in the equation with <m>1800</m> and solve for
        <m>x\text{,}</m> and we will get the answer we seek.
        <md permid="Njq">
          <mrow>y\amp=-130(x-2013)+2975</mrow>
          <mrow>\substitute{1800}\amp=-130(x-2013)+2975</mrow>
          <mrow>1800\subtractright{2975}\amp=-130(x-2013)</mrow>
          <mrow>-1175\amp=-130(x-2013)</mrow>
          <mrow>\divideunder{-1175}{-130}\amp=\divideunder{-130(x-2013)}{-130}</mrow>
          <mrow>9.038\amp\approx x-2013</mrow>
          <mrow>9.038\addright{2013}\amp\approx x</mrow>
          <mrow>2022\amp\approx x</mrow>
        </md>
        And so we find that at this rate,
        the company is headed toward a collapse in 2022.
      </p>

      <sidebyside widths="47% 47%" margins="0%" permid="JSY">
        <p permid="HfJ">
          Shown is a graph that represents the scenario.
          Note that to make a graph of <m>y=-130(x-2013)+2975</m>,
          we must first find the point
          <m>(2013,2975)</m> and from there use the slope of <m>-130</m> to draw the line.
        </p>

        <figure permid="nmS">
          <caption>A Graph of <m>y=-130(x-2013)+2975</m></caption>
          <image permid="vfM">
            <description></description>

            <latex-image>
            <![CDATA[\begin{tikzpicture}
                \begin{axis}[xmin=-10,xmax=40,
                            ymin=-1000,ymax=5000,
                            xtick={10,20,30},
                            xticklabels={2010,2020,2030},
                            ytick={1000,2000,3000,4000},
                            minor xtick=,
                            minor ytick=]
                    \addplot[primarycurve, domain=-2.577:40]{-130*(x-13)+2975};
                    \addplot[secondarycurve, domain=-10:40]{1800} node[pos=0.35,above] {$y=1800$};
                    \addplot[soliddot, color=fifthcolor] coordinates {(13,2975)} node[above right] {$(2013,2975)$};
                    \addplot[soliddot, color=fourthcolor] coordinates {(22,1800)} node[below left] {$(2022,1800)$};
                \end{axis}
            \end{tikzpicture}
            ]]>
            </latex-image>
          </image>

        </figure>
      </sidebyside>
    </example>

    <exercise permid="Coz">
      <webwork>
          <setup>

            <pg-code>
                @st=('AL','AK','AZ','AR','CA','CO','CT','DE','FL','GA','HI','ID','IL','IN','IA','KS','KY','LA','ME','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','OH','OK','OR','PA','RI','SC','SD','TN','TX','UT','VT','VA','WA','WV','WI','WY');
                @xs=(60.55,54.80,53.65,60.57,37.12,46.13,40.73,39.98,49.13,53.30,27.84,64.53,40.73,54.13,46.18,59.71,60.49,57.78,40.98,35.90,37.51,44.71,44.96,55.29,53.76,55.35,59.80,45.68,46.40,40.59,42.84,35.17,50.39,58.32,47.69,66.77,42.15,46.59,35.24,54.56,57.89,59.48,57.17,72.79,30.97,47.28,41.29,62.30,45.89,68.64);
                @ys=(62.89,52.89,49.64,60.59,33.25,44.80,41.73,41.92,49.06,51.20,29.44,59.32,39.41,57.12,51.21,57.22,62.54,58.09,45.16,34.79,33.52,47.60,44.95,58.32,56.88,56.52,60.33,45.53,47.25,42.03,40.05,36.84,49.90,62.95,52.06,65.33,39.49,48.84,39.46,54.90,61.53,61.06,52.43,46.80,32.64,44.68,38.17,68.65,47.87,67.40);
                %x=map{$st[$_]=>$xs[$_]}(0..49);
                %y=map{$st[$_]=>$ys[$_]}(0..49);
                $gr=init_graph(25,25,80,80,axes=>[25,25],grid=>[11,11],size=>[240,240]);
                $gr->lb('reset');
                $gr->lb(new Label(79,29,'2012 percentage','black','right','bottom', 'small'));
                $gr->lb(new Label(26,79,'2016 percentage','black','left','top', 'small'));
                for my$i(3..7){$gr->lb(new Label($i*10,26,$i*10,'black','center','bottom','small'));$gr->lb(new Label(26,$i*10,$i*10,'black','left','middle','small'));};
                for my$s(@st){$gr->stamps(closed_circle($x{$s},$y{$s},'blue'));};
                add_functions($gr, "0.8775*x+5.849 for x in &lt;25,80> using color:blue and weight:1");
                Context("Numeric")->variables->add(y=>'Real');
                Context()->flags->set(tolType=>'absolute',tolerance=>1.5,limits=>[25,80]);
                parser::Assignment->Allow;
                $eq=Formula("y=0.8775(x-50)+50");
            </pg-code>
          </setup>
          <statement>
            <p permid="IUW">
              If we go state by state and compare the Republican candidate's 2012 vote share (<m>x</m>) to the Republican candidate's 2016 vote share (<m>y</m>),
              we get the following graph where a trendline has been superimposed.
            </p>

            <sidebyside widths="40%" permid="qah">
              <image permid="NTk" pg-name="$gr" />
            </sidebyside>

            <p permid="pcf">
              Find a point-slope equation for this line.
              (Note that a slope-intercept equation would use the <m>y</m>-intercept cooridnate <m>b</m>,
              and that would not be meaningful in context,
              since no state had anywhere near zero percent Republican vote.)
            </p>

            <p permid="Vjo">
              <var name="$eq" width="20" />
            </p>
          </statement>
          <solution permid="LWG">
            <p permid="QUU">
              We need to calculate slope first.
              And for that,
              we need to identify two points on the line. conveniently,
              the line appears to pass right through <m>(50,50)</m>.
              We have to take a second point somewhere,
              and <m>(75,72)</m> seems like a reasonable roughly accurate choice.
              The slope equation gives us that
              <me permid="tqz">
                m=\frac{72-50}{75-50}=\frac{22}{25}=0.88\text{.}
              </me>
            </p>

            <p permid="xcd">
              Using <m>(50,50)</m> as the point,
              the point-slope equation would then be
              <me permid="ZxI">
                y=0.88(x-50)+50\text{.}
              </me>
            </p>
          </solution>
      </webwork>
    </exercise>
  </subsection>

  <subsection permid="IdL">
    <title>Using Two Points to Build a Linear Equation</title>
    <p permid="Lud">
      Since two points can determine a line's location,
      we can calculate a line's equation using just the coordinates from any two points it passes through.
    </p>

    <example xml:id="example-two-points-to-build-point-slope-form" permid="ivI">
      <statement>
        <p permid="Tub">
          A line passes through <m>(-6,0)</m> and
          <m>(9,-10)\text{.}</m> Find this line's equation in both point-slope and slope-intercept form.
        </p>
      </statement>
      <solution permid="ntW">
        <p permid="djm">
          We will use the <xref ref="equation-slope-formula" text="title">slope formula</xref> to find the slope first.
          After labeling those two points as <m>(\overset{x_1}{-6},\overset{y_1}{0}) \text{ and } (\overset{x_2}{9},\overset{y_2}{-10})\text{,}</m> we have:
          <md permid="FER">
            <mrow>\text{slope}\amp=\frac{y_2-y_1}{x_2-x_1}</mrow>
            <mrow>\amp=\frac{-10-0}{9-(-6)}</mrow>
            <mrow>\amp=\frac{-10}{15}</mrow>
            <mrow>\amp=-\frac{2}{3}</mrow>
          </md>
        </p>

        <sidebyside widths="47% 47%" margins="0%" permid="uKa">
          <p permid="Jqv">
            The point-slope equation is <m>y=-\frac{2}{3}(x-x_0)+y_0\text{.}</m> Next,
            we will use <m>(9,-10)</m> and substitute <m>x_0</m> with <m>9</m> and <m>y_0</m> with <m>-10\text{,}</m> and we have:
            <md permid="lMa">
              <mrow>y\amp=-\frac{2}{3}(x-x_0)+y_0</mrow>
              <mrow>y\amp=-\frac{2}{3}(x-9)+(-10)</mrow>
              <mrow>y\amp=-\frac{2}{3}(x-9)-10</mrow>
            </md>
          </p>

          <p permid="pxE">
            Next, we will change the point-slope equation into slope-intercept form:
            <md permid="RTj">
              <mrow>y\amp=-\frac{2}{3}(x-9)-10</mrow>
              <mrow>y\amp=-\frac{2}{3}x+6-10</mrow>
              <mrow>y\amp=-\frac{2}{3}x-4</mrow>
            </md>
          </p>
        </sidebyside>
      </solution>
    </example>

    <remark permid="OCR">
      <p permid="YdU">
        Note that many other resources use the <xref ref="equation-point-slope-form-variant" text="title">alternate point-slope form</xref> to write their equations.
        Those equations will always be equivalent to those created using our <xref ref="definition-point-slope-form" text="title">point-slope form</xref>.
        In <xref ref="example-two-points-to-build-point-slope-form">Example</xref>,
        we found the point-slope form <m>y=-\frac{2}{3}(x-9)-10</m>.
        The <url href="https://www.khanacademy.org/math/algebra/two-var-linear-equations/point-slope/a/point-slope-form-review">alternate point-slope form equation</url><fn>
        <url href="https://www.khanacademy.org/math/algebra/two-var-linear-equations/point-slope/a/point-slope-form-review">khanacademy.org/math/algebra/two-var-linear-equations/point-slope/a/point-slope-form-review</url>
        </fn> would have given us <m>y+10=-\frac{2}{3}(x-9)</m>.
        If you solve this equation for <m>y</m> and simplify,
        you should still get <m>y=-\frac{2}{3}x-4</m>, as we did earlier.
      </p>
    </remark>

    <exercise permid="aRj">
      <webwork>
          <setup>

            <pg-code>
                Context("Numeric")->variables->add(y=>'Real');
                Context()->flags->set(tolType=>'absolute',tolerance=>1.5,limits=>[25,80]);
                Context()->flags->set(reduceConstants=>0);
                parser::Assignment->Allow;
                Context()->operators->set(
                '+' => {class => 'bizarro::BOP::add', isCommand => 1},
                '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
                );
                $ps[0]=Formula("y=-131/55(x-13)-108");
                $ps[1]=Formula("y=-131/55(x+42)+23");
                $evps=$ps[0]-> cmp(
                checker=>sub{
                my ( $correct, $student, $ansHash ) = @_;
                return 0 if $ansHash->{isPreview} || ($correct != $student and $ps[1] != $student);
                $student = $ansHash->{student_formula};
                $correct = $correct->{original_formula} if defined $correct->{original_formula};
                $student = Formula("$student"); $correct = Formula("$correct");
                return 0 unless ($correct == $student or $ps[1] == $student);
                Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
                delete $correct->{test_values}, $student->{test_values};
                Value->Error("Your answer is a valid equation for this line, but it's not in point-slope form using one of the two given points") unless (($correct == $student) or ($ps[1] == $student));
                Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
                return 1;
                });
                $si=Formula("y=-131/55*x-4237/55");
                $evsi=$si-> cmp(
                checker=>sub{
                my ( $correct, $student, $ansHash ) = @_;
                return 0 if $ansHash->{isPreview} || $correct != $student;
                $student = $ansHash->{student_formula};
                $correct = $correct->{original_formula} if defined $correct->{original_formula};
                $student = Formula("$student"); $correct = Formula("$correct");
                return 0 unless $correct == $student;
                Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
                delete $correct->{test_values}, $student->{test_values};
                Value->Error("Your answer is a valid equation for this line, but it's not in slope-intercept form") unless ($correct == $student);
                Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
                return 1;
                });
            </pg-code>
          </setup>
          <statement>
            <p permid="Bqx">
              A line passes through <m>(13,-108)</m> and
              <m>(-42,23)\text{.}</m> Find equations for this line using both point-slope and slope-intercept form.
            </p>

            <p permid="hxG">
              A point-slope equation: <var name="$ps[0]" width="20" evaluator="$evps"/>
            </p>

            <p permid="NEP">
              A slope-intercept equation: <var name="$si" width="20" evaluator="$evsi"/>
            </p>
          </statement>
          <solution permid="sdP">
            <p permid="VEN">
              First, use the slope formula to find the slope of this line:
              <md permid="yas">
                <mrow>m=\frac{y_2-y_1}{x_2-x_1}\amp=\frac{23-(-108)}{-42-13}</mrow>
                <mrow>\amp=\frac{131}{-55}</mrow>
                <mrow>\amp=-\frac{131}{55}</mrow>
              </md>.
            </p>

            <p permid="BLW">
              The generic point-slope equation is <m>y=m(x-x_0)+y_0</m>.
              We have found the slope, <m>m</m>,
              and we may use <m>(13,-108)</m> for <m>(x_0,y_0)</m>.
              So an equation in point-slope form is <m><var name="$ps[0]" /></m>.
            </p>

            <p permid="hTf">
              To find a slope-intercept form equation,
              we can take the generic <m>y=mx+b</m> and substitute in the value of <m>m</m> we found.
              Also, we know that <m>(x,y)=(13,-108)</m> should make the equation true.
              So we have
              <md permid="ehB">
                <mrow>y\amp=mx+b</mrow>
                <mrow>-108\amp=-\frac{131}{55}(13)+b\amp\text{Now we may solve for }b\text{.}</mrow>
                <mrow>-108\multiplyright{55}\amp=\left(-\frac{131}{55}(13)+b\right)\multiplyright{55}</mrow>
                <mrow>-5940\amp=-131(13)+55b</mrow>
                <mrow>-5940\amp=-1703+55b</mrow>
                <mrow>-5940\addright{1703}\amp=-1703+55b\addright{1703}</mrow>
                <mrow>-4237\amp=55b</mrow>
                <mrow>\divideunder{-4237}{55}\amp=\divideunder{55b}{55}</mrow>
                <mrow>b\amp=-\frac{4237}{55}</mrow>
              </md>.
              So the slope-intercept equation is <m><var name="$si" /></m>.
            </p>
          </solution>
      </webwork>
    </exercise>
  </subsection>

  <subsection permid="okU">
    <title>More on Point-Slope Form</title>
    <p permid="rBm">
      We can tell a lot about a linear equation now that we have learned both <xref ref="equation-slope-intercept-form" text="title">slope-intercept form</xref>
      and <xref ref="equation-point-slope-form" text="title">point-slope form</xref>.
      For example,
      we can know that <m>y=4x+2</m> is in slope-intercept form because it looks like <m>y=mx+b</m>.
      It will graph as a line with slope <m>4</m> and vertical intercept <m>(0,2)</m>.
      Likewise, we know that the equation
      <m>y=-5(x-3)+2</m> is in point-slope form because it looks like <m>y=m(x-x_0)+y_0</m>.
      It will graph as a line that has slope <m>-5</m> and will pass through the point <m>(3,2)</m>.
    </p>

    <example permid="GYs">
      <statement>
        <p permid="zBk">
          For the equations below,
          state whether they are in slope-intercept form or point-slope form.
          Then identify the slope of the line and at least one point that the line will pass through.

          <ol label="a." cols="2" permid="MGA">
            <li permid="ftY">
              <p permid="WKg">
                <m>y=-3x+2</m>
              </p>
            </li>

            <li permid="LBh">
              <p permid="CRp">
                <m>y=9(x+1)-6</m>
              </p>
            </li>

            <li permid="rIq">
              <p permid="iYy">
                <m>y=5-x</m>
              </p>
            </li>

            <li permid="XPz">
              <p permid="PfH">
                <m>y=-\frac{12}{5}(x-9)+1</m>
              </p>
            </li>
          </ol>
        </p>
      </statement>
      <solution permid="TBf">
        <p permid="Oao">
          <ol label="a." permid="UkZ">
            <li permid="DWI">
              <p permid="vmQ">
                The equation <m>y=-3x+2</m> is in slope-intercept form.
                The slope is <m>-3</m> and the vertical intercept is <m>(0,2)</m>.
              </p>
            </li>

            <li permid="kdR">
              <p permid="btZ">
                The equation <m>y=9(x+1)-6</m> is in point-slope form.
                The slope is <m>9</m> and the line passes through the point <m>(-1,-6)</m>.
              </p>
            </li>

            <li permid="Qla">
              <p permid="HBi">
                The equation <m>y=5-x</m> is almost in slope-intercept form.
                If we rearrange the right hand side to be <m>y=-x+5</m>,
                we can see that the slope is <m>-1</m> and the vertical intercept is <m>(0,5)</m>.
              </p>
            </li>

            <li permid="wsj">
              <p permid="nIr">
                The equation <m>y=-\frac{12}{5}(x-9)+1</m> is in point-slope form.
                The slope is <m>-\frac{12}{5}</m> and the line passes through the point <m>(9,1)</m>.
              </p>
            </li>
          </ol>
        </p>
      </solution>
    </example>

    <remark permid="TmK">
      <p permid="Eld">
        Again, we should note that the <xref ref="equation-point-slope-form-variant" text="title">alternate point-slope form</xref>
        can be used to identify equations.
        For example,
        the equation <m>y+10=-\frac{2}{3}(x-9)</m> matches the <url href="https://en.wikipedia.org/wiki/Linear_equation#Point%E2%80%93slope_form">alternate point-slope form equation</url><fn>
        <url href="https://en.wikipedia.org/wiki/Linear_equation#Point%E2%80%93slope_form">en.wikipedia.org/wiki/Linear<underscore/>equation<hash/>Point–slope<underscore/>form</url>
        </fn> with slope <m>-\frac{2}{3}</m> and the line passes through the point <m>(9,-10)</m>.
        Note that both coordinates are the opposite of what they appear to be in the equation with this form.
      </p>
    </remark>

    <example permid="nfB">
      <statement>
        <sidebyside widths="47% 47%" margins="0%" permid="ztT">
          <p permid="fIt">
            Consider the graph in <xref ref="figure-point-slope-multiple-equations">Figure</xref>.

            <ol label="a." permid="sNJ">
              <li permid="czs">
                <p permid="TPA">
                  Find three equations that describe the line shown written in point-slope form.
                  Three integer-valued points are shown for convenience.
                </p>
              </li>

              <li permid="IGB">
                <p permid="zWJ">
                  Determine the slope-intercept form of the equation of this line.
                </p>
              </li>
            </ol>
          </p>

          <figure xml:id="figure-point-slope-multiple-equations" permid="LPC">
            <caption></caption>
            <image permid="bmV">
              <description></description>

            <latex-image>
            <![CDATA[\begin{tikzpicture}
                \begin{axis}[xmin=-20,xmax=25,
                            ymin=-40,ymax=50,
                            xtick={-15,-10,...,20},
                            ytick={-30,-20,...,40},
                            minor xtick=,
                            minor ytick=]
                    \addplot[primarycurve, domain=-8.333:25]{-12/5*(x-15)-6};
                    \addplot[soliddot] coordinates {(-5,42)} node[below left] {$(-5,42)$};
                    \addplot[soliddot] coordinates {(0,30)} node[above right] {$(0,30)$};
                    \addplot[soliddot] coordinates {(20,-18)} node[below left] {$(20,-18)$};
                \end{axis}
            \end{tikzpicture}
            ]]>
            </latex-image>
            </image>

          </figure>
        </sidebyside>
      </statement>
      <solution permid="zIo">
        <p permid="uhx">
          <ol label="a." permid="Asi">
            <li permid="oNK">
              <p permid="gdS">
                To write <em>any</em> of the equations representing this line in point-slope form,
                we must first find the slope of the line and we can use the <xref ref="equation-slope-formula" text="title">slope formula</xref> to do so.
                We will arbitrarily choose <m>(0,30)</m> and <m>(-5,42)</m> as the two points.
                Inputting these points into the slope formula yields:
                <md permid="KoK">
                  <mrow>m\amp=\frac{y_2-y_1}{x_2-x_1}</mrow>
                  <mrow>\amp=\frac{\substitute{42}-\substitute{30}}{\substitute{-5}-\substitute{0}}</mrow>
                  <mrow>\amp=\frac{12}{-5}</mrow>
                  <mrow>\amp=-\frac{12}{5}</mrow>
                </md>
                Thus the slope of the line is <m>-\frac{12}{5}</m>.
              </p>

              <p permid="Mlb">
                Next, we need to write an equation in point-slope form based on each point shown.
                Using the point <m>(0,30)</m>, we have:
                <me permid="qvT">
                  y=-\frac{12}{5}(x-0)+30
                </me>
                (This simplifies to <m>y=-\frac{12}{5}x+30</m>.)
              </p>

              <p permid="ssk">
                The next point is <m>(20,-18)</m>.
                Using this point, we can write an equation for this line as:
                <me permid="WDc">
                  y=-\frac{12}{5}(x-20)-18
                </me>
              </p>

              <p permid="Yzt">
                Finally, we can also use the point <m>(-5,42)</m> to write an equation for this line:
                <me permid="CKl">
                  y=-\frac{12}{5}(x-(-5))+42
                </me>
                which can also be written as:
                <me permid="iRu">
                  y=-\frac{12}{5}(x+5)+42
                </me>
              </p>
            </li>

            <li permid="UUT">
              <p permid="EGC">
                As <m>(0,30)</m> is the vertical intercept,
                we can write the equation of this line in slope-intercept form as <m>y=-\frac{12}{5}x+30</m>.
                It's important to note that each of the equations that were written in point-slope form simplify to this,
                making all four equations equivalent.
              </p>
            </li>
          </ol>
        </p>
      </solution>
    </example>
        <!-- todo: add problems like this:
        graph with point (482,19) and (486,23) find the ptslope form.
        Make a graph from point slope form without converting to slope intercept (and make it a terrible intercept)
        Make a graph and interpreting it given an application -->
  </subsection>

  <exercises permid="Usd">
    <exercisegroup cols="2" permid="Azm">
      <title>Review and Warmup</title>
      <exercise permid="yoA">
        <webwork source="BasicAlgebra/EvaluateExpressions/evaluate50.pg" />
      </exercise>

      <exercise permid="evJ">
        <webwork source="BasicAlgebra/EvaluateExpressions/evaluate50.pg" />
      </exercise>

      <exercise permid="KCS">
        <webwork source="Library/Mizzou/College_Algebra/Real_Numbers/Simplifying_Expressions/Algebraic_Expns_Slope.pg" />
      </exercise>

      <exercise permid="qKb">
        <webwork source="Library/Mizzou/College_Algebra/Real_Numbers/Simplifying_Expressions/Algebraic_Expns_Slope.pg" />
      </exercise>

    </exercisegroup>
    <exercisegroup cols="2" permid="gGv">
      <title>Point-Slope Form</title>
            <!-- seeds set to guarantee distinct versions -->
      <exercise permid="WRk">
        <webwork source="BasicAlgebra/PointSlopeForm/PointSlopeBasicsORCCA10.pg" seed="70"/>
      </exercise>

      <exercise permid="CYt">
        <webwork source="BasicAlgebra/PointSlopeForm/PointSlopeBasicsORCCA10.pg" seed="73"/>
      </exercise>

      <exercise permid="jfC">
        <webwork source="BasicAlgebra/PointSlopeForm/PointSlopeBasicsORCCA20.pg" seed="74"/>
      </exercise>

      <exercise permid="PmL">
        <webwork source="BasicAlgebra/PointSlopeForm/PointSlopeBasicsORCCA20.pg" seed="75"/>
      </exercise>

      <exercise permid="vtU">
        <webwork source="BasicAlgebra/PointSlopeForm/PointSlopeBasicsORCCA30.pg" />
      </exercise>

      <exercise permid="bBd">
        <webwork source="BasicAlgebra/PointSlopeForm/PointSlopeBasicsORCCA30.pg" />
      </exercise>

      <exercise permid="HIm">
        <webwork source="BasicAlgebra/PointSlopeForm/TwoPointsFindPointSlopeEquationORCCA10.pg" />
      </exercise>

      <exercise permid="nPv">
        <webwork source="BasicAlgebra/PointSlopeForm/TwoPointsFindPointSlopeEquationORCCA10.pg" />
      </exercise>

      <exercise permid="TWE">
        <webwork source="BasicAlgebra/PointSlopeForm/TwoPointsFindPointSlopeEquationORCCA20.pg" />
      </exercise>

      <exercise permid="AdN">
        <webwork source="BasicAlgebra/PointSlopeForm/TwoPointsFindPointSlopeEquationORCCA20.pg" />
      </exercise>

      <exercise permid="gkW">
        <webwork source="BasicAlgebra/PointSlopeForm/TwoPointsFindPointSlopeEquationORCCA30.pg" />
      </exercise>

      <exercise permid="Msf">
        <webwork source="BasicAlgebra/PointSlopeForm/TwoPointsFindPointSlopeEquationORCCA30.pg" />
      </exercise>

      <exercise permid="szo">
        <webwork source="BasicAlgebra/PointSlopeForm/FindLineEquationORCCA10.pg" />
      </exercise>

      <exercise permid="YGx">
        <webwork source="BasicAlgebra/PointSlopeForm/FindLineEquationORCCA10.pg" />
      </exercise>

      <exercise permid="ENG">
        <webwork source="BasicAlgebra/PointSlopeForm/FindLineEquationORCCA20.pg" />
      </exercise>

      <exercise permid="kUP">
        <webwork source="BasicAlgebra/PointSlopeForm/FindLineEquationORCCA20.pg" />
      </exercise>

      <exercise permid="RbY">
        <webwork source="BasicAlgebra/PointSlopeForm/FindLineEquationORCCA30.pg" />
      </exercise>

      <exercise permid="xjh">
        <webwork source="BasicAlgebra/PointSlopeForm/FindLineEquationORCCA30.pg" />
      </exercise>

      <exercise permid="dqq">
        <webwork source="BasicAlgebra/PointSlopeForm/FindLineEquationORCCA40.pg" />
      </exercise>

      <exercise permid="Jxz">
        <webwork source="BasicAlgebra/PointSlopeForm/FindLineEquationORCCA40.pg" />
      </exercise>

      <exercise permid="pEI">
        <webwork source="BasicAlgebra/PointSlopeForm/FindLineEquationORCCA50.pg" />
      </exercise>

      <exercise permid="VLR">
        <webwork source="BasicAlgebra/PointSlopeForm/FindLineEquationORCCA50.pg" />
      </exercise>

      <exercise permid="BTa">
        <webwork source="BasicAlgebra/PointSlopeForm/FindLineEquationORCCA60.pg" />
      </exercise>

      <exercise permid="iaj">
        <webwork source="BasicAlgebra/PointSlopeForm/FindLineEquationORCCA60.pg" />
      </exercise>

    </exercisegroup>
    <exercisegroup cols="2" permid="MNE">
      <title>Point-Slope and Slope-Intercept</title>
      <exercise permid="Ohs">
        <webwork source="BasicAlgebra/PointSlopeForm/PointSlopeToSlopeInterceptORCCA10.pg" />
      </exercise>

      <exercise permid="uoB">
        <webwork source="BasicAlgebra/PointSlopeForm/PointSlopeToSlopeInterceptORCCA10.pg" />
      </exercise>

      <exercise permid="avK">
        <webwork source="BasicAlgebra/PointSlopeForm/PointSlopeToSlopeInterceptORCCA20.pg" />
      </exercise>

      <exercise permid="GCT">
        <webwork source="BasicAlgebra/PointSlopeForm/PointSlopeToSlopeInterceptORCCA20.pg" />
      </exercise>

      <exercise permid="mKc">
        <webwork source="BasicAlgebra/PointSlopeForm/PointSlopeToSlopeInterceptORCCA30.pg" />
      </exercise>

      <exercise permid="SRl">
        <webwork source="BasicAlgebra/PointSlopeForm/PointSlopeToSlopeInterceptORCCA30.pg" />
      </exercise>

      <exercise permid="yYu">
        <webwork source="BasicAlgebra/PointSlopeForm/PointSlopeToSlopeInterceptORCCA40.pg" />
      </exercise>

      <exercise permid="ffD">
        <webwork source="BasicAlgebra/PointSlopeForm/PointSlopeToSlopeInterceptORCCA40.pg" />
      </exercise>

    </exercisegroup>
    <exercisegroup cols="3" permid="sUN">
      <title>Point-Slope Form and Graphs</title>
      <exercise permid="LmM">
        <webwork>
            <setup>

            <pg-code>
                Context("Fraction");
                Context()->flags->set(tolType=>absolute);
                Context()->operators->set(
                  '+' => {class => 'bizarro::BOP::add', isCommand => 1},
                  '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
                );
                $xmin = -2;
                $xmax = 12;
                $ymin = -2;
                $ymax = 12;
                Context()->variables->set(x=>{limits=>[$xmin,$xmax]});
                do {
                    $run = non_zero_random(2,6,1);
                    $rise = non_zero_random(-6,6,1);
                    $m = Fraction($rise,$run);
                    $h = random(1,$xmax-2,1);
                    $k = random(1,$ymax-2,1);
                    $f = Formula("$m*(x-$h)+$k");
                    $y0 = Fraction($f->eval(x=>0));
                    $hback = $h-$run;
                    $kback = $k-$rise;
                    $hforw = $h+$run;
                    $kforw = $k+$rise;
                } until (
                    ($y0->value)[1] != 1
                    and (
                      ($hback > $xmin+1 and $ymin+1 &lt; $kback and $kback &lt; $ymax-1)
                       or
                      ($hforw &lt; $xmax-1 and $ymin+1 &lt; $kforw and $kforw &lt; $ymax-1)
                    )
                );
                $top = Real(($ymax-$k)/$m+$h);
                $bottom = Real(($ymin-$k)/$m+$h);
                $left = $xmin;
                $right = $xmax;
                ($start,$stop) = (num_sort($top,$bottom,$left,$right))[1,2];
                $gr = init_graph($xmin,$ymin,$xmax,$ymax,
                    size=>[240,240]);
                $gr->lb('reset');
                $gr->v_grid("gray",-1,1..$xmax-1);
                $gr->h_grid("gray",-1,1..$ymax-1);
                #xticks
                for my $i (5,10) {
                    $gr->lb( new Label($i,0,$i,'black','center','top','large'));
                    $gr->lb( new Label($xmax,0,'x','black','right','top','large'));
                }
                #yticks
                for my $i (5,10) {
                    $gr->lb( new Label(0,$i,$i,'black','right','middle','large'));
                    $gr->lb( new Label(0,$ymax,'y ','black','center','right','large'));
                }
                $gr->moveTo(0,0);
                $gr->arrowTo($xmin,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo($xmax-($xmax-$xmin)/240,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymin+($ymax-$ymin)/240,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymax,'black',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($start+1/($m**2+1)),
                    Real($f->eval(x=>$start+1/($m**2+1))),
                    'blue',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($stop-1/($m**2+1)),
                    Real($f->eval(x=>$stop-1/($m**2+1))),
                    'blue',1);
                $gr->stamps( closed_circle($h,$k,'blue') );
                parser::Assignment->Allow;
                Context()->variables->add(y=>'Real');
                $answer = Formula("y = $f");
                $evaluator = $answer -> cmp(
                   checker=>sub{
                      my ( $correct, $student, $ansHash ) = @_;
                      return 0 if $ansHash->{isPreview} || $correct != $student;
                      $student = $ansHash->{student_formula};
                      $correct = $correct->{original_formula} if defined $correct->{original_formula};
                      $student = Formula("$student"); $correct = Formula("$correct");
                      return 0 unless ($correct == $student);
                      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
                      delete $correct->{test_values};
                      delete $student->{test_values};
                      my $OK = (($correct == $student) or ($student == $correct));
                      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
                      Value::Error("Your answer is an eqation for the line, but it is not in point-slope form using the indicated point.") unless $OK;
                      return $OK;
                });
            </pg-code>
            </setup>
            <statement>
              <p permid="tLY">
                Determine the point-slope form of the linear equation from its graph.
              </p>

              <sidebyside widths="40%" permid="fBc">
                <image permid="hMb" pg-name="$gr" />
              </sidebyside>

              <p permid="ZTh">
                <var name="$answer" evaluator="$evaluator" width="20" />
              </p>
            </statement>
            <solution permid="YkY">
              <p permid="aoG">
                The slope is <m><var name="$m" /></m> and the point <m>(<var name="$h" />,<var name="$k" />)</m> is on the graph of this line,
                so its equation can be written in point-slope form as <m><var name="$answer" /></m>.
              </p>
            </solution>
        </webwork>
      </exercise>

      <exercise permid="rtV">
        <webwork>
            <setup>

            <pg-code>
                Context("Fraction");
                Context()->flags->set(tolType=>absolute);
                Context()->operators->set(
                  '+' => {class => 'bizarro::BOP::add', isCommand => 1},
                  '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
                );
                $xmin = -2;
                $xmax = 12;
                $ymin = -2;
                $ymax = 12;
                Context()->variables->set(x=>{limits=>[$xmin,$xmax]});
                do {
                    $run = non_zero_random(2,6,1);
                    $rise = non_zero_random(-6,6,1);
                    $m = Fraction($rise,$run);
                    $h = random(1,$xmax-2,1);
                    $k = random(1,$ymax-2,1);
                    $f = Formula("$m*(x-$h)+$k");
                    $y0 = Fraction($f->eval(x=>0));
                    $hback = $h-$run;
                    $kback = $k-$rise;
                    $hforw = $h+$run;
                    $kforw = $k+$rise;
                } until (
                    ($y0->value)[1] != 1
                    and (
                      ($hback > $xmin+1 and $ymin+1 &lt; $kback and $kback &lt; $ymax-1)
                       or
                      ($hforw &lt; $xmax-1 and $ymin+1 &lt; $kforw and $kforw &lt; $ymax-1)
                    )
                );
                $top = Real(($ymax-$k)/$m+$h);
                $bottom = Real(($ymin-$k)/$m+$h);
                $left = $xmin;
                $right = $xmax;
                ($start,$stop) = (num_sort($top,$bottom,$left,$right))[1,2];
                $gr = init_graph($xmin,$ymin,$xmax,$ymax,
                    size=>[240,240]);
                $gr->lb('reset');
                $gr->v_grid("gray",-1,1..$xmax-1);
                $gr->h_grid("gray",-1,1..$ymax-1);
                #xticks
                for my $i (5,10) {
                    $gr->lb( new Label($i,0,$i,'black','center','top','large'));
                    $gr->lb( new Label($xmax,0,'x','black','right','top','large'));
                }
                #yticks
                for my $i (5,10) {
                    $gr->lb( new Label(0,$i,$i,'black','right','middle','large'));
                    $gr->lb( new Label(0,$ymax,'y ','black','center','right','large'));
                }
                $gr->moveTo(0,0);
                $gr->arrowTo($xmin,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo($xmax-($xmax-$xmin)/240,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymin+($ymax-$ymin)/240,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymax,'black',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($start+1/($m**2+1)),
                    Real($f->eval(x=>$start+1/($m**2+1))),
                    'blue',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($stop-1/($m**2+1)),
                    Real($f->eval(x=>$stop-1/($m**2+1))),
                    'blue',1);
                $gr->stamps( closed_circle($h,$k,'blue') );
                parser::Assignment->Allow;
                Context()->variables->add(y=>'Real');
                $answer = Formula("y = $f");
                $evaluator = $answer -> cmp(
                   checker=>sub{
                      my ( $correct, $student, $ansHash ) = @_;
                      return 0 if $ansHash->{isPreview} || $correct != $student;
                      $student = $ansHash->{student_formula};
                      $correct = $correct->{original_formula} if defined $correct->{original_formula};
                      $student = Formula("$student"); $correct = Formula("$correct");
                      return 0 unless ($correct == $student);
                      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
                      delete $correct->{test_values};
                      delete $student->{test_values};
                      my $OK = (($correct == $student) or ($student == $correct));
                      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
                      Value::Error("Your answer is an eqation for the line, but it is not in point-slope form using the indicated point.") unless $OK;
                      return $OK;
                });
            </pg-code>
            </setup>
            <statement>
              <p permid="Gaq">
                Determine the point-slope form of the linear equation from its graph.
              </p>

              <sidebyside widths="40%" permid="LIl">
                <image pg-name="$gr" />
              </sidebyside>

              <p permid="mhz">
                <var name="$answer" evaluator="$evaluator" width="20" />
              </p>
            </statement>
            <solution permid="Esh">
              <p permid="GvP">
                The slope is <m><var name="$m" /></m> and the point <m>(<var name="$h" />,<var name="$k" />)</m> is on the graph of this line,
                so its equation can be written in point-slope form as <m><var name="$answer" /></m>.
              </p>
            </solution>
        </webwork>
      </exercise>

      <exercise permid="XBe">
        <webwork>
            <setup>

            <pg-code>
                Context("Fraction");
                Context()->flags->set(tolType=>absolute);
                Context()->operators->set(
                  '+' => {class => 'bizarro::BOP::add', isCommand => 1},
                  '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
                );
                Context()->noreduce('(-x)+y','(-x)-y');
                $xmin = -7;
                $xmax = 7;
                $ymin = -7;
                $ymax = 7;
                Context()->variables->set(x=>{limits=>[$xmin,$xmax]});
                do {
                    $run = non_zero_random(2,6,1);
                    $rise = non_zero_random(-6,6,1);
                    $m = Fraction($rise,$run);
                    $h = list_random(-5..-1,1..5);
                    $k = list_random(-5..-1,1..5);
                    $f = Formula("$m*(x-$h)+$k")->reduce;
                    $y0 = Fraction($f->eval(x=>0));
                    $hback = $h-$run;
                    $kback = $k-$rise;
                    $hforw = $h+$run;
                    $kforw = $k+$rise;
                } until (
                    ($y0->value)[1] != 1
                    and (
                      ($hback > $xmin+1 and $ymin+1 &lt; $kback and $kback &lt; $ymax-1)
                       or
                      ($hforw &lt; $xmax-1 and $ymin+1 &lt; $kforw and $kforw &lt; $ymax-1)
                    )
                );
                $top = Real(($ymax-$k)/$m+$h);
                $bottom = Real(($ymin-$k)/$m+$h);
                $left = $xmin;
                $right = $xmax;
                ($start,$stop) = (num_sort($top,$bottom,$left,$right))[1,2];
                $gr = init_graph($xmin,$ymin,$xmax,$ymax,
                    size=>[240,240]);
                $gr->lb('reset');
                $gr->v_grid("gray",$xmin+1..-1,1..$xmax-1);
                $gr->h_grid("gray",$ymin+1..-1,1..$ymax-1);
                #xticks
                for my $i (-5,5) {
                    $gr->lb( new Label($i,0,$i,'black','center','top','large'));
                    $gr->lb( new Label($xmax,0,'x','black','right','top','large'));
                }
                #yticks
                for my $i (-5,5) {
                    $gr->lb( new Label(0,$i,$i,'black','right','middle','large'));
                    $gr->lb( new Label(0,$ymax,'y ','black','center','right','large'));
                }
                $gr->moveTo(0,0);
                $gr->arrowTo($xmin,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo($xmax-($xmax-$xmin)/240,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymin+($ymax-$ymin)/240,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymax,'black',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($start+1/($m**2+1)),
                    Real($f->eval(x=>$start+1/($m**2+1))),
                    'blue',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($stop-1/($m**2+1)),
                    Real($f->eval(x=>$stop-1/($m**2+1))),
                    'blue',1);
                $gr->stamps( closed_circle($h,$k,'blue') );
                parser::Assignment->Allow;
                Context()->variables->add(y=>'Real');
                $answer = Formula("y = $f");
                $evaluator = $answer -> cmp(
                   checker=>sub{
                      my ( $correct, $student, $ansHash ) = @_;
                      return 0 if $ansHash->{isPreview} || $correct != $student;
                      $student = $ansHash->{student_formula};
                      $correct = $correct->{original_formula} if defined $correct->{original_formula};
                      $student = Formula("$student"); $correct = Formula("$correct");
                      return 0 unless ($correct == $student);
                      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
                      delete $correct->{test_values};
                      delete $student->{test_values};
                      my $OK = (($correct == $student) or ($student == $correct));
                      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
                      Value::Error("Your answer is an eqation for the line, but it is not in point-slope form using the indicated point.") unless $OK;
                      return $OK;
                });
            </pg-code>
            </setup>
            <statement>
              <p permid="SoI">
                Determine the point-slope form of the linear equation from its graph.
              </p>

              <sidebyside widths="40%" permid="rPu">
                <image pg-name="$gr" />
              </sidebyside>

              <p permid="yvR">
                <var name="$answer" evaluator="$evaluator" width="20" />
              </p>
            </statement>
            <solution permid="kzq">
              <p permid="mCY">
                The slope is <m><var name="$m" /></m> and the point <m>(<var name="$h" />,<var name="$k" />)</m> is on the graph of this line,
                so its equation can be written in point-slope form as <m><var name="$answer" /></m>.
              </p>
            </solution>
        </webwork>
      </exercise>

      <exercise permid="DIn">
        <webwork>
            <setup>

            <pg-code>
                Context("Fraction");
                Context()->flags->set(tolType=>absolute);
                Context()->operators->set(
                  '+' => {class => 'bizarro::BOP::add', isCommand => 1},
                  '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
                );
                Context()->noreduce('(-x)+y','(-x)-y');
                $xmin = -7;
                $xmax = 7;
                $ymin = -7;
                $ymax = 7;
                Context()->variables->set(x=>{limits=>[$xmin,$xmax]});
                do {
                    $run = non_zero_random(2,6,1);
                    $rise = non_zero_random(-6,6,1);
                    $m = Fraction($rise,$run);
                    $h = list_random(-5..-1,1..5);
                    $k = list_random(-5..-1,1..5);
                    $f = Formula("$m*(x-$h)+$k")->reduce;
                    $y0 = Fraction($f->eval(x=>0));
                    $hback = $h-$run;
                    $kback = $k-$rise;
                    $hforw = $h+$run;
                    $kforw = $k+$rise;
                } until (
                    ($y0->value)[1] != 1
                    and (
                      ($hback > $xmin+1 and $ymin+1 &lt; $kback and $kback &lt; $ymax-1)
                       or
                      ($hforw &lt; $xmax-1 and $ymin+1 &lt; $kforw and $kforw &lt; $ymax-1)
                    )
                );
                $top = Real(($ymax-$k)/$m+$h);
                $bottom = Real(($ymin-$k)/$m+$h);
                $left = $xmin;
                $right = $xmax;
                ($start,$stop) = (num_sort($top,$bottom,$left,$right))[1,2];
                $gr = init_graph($xmin,$ymin,$xmax,$ymax,
                    size=>[240,240]);
                $gr->lb('reset');
                $gr->v_grid("gray",$xmin+1..-1,1..$xmax-1);
                $gr->h_grid("gray",$ymin+1..-1,1..$ymax-1);
                #xticks
                for my $i (-5,5) {
                    $gr->lb( new Label($i,0,$i,'black','center','top','large'));
                    $gr->lb( new Label($xmax,0,'x','black','right','top','large'));
                }
                #yticks
                for my $i (-5,5) {
                    $gr->lb( new Label(0,$i,$i,'black','right','middle','large'));
                    $gr->lb( new Label(0,$ymax,'y ','black','center','right','large'));
                }
                $gr->moveTo(0,0);
                $gr->arrowTo($xmin,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo($xmax-($xmax-$xmin)/240,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymin+($ymax-$ymin)/240,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymax,'black',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($start+1/($m**2+1)),
                    Real($f->eval(x=>$start+1/($m**2+1))),
                    'blue',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($stop-1/($m**2+1)),
                    Real($f->eval(x=>$stop-1/($m**2+1))),
                    'blue',1);
                $gr->stamps( closed_circle($h,$k,'blue') );
                parser::Assignment->Allow;
                Context()->variables->add(y=>'Real');
                $answer = Formula("y = $f");
                $evaluator = $answer -> cmp(
                   checker=>sub{
                      my ( $correct, $student, $ansHash ) = @_;
                      return 0 if $ansHash->{isPreview} || $correct != $student;
                      $student = $ansHash->{student_formula};
                      $correct = $correct->{original_formula} if defined $correct->{original_formula};
                      $student = Formula("$student"); $correct = Formula("$correct");
                      return 0 unless ($correct == $student);
                      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
                      delete $correct->{test_values};
                      delete $student->{test_values};
                      my $OK = (($correct == $student) or ($student == $correct));
                      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
                      Value::Error("Your answer is an eqation for the line, but it is not in point-slope form using the indicated point.") unless $OK;
                      return $OK;
                });
            </pg-code>
            </setup>
            <statement>
              <p permid="eDa">
                Determine the point-slope form of the linear equation from its graph.
              </p>

              <sidebyside widths="40%" permid="XWD">
                <image pg-name="$gr" />
              </sidebyside>

              <p permid="KKj">
                <var name="$answer" evaluator="$evaluator" width="20" />
              </p>
            </statement>
            <solution permid="QGz">
              <p permid="SKh">
                The slope is <m><var name="$m" /></m> and the point <m>(<var name="$h" />,<var name="$k" />)</m> is on the graph of this line,
                so its equation can be written in point-slope form as <m><var name="$answer" /></m>.
              </p>
            </solution>
        </webwork>
      </exercise>

      <exercise permid="jPw">
        <webwork>
            <setup>

            <pg-code>
                Context("Fraction");
                Context()->flags->set(tolType=>absolute);
                Context()->operators->set(
                  '+' => {class => 'bizarro::BOP::add', isCommand => 1},
                  '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
                );
                Context()->noreduce('(-x)+y','(-x)-y');
                $xmin = -7;
                $xmax = 7;
                $ymin = -700;
                $ymax = 700;
                Context()->variables->set(x=>{limits=>[$xmin,$xmax]});
                do {
                    $run = non_zero_random(2,6,1);
                    $rise = non_zero_random(-600,600,100);
                    $m = Fraction($rise,$run);
                    $h = list_random(-5..-1,1..5);
                    $k = 100*list_random(-5..-1,1..5);
                    $f = Formula("$m*(x-$h)+$k")->reduce;
                    $y0 = Fraction($f->eval(x=>0));
                    $hback = $h-$run;
                    $kback = $k-$rise;
                    $hforw = $h+$run;
                    $kforw = $k+$rise;
                } until (
                    ($y0->value)[1] != 1
                    and (
                      ($hback > $xmin+1 and $ymin+100 &lt; $kback and $kback &lt; $ymax-100)
                       or
                      ($hforw &lt; $xmax-1 and $ymin+100 &lt; $kforw and $kforw &lt; $ymax-100)
                    )
                );
                $top = Real(($ymax-$k)/$m+$h);
                $bottom = Real(($ymin-$k)/$m+$h);
                $left = $xmin;
                $right = $xmax;
                ($start,$stop) = (num_sort($top,$bottom,$left,$right))[1,2];
                $gr = init_graph($xmin,$ymin,$xmax,$ymax,
                    size=>[240,240]);
                $gr->lb('reset');
                $gr->v_grid("gray",$xmin+1..-1,1..$xmax-1);
                $gr->h_grid("gray",map{$_*100}($ymin/100+1..-1,1..$ymax/100-1));
                #xticks
                for my $i (-5,5) {
                    $gr->lb( new Label($i,0,$i,'black','center','top','large'));
                    $gr->lb( new Label($xmax,0,'x','black','right','top','large'));
                }
                #yticks
                for my $i (-500,500) {
                    $gr->lb( new Label(0,$i,$i,'black','right','middle','large'));
                    $gr->lb( new Label(0,$ymax,'y ','black','center','right','large'));
                }
                $gr->moveTo(0,0);
                $gr->arrowTo($xmin,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo($xmax-($xmax-$xmin)/240,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymin+($ymax-$ymin)/240,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymax,'black',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($start+1/(($m/100)**2+1)),
                    Real($f->eval(x=>$start+1/(($m/100)**2+1))),
                    'blue',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($stop-1/(($m/100)**2+1)),
                    Real($f->eval(x=>$stop-1/(($m/100)**2+1))),
                    'blue',1);
                $gr->stamps( closed_circle($h,$k,'blue') );
                parser::Assignment->Allow;
                Context()->variables->add(y=>'Real');
                $answer = Formula("y = $f");
                $evaluator = $answer -> cmp(
                   checker=>sub{
                      my ( $correct, $student, $ansHash ) = @_;
                      return 0 if $ansHash->{isPreview} || $correct != $student;
                      $student = $ansHash->{student_formula};
                      $correct = $correct->{original_formula} if defined $correct->{original_formula};
                      $student = Formula("$student"); $correct = Formula("$correct");
                      return 0 unless ($correct == $student);
                      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
                      delete $correct->{test_values};
                      delete $student->{test_values};
                      my $OK = (($correct == $student) or ($student == $correct));
                      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
                      Value::Error("Your answer is an eqation for the line, but it is not in point-slope form using the indicated point.") unless $OK;
                      return $OK;
                });
            </pg-code>
            </setup>
            <statement>
              <p permid="qRs">
                Determine the point-slope form of the linear equation from its graph.
              </p>

              <sidebyside widths="40%" permid="EdM">
                <image pg-name="$gr" />
              </sidebyside>

              <p permid="WYB">
                <var name="$answer" evaluator="$evaluator" width="20" />
              </p>
            </statement>
            <solution permid="wNI">
              <p permid="yRq">
                The slope is <m><var name="$m" /></m> and the point <m>(<var name="$h" />,<var name="$k" />)</m> is on the graph of this line,
                so its equation can be written in point-slope form as <m><var name="$answer" /></m>.
              </p>
            </solution>
        </webwork>
      </exercise>

      <exercise permid="PWF">
        <webwork>
            <setup>

            <pg-code>
                Context("Fraction");
                Context()->flags->set(tolType=>absolute);
                Context()->operators->set(
                  '+' => {class => 'bizarro::BOP::add', isCommand => 1},
                  '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
                );
                Context()->noreduce('(-x)+y','(-x)-y');
                $xmin = -7;
                $xmax = 7;
                $ymin = -700;
                $ymax = 700;
                Context()->variables->set(x=>{limits=>[$xmin,$xmax]});
                do {
                    $run = non_zero_random(2,6,1);
                    $rise = non_zero_random(-600,600,100);
                    $m = Fraction($rise,$run);
                    $h = list_random(-5..-1,1..5);
                    $k = 100*list_random(-5..-1,1..5);
                    $f = Formula("$m*(x-$h)+$k")->reduce;
                    $y0 = Fraction($f->eval(x=>0));
                    $hback = $h-$run;
                    $kback = $k-$rise;
                    $hforw = $h+$run;
                    $kforw = $k+$rise;
                } until (
                    ($y0->value)[1] != 1
                    and (
                      ($hback > $xmin+1 and $ymin+100 &lt; $kback and $kback &lt; $ymax-100)
                       or
                      ($hforw &lt; $xmax-1 and $ymin+100 &lt; $kforw and $kforw &lt; $ymax-100)
                    )
                );
                $top = Real(($ymax-$k)/$m+$h);
                $bottom = Real(($ymin-$k)/$m+$h);
                $left = $xmin;
                $right = $xmax;
                ($start,$stop) = (num_sort($top,$bottom,$left,$right))[1,2];
                $gr = init_graph($xmin,$ymin,$xmax,$ymax,
                    size=>[240,240]);
                $gr->lb('reset');
                $gr->v_grid("gray",$xmin+1..-1,1..$xmax-1);
                $gr->h_grid("gray",map{$_*100}($ymin/100+1..-1,1..$ymax/100-1));
                #xticks
                for my $i (-5,5) {
                    $gr->lb( new Label($i,0,$i,'black','center','top','large'));
                    $gr->lb( new Label($xmax,0,'x','black','right','top','large'));
                }
                #yticks
                for my $i (-500,500) {
                    $gr->lb( new Label(0,$i,$i,'black','right','middle','large'));
                    $gr->lb( new Label(0,$ymax,'y ','black','center','right','large'));
                }
                $gr->moveTo(0,0);
                $gr->arrowTo($xmin,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo($xmax-($xmax-$xmin)/240,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymin+($ymax-$ymin)/240,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymax,'black',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($start+1/(($m/100)**2+1)),
                    Real($f->eval(x=>$start+1/(($m/100)**2+1))),
                    'blue',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($stop-1/(($m/100)**2+1)),
                    Real($f->eval(x=>$stop-1/(($m/100)**2+1))),
                    'blue',1);
                $gr->stamps( closed_circle($h,$k,'blue') );
                parser::Assignment->Allow;
                Context()->variables->add(y=>'Real');
                $answer = Formula("y = $f");
                $evaluator = $answer -> cmp(
                   checker=>sub{
                      my ( $correct, $student, $ansHash ) = @_;
                      return 0 if $ansHash->{isPreview} || $correct != $student;
                      $student = $ansHash->{student_formula};
                      $correct = $correct->{original_formula} if defined $correct->{original_formula};
                      $student = Formula("$student"); $correct = Formula("$correct");
                      return 0 unless ($correct == $student);
                      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
                      delete $correct->{test_values};
                      delete $student->{test_values};
                      my $OK = (($correct == $student) or ($student == $correct));
                      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
                      Value::Error("Your answer is an eqation for the line, but it is not in point-slope form using the indicated point.") unless $OK;
                      return $OK;
                });
            </pg-code>
            </setup>
            <statement>
              <p permid="DfK">
                Determine the point-slope form of the linear equation from its graph.
              </p>

              <sidebyside widths="40%" permid="kkV">
                <image pg-name="$gr" />
              </sidebyside>

              <p permid="jmT">
                <var name="$answer" evaluator="$evaluator" width="20" />
              </p>
            </statement>
            <solution permid="cUR">
              <p permid="eYz">
                The slope is <m><var name="$m" /></m> and the point <m>(<var name="$h" />,<var name="$k" />)</m> is on the graph of this line,
                so its equation can be written in point-slope form as <m><var name="$answer" /></m>.
              </p>
            </solution>
        </webwork>
      </exercise>

      <exercise permid="wdO">
        <webwork>
            <setup>

            <pg-code>
                Context("Fraction");
                Context()->flags->set(tolType=>absolute);
                Context()->operators->set(
                  '+' => {class => 'bizarro::BOP::add', isCommand => 1},
                  '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
                );
                Context()->noreduce('(-x)+y','(-x)-y');
                $xmin = -1;
                $xmax = 13;
                $ymin = -100;
                $ymax = 1300;
                Context()->variables->set(x=>{limits=>[$xmin,$xmax]});
                do {
                    $run = non_zero_random(2,6,1);
                    $rise = non_zero_random(-600,600,100);
                    $m = Fraction($rise,$run);
                    $h = list_random(1..11);
                    $k = 100*list_random(1..11);
                    $f = Formula("$m*(x-$h)+$k")->reduce;
                    $y0 = Fraction($f->eval(x=>0));
                    $hback = $h-$run;
                    $kback = $k-$rise;
                    $hforw = $h+$run;
                    $kforw = $k+$rise;
                } until (
                    ($y0->value)[1] != 1
                    and (
                      ($hback > $xmin+1 and $ymin+100 &lt; $kback and $kback &lt; $ymax-100)
                       or
                      ($hforw &lt; $xmax-1 and $ymin+100 &lt; $kforw and $kforw &lt; $ymax-100)
                    )
                );
                $top = Real(($ymax-$k)/$m+$h);
                $bottom = Real(($ymin-$k)/$m+$h);
                $left = $xmin;
                $right = $xmax;
                ($start,$stop) = (num_sort($top,$bottom,$left,$right))[1,2];
                $gr = init_graph($xmin,$ymin,$xmax,$ymax,
                    size=>[240,240]);
                $gr->lb('reset');
                $gr->v_grid("gray",1..$xmax-1);
                $gr->h_grid("gray",map{$_*100}(1..$ymax/100-1));
                #xticks
                for my $i (5,10) {
                    $gr->lb( new Label($i,0,$i,'black','center','top','large'));
                    $gr->lb( new Label($xmax,0,'x','black','right','top','large'));
                }
                #yticks
                for my $i (500,1000) {
                    $gr->lb( new Label(0,$i,$i,'black','left','middle','large'));
                    $gr->lb( new Label(0,$ymax,'y ','black','center','right','large'));
                }
                $gr->moveTo(0,0);
                $gr->arrowTo($xmin,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo($xmax-($xmax-$xmin)/240,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymin+($ymax-$ymin)/240,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymax,'black',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($start+1/(($m/100)**2+1)),
                    Real($f->eval(x=>$start+1/(($m/100)**2+1))),
                    'blue',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($stop-1/(($m/100)**2+1)),
                    Real($f->eval(x=>$stop-1/(($m/100)**2+1))),
                    'blue',1);
                $gr->stamps( closed_circle($h,$k,'blue') );
                parser::Assignment->Allow;
                Context()->variables->add(y=>'Real');
                $answer = Formula("y = $f");
                $evaluator = $answer -> cmp(
                   checker=>sub{
                      my ( $correct, $student, $ansHash ) = @_;
                      return 0 if $ansHash->{isPreview} || $correct != $student;
                      $student = $ansHash->{student_formula};
                      $correct = $correct->{original_formula} if defined $correct->{original_formula};
                      $student = Formula("$student"); $correct = Formula("$correct");
                      return 0 unless ($correct == $student);
                      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
                      delete $correct->{test_values};
                      delete $student->{test_values};
                      my $OK = (($correct == $student) or ($student == $correct));
                      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
                      Value::Error("Your answer is an eqation for the line, but it is not in point-slope form using the indicated point.") unless $OK;
                      return $OK;
                });
            </pg-code>
            </setup>
            <statement>
              <p permid="Puc">
                Determine the point-slope form of the linear equation from its graph.
              </p>

              <sidebyside widths="40%" permid="Qse">
                <image pg-name="$gr" />
              </sidebyside>

              <p permid="vBl">
                <var name="$answer" evaluator="$evaluator" width="20" />
              </p>
            </statement>
            <solution permid="Jca">
              <p permid="LfI">
                The slope is <m><var name="$m" /></m> and the point <m>(<var name="$h" />,<var name="$k" />)</m> is on the graph of this line,
                so its equation can be written in point-slope form as <m><var name="$answer" /></m>.
              </p>
            </solution>
        </webwork>
      </exercise>

      <exercise permid="ckX">
        <webwork>
            <setup>

            <pg-code>
                Context("Fraction");
                Context()->flags->set(tolType=>absolute);
                Context()->operators->set(
                  '+' => {class => 'bizarro::BOP::add', isCommand => 1},
                  '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
                );
                Context()->noreduce('(-x)+y','(-x)-y');
                $xmin = -1;
                $xmax = 13;
                $ymin = -100;
                $ymax = 1300;
                Context()->variables->set(x=>{limits=>[$xmin,$xmax]});
                do {
                    $run = non_zero_random(2,6,1);
                    $rise = non_zero_random(-600,600,100);
                    $m = Fraction($rise,$run);
                    $h = list_random(1..11);
                    $k = 100*list_random(1..11);
                    $f = Formula("$m*(x-$h)+$k")->reduce;
                    $y0 = Fraction($f->eval(x=>0));
                    $hback = $h-$run;
                    $kback = $k-$rise;
                    $hforw = $h+$run;
                    $kforw = $k+$rise;
                } until (
                    ($y0->value)[1] != 1
                    and (
                      ($hback > $xmin+1 and $ymin+100 &lt; $kback and $kback &lt; $ymax-100)
                       or
                      ($hforw &lt; $xmax-1 and $ymin+100 &lt; $kforw and $kforw &lt; $ymax-100)
                    )
                );
                $top = Real(($ymax-$k)/$m+$h);
                $bottom = Real(($ymin-$k)/$m+$h);
                $left = $xmin;
                $right = $xmax;
                ($start,$stop) = (num_sort($top,$bottom,$left,$right))[1,2];
                $gr = init_graph($xmin,$ymin,$xmax,$ymax,
                    size=>[240,240]);
                $gr->lb('reset');
                $gr->v_grid("gray",1..$xmax-1);
                $gr->h_grid("gray",map{$_*100}(1..$ymax/100-1));
                #xticks
                for my $i (5,10) {
                    $gr->lb( new Label($i,0,$i,'black','center','top','large'));
                    $gr->lb( new Label($xmax,0,'x','black','right','top','large'));
                }
                #yticks
                for my $i (500,1000) {
                    $gr->lb( new Label(0,$i,$i,'black','left','middle','large'));
                    $gr->lb( new Label(0,$ymax,'y ','black','center','right','large'));
                }
                $gr->moveTo(0,0);
                $gr->arrowTo($xmin,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo($xmax-($xmax-$xmin)/240,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymin+($ymax-$ymin)/240,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymax,'black',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($start+1/(($m/100)**2+1)),
                    Real($f->eval(x=>$start+1/(($m/100)**2+1))),
                    'blue',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($stop-1/(($m/100)**2+1)),
                    Real($f->eval(x=>$stop-1/(($m/100)**2+1))),
                    'blue',1);
                $gr->stamps( closed_circle($h,$k,'blue') );
                parser::Assignment->Allow;
                Context()->variables->add(y=>'Real');
                $answer = Formula("y = $f");
                $evaluator = $answer -> cmp(
                   checker=>sub{
                      my ( $correct, $student, $ansHash ) = @_;
                      return 0 if $ansHash->{isPreview} || $correct != $student;
                      $student = $ansHash->{student_formula};
                      $correct = $correct->{original_formula} if defined $correct->{original_formula};
                      $student = Formula("$student"); $correct = Formula("$correct");
                      return 0 unless ($correct == $student);
                      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
                      delete $correct->{test_values};
                      delete $student->{test_values};
                      my $OK = (($correct == $student) or ($student == $correct));
                      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
                      Value::Error("Your answer is an eqation for the line, but it is not in point-slope form using the indicated point.") unless $OK;
                      return $OK;
                });
            </pg-code>
            </setup>
            <statement>
              <p permid="bIu">
                Determine the point-slope form of the linear equation from its graph.
              </p>

              <sidebyside widths="40%" permid="wzn">
                <image pg-name="$gr" />
              </sidebyside>

              <p permid="HPD">
                <var name="$answer" evaluator="$evaluator" width="20" />
              </p>
            </statement>
            <solution permid="pjj">
              <p permid="rmR">
                The slope is <m><var name="$m" /></m> and the point <m>(<var name="$h" />,<var name="$k" />)</m> is on the graph of this line,
                so its equation can be written in point-slope form as <m><var name="$answer" /></m>.
              </p>
            </solution>
        </webwork>
      </exercise>

      <exercise permid="Isg">
        <webwork>
            <setup>

            <pg-code>
                Context("Fraction");
                Context()->flags->set(tolType=>absolute);
                Context()->operators->set(
                  '+' => {class => 'bizarro::BOP::add', isCommand => 1},
                  '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
                );
                Context()->noreduce('(-x)+y','(-x)-y');
                $xmin = -100;
                $xmax = 1300;
                $ymin = -100;
                $ymax = 1300;
                Context()->variables->set(x=>{limits=>[$xmin,$xmax]});
                do {
                    $run = non_zero_random(200,600,1);
                    $rise = non_zero_random(60,600,1)*list_random(-1,1);
                    $m = Fraction($rise,$run);
                    $h = random(100,1200,1);
                    $k = random(100,1200,1);
                    $f = Formula("$m*(x-$h)+$k")->reduce;
                    $y0 = Fraction($f->eval(x=>0));
                    $hback = $h-$run;
                    $kback = $k-$rise;
                    $hforw = $h+$run;
                    $kforw = $k+$rise;
                } until (
                    ($y0->value)[1] != 1
                    and (
                      ($hback > $xmin+100 and $ymin+100 &lt; $kback and $kback &lt; $ymax-100)
                       or
                      ($hforw &lt; $xmax-100 and $ymin+100 &lt; $kforw and $kforw &lt; $ymax-100)
                    )
                );
                if ($hback > $xmin+100 and $ymin+100 &lt; $kback and $kback &lt; $ymax-100) {
                    $h2 = $hback; $k2 = $kback;
                }
                if ($hforw &lt; $xmax-100 and $ymin+100 &lt; $kforw and $kforw &lt; $ymax-100) {
                    $h2 = $hforw; $k2 = $kforw;
                }
                $top = Real(($ymax-$k)/$m+$h);
                $bottom = Real(($ymin-$k)/$m+$h);
                $left = $xmin;
                $right = $xmax;
                ($start,$stop) = (num_sort($top,$bottom,$left,$right))[1,2];
                $gr = init_graph($xmin,$ymin,$xmax,$ymax,
                    size=>[240,240]);
                $gr->lb('reset');
                $gr->v_grid("gray",map{$_*100}(1..$xmax/100-1));
                $gr->h_grid("gray",map{$_*100}(1..$ymax/100-1));
                #xticks
                for my $i (500,1000) {
                    $gr->lb( new Label($i,0,$i,'black','center','top','large'));
                    $gr->lb( new Label($xmax,0,'x','black','right','top','large'));
                }
                #yticks
                for my $i (500,1000) {
                    $gr->lb( new Label(0,$i,$i,'black','left','middle','large'));
                    $gr->lb( new Label(0,$ymax,'y ','black','center','right','large'));
                }
                $gr->moveTo(0,0);
                $gr->arrowTo($xmin,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo($xmax-($xmax-$xmin)/240,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymin+($ymax-$ymin)/240,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymax,'black',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($start+100/($m**2+1)),
                    Real($f->eval(x=>$start+100/($m**2+1))),
                    'blue',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($stop-100/($m**2+1)),
                    Real($f->eval(x=>$stop-100/($m**2+1))),
                    'blue',1);
                $gr->stamps( closed_circle($h,$k,'blue') );
                $gr->stamps( closed_circle($h2,$k2,'blue') );
                if ($m > 0 and $h > 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','right','bottom','large'));};
                if ($m > 0 and $h &lt; 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','left','top','large'));};
                if ($m &lt; 0 and $h > 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','right','top','large'));};
                if ($m &lt; 0 and $h &lt; 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','left','bottom','large'));};
                if ($m > 0 and $h2 > 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','right','bottom','large'));};
                if ($m > 0 and $h2 &lt; 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','left','top','large'));};
                if ($m &lt; 0 and $h2 > 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','right','top','large'));};
                if ($m &lt; 0 and $h2 &lt; 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','left','bottom','large'));};
                parser::Assignment->Allow;
                Context()->variables->add(y=>'Real');
                $answer = OneOf(Formula("y = $f"),Formula("y = $m(x-$h2)+$k2"));
                $evaluator = $answer -> cmp(
                   checker=>sub{
                      my ( $correct, $student, $ansHash ) = @_;
                      return 0 if $ansHash->{isPreview} || $correct != $student;
                      $student = $ansHash->{student_formula};
                      $correct = $correct->{original_formula} if defined $correct->{original_formula};
                      $student = Formula("$student"); $correct = Formula("$correct");
                      return 0 unless ($correct == $student);
                      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
                      delete $correct->{test_values};
                      delete $student->{test_values};
                      my $OK = (($correct == $student) or ($student == $correct));
                      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
                      Value::Error("Your answer is an eqation for the line, but it is not in point-slope form using the indicated point.") unless $OK;
                      return $OK;
                });
            </pg-code>
            </setup>
            <statement>
              <p permid="nWM">
                Determine the point-slope form of the linear equation from its graph.
              </p>

              <sidebyside widths="40%" permid="cGw">
                <image pg-name="$gr" />
              </sidebyside>

              <p permid="UdV">
                <var name="$answer" evaluator="$evaluator" width="20" />
              </p>
            </statement>
            <solution permid="Vqs">
              <p permid="Xua">
                The slope is <m><var name="$m" /></m> and the point <m>(<var name="$h" />,<var name="$k" />)</m> is on the graph of this line,
                so its equation can be written in point-slope form as <m><var name="$answer" /></m>.
              </p>
            </solution>
        </webwork>
      </exercise>

      <exercise permid="ozp">
        <webwork>
            <setup>

            <pg-code>
                Context("Fraction");
                Context()->flags->set(tolType=>absolute);
                Context()->operators->set(
                  '+' => {class => 'bizarro::BOP::add', isCommand => 1},
                  '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
                );
                Context()->noreduce('(-x)+y','(-x)-y');
                $xmin = -100;
                $xmax = 1300;
                $ymin = -100;
                $ymax = 1300;
                Context()->variables->set(x=>{limits=>[$xmin,$xmax]});
                do {
                    $run = non_zero_random(200,600,1);
                    $rise = non_zero_random(60,600,1)*list_random(-1,1);
                    $m = Fraction($rise,$run);
                    $h = random(100,1200,1);
                    $k = random(100,1200,1);
                    $f = Formula("$m*(x-$h)+$k")->reduce;
                    $y0 = Fraction($f->eval(x=>0));
                    $hback = $h-$run;
                    $kback = $k-$rise;
                    $hforw = $h+$run;
                    $kforw = $k+$rise;
                } until (
                    ($y0->value)[1] != 1
                    and (
                      ($hback > $xmin+100 and $ymin+100 &lt; $kback and $kback &lt; $ymax-100)
                       or
                      ($hforw &lt; $xmax-100 and $ymin+100 &lt; $kforw and $kforw &lt; $ymax-100)
                    )
                );
                if ($hback > $xmin+100 and $ymin+100 &lt; $kback and $kback &lt; $ymax-100) {
                    $h2 = $hback; $k2 = $kback;
                }
                if ($hforw &lt; $xmax-100 and $ymin+100 &lt; $kforw and $kforw &lt; $ymax-100) {
                    $h2 = $hforw; $k2 = $kforw;
                }
                $top = Real(($ymax-$k)/$m+$h);
                $bottom = Real(($ymin-$k)/$m+$h);
                $left = $xmin;
                $right = $xmax;
                ($start,$stop) = (num_sort($top,$bottom,$left,$right))[1,2];
                $gr = init_graph($xmin,$ymin,$xmax,$ymax,
                    size=>[240,240]);
                $gr->lb('reset');
                $gr->v_grid("gray",map{$_*100}(1..$xmax/100-1));
                $gr->h_grid("gray",map{$_*100}(1..$ymax/100-1));
                #xticks
                for my $i (500,1000) {
                    $gr->lb( new Label($i,0,$i,'black','center','top','large'));
                    $gr->lb( new Label($xmax,0,'x','black','right','top','large'));
                }
                #yticks
                for my $i (500,1000) {
                    $gr->lb( new Label(0,$i,$i,'black','left','middle','large'));
                    $gr->lb( new Label(0,$ymax,'y ','black','center','right','large'));
                }
                $gr->moveTo(0,0);
                $gr->arrowTo($xmin,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo($xmax-($xmax-$xmin)/240,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymin+($ymax-$ymin)/240,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymax,'black',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($start+100/($m**2+1)),
                    Real($f->eval(x=>$start+100/($m**2+1))),
                    'blue',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($stop-100/($m**2+1)),
                    Real($f->eval(x=>$stop-100/($m**2+1))),
                    'blue',1);
                $gr->stamps( closed_circle($h,$k,'blue') );
                $gr->stamps( closed_circle($h2,$k2,'blue') );
                if ($m > 0 and $h > 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','right','bottom','large'));};
                if ($m > 0 and $h &lt; 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','left','top','large'));};
                if ($m &lt; 0 and $h > 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','right','top','large'));};
                if ($m &lt; 0 and $h &lt; 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','left','bottom','large'));};
                if ($m > 0 and $h2 > 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','right','bottom','large'));};
                if ($m > 0 and $h2 &lt; 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','left','top','large'));};
                if ($m &lt; 0 and $h2 > 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','right','top','large'));};
                if ($m &lt; 0 and $h2 &lt; 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','left','bottom','large'));};
                parser::Assignment->Allow;
                Context()->variables->add(y=>'Real');
                $answer = OneOf(Formula("y = $f"),Formula("y = $m(x-$h2)+$k2"));
                $evaluator = $answer -> cmp(
                   checker=>sub{
                      my ( $correct, $student, $ansHash ) = @_;
                      return 0 if $ansHash->{isPreview} || $correct != $student;
                      $student = $ansHash->{student_formula};
                      $correct = $correct->{original_formula} if defined $correct->{original_formula};
                      $student = Formula("$student"); $correct = Formula("$correct");
                      return 0 unless ($correct == $student);
                      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
                      delete $correct->{test_values};
                      delete $student->{test_values};
                      my $OK = (($correct == $student) or ($student == $correct));
                      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
                      Value::Error("Your answer is an eqation for the line, but it is not in point-slope form using the indicated point.") unless $OK;
                      return $OK;
                });
            </pg-code>
            </setup>
            <statement>
              <p permid="Ale">
                Determine the point-slope form of the linear equation from its graph.
              </p>

              <sidebyside widths="40%" permid="INF">
                <image pg-name="$gr" />
              </sidebyside>

              <p permid="gsn">
                <var name="$answer" evaluator="$evaluator" width="20" />
              </p>
            </statement>
            <solution permid="BxB">
              <p permid="DBj">
                The slope is <m><var name="$m" /></m> and the point <m>(<var name="$h" />,<var name="$k" />)</m> is on the graph of this line,
                so its equation can be written in point-slope form as <m><var name="$answer" /></m>.
              </p>
            </solution>
        </webwork>
      </exercise>

      <exercise permid="UGy">
        <webwork>
            <setup>

            <pg-code>
                Context("Fraction");
                Context()->flags->set(tolType=>absolute);
                Context()->operators->set(
                  '+' => {class => 'bizarro::BOP::add', isCommand => 1},
                  '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
                );
                Context()->noreduce('(-x)+y','(-x)-y');
                $xmin = -100;
                $xmax = 1300;
                $ymin = -100;
                $ymax = 1300;
                Context()->variables->set(x=>{limits=>[$xmin,$xmax]});
                do {
                    $run = non_zero_random(200,600,1);
                    $rise = non_zero_random(60,600,1)*list_random(-1,1);
                    $m = Fraction($rise,$run);
                    $h = random(100,1200,1);
                    $k = random(100,1200,1);
                    $f = Formula("$m*(x-$h)+$k")->reduce;
                    $y0 = Fraction($f->eval(x=>0));
                    $hback = $h-$run;
                    $kback = $k-$rise;
                    $hforw = $h+$run;
                    $kforw = $k+$rise;
                } until (
                    ($y0->value)[1] != 1
                    and (
                      ($hback > $xmin+100 and $ymin+100 &lt; $kback and $kback &lt; $ymax-100)
                       or
                      ($hforw &lt; $xmax-100 and $ymin+100 &lt; $kforw and $kforw &lt; $ymax-100)
                    )
                );
                if ($hback > $xmin+100 and $ymin+100 &lt; $kback and $kback &lt; $ymax-100) {
                    $h2 = $hback; $k2 = $kback;
                }
                if ($hforw &lt; $xmax-100 and $ymin+100 &lt; $kforw and $kforw &lt; $ymax-100) {
                    $h2 = $hforw; $k2 = $kforw;
                }
                $top = Real(($ymax-$k)/$m+$h);
                $bottom = Real(($ymin-$k)/$m+$h);
                $left = $xmin;
                $right = $xmax;
                ($start,$stop) = (num_sort($top,$bottom,$left,$right))[1,2];
                $gr = init_graph($xmin,$ymin,$xmax,$ymax,
                    size=>[240,240]);
                $gr->lb('reset');
                $gr->v_grid("gray",map{$_*100}(1..$xmax/100-1));
                $gr->h_grid("gray",map{$_*100}(1..$ymax/100-1));
                #xticks
                for my $i (500,1000) {
                    $gr->lb( new Label($i,0,$i,'black','center','top','large'));
                    $gr->lb( new Label($xmax,0,'x','black','right','top','large'));
                }
                #yticks
                for my $i (500,1000) {
                    $gr->lb( new Label(0,$i,$i,'black','left','middle','large'));
                    $gr->lb( new Label(0,$ymax,'y ','black','center','right','large'));
                }
                $gr->moveTo(0,0);
                $gr->arrowTo($xmin,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo($xmax-($xmax-$xmin)/240,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymin+($ymax-$ymin)/240,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymax,'black',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($start+100/($m**2+1)),
                    Real($f->eval(x=>$start+100/($m**2+1))),
                    'blue',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($stop-100/($m**2+1)),
                    Real($f->eval(x=>$stop-100/($m**2+1))),
                    'blue',1);
                $gr->stamps( closed_circle($h,$k,'blue') );
                $gr->stamps( closed_circle($h2,$k2,'blue') );
                if ($m > 0 and $h > 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','right','bottom','large'));};
                if ($m > 0 and $h &lt; 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','left','top','large'));};
                if ($m &lt; 0 and $h > 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','right','top','large'));};
                if ($m &lt; 0 and $h &lt; 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','left','bottom','large'));};
                if ($m > 0 and $h2 > 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','right','bottom','large'));};
                if ($m > 0 and $h2 &lt; 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','left','top','large'));};
                if ($m &lt; 0 and $h2 > 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','right','top','large'));};
                if ($m &lt; 0 and $h2 &lt; 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','left','bottom','large'));};
                parser::Assignment->Allow;
                Context()->variables->add(y=>'Real');
                $answer = OneOf(Formula("y = $f"),Formula("y = $m(x-$h2)+$k2"));
                $evaluator = $answer -> cmp(
                   checker=>sub{
                      my ( $correct, $student, $ansHash ) = @_;
                      return 0 if $ansHash->{isPreview} || $correct != $student;
                      $student = $ansHash->{student_formula};
                      $correct = $correct->{original_formula} if defined $correct->{original_formula};
                      $student = Formula("$student"); $correct = Formula("$correct");
                      return 0 unless ($correct == $student);
                      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
                      delete $correct->{test_values};
                      delete $student->{test_values};
                      my $OK = (($correct == $student) or ($student == $correct));
                      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
                      Value::Error("Your answer is an eqation for the line, but it is not in point-slope form using the indicated point.") unless $OK;
                      return $OK;
                });
            </pg-code>
            </setup>
            <statement>
              <p permid="Mzw">
                Determine the point-slope form of the linear equation from its graph.
              </p>

              <sidebyside widths="40%" permid="oUO">
                <image pg-name="$gr" />
              </sidebyside>

              <p permid="sGF">
                <var name="$answer" evaluator="$evaluator" width="20" />
              </p>
            </statement>
            <solution permid="hEK">
              <p permid="jIs">
                The slope is <m><var name="$m" /></m> and the point <m>(<var name="$h" />,<var name="$k" />)</m> is on the graph of this line,
                so its equation can be written in point-slope form as <m><var name="$answer" /></m>.
              </p>
            </solution>
        </webwork>
      </exercise>

      <exercise permid="ANH">
        <webwork>
            <setup>

            <pg-code>
                Context("Fraction");
                Context()->flags->set(tolType=>absolute);
                Context()->operators->set(
                  '+' => {class => 'bizarro::BOP::add', isCommand => 1},
                  '-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
                );
                Context()->noreduce('(-x)+y','(-x)-y');
                $xmin = -100;
                $xmax = 1300;
                $ymin = -100;
                $ymax = 1300;
                Context()->variables->set(x=>{limits=>[$xmin,$xmax]});
                do {
                    $run = non_zero_random(200,600,1);
                    $rise = non_zero_random(60,600,1)*list_random(-1,1);
                    $m = Fraction($rise,$run);
                    $h = random(100,1200,1);
                    $k = random(100,1200,1);
                    $f = Formula("$m*(x-$h)+$k")->reduce;
                    $y0 = Fraction($f->eval(x=>0));
                    $hback = $h-$run;
                    $kback = $k-$rise;
                    $hforw = $h+$run;
                    $kforw = $k+$rise;
                } until (
                    ($y0->value)[1] != 1
                    and (
                      ($hback > $xmin+100 and $ymin+100 &lt; $kback and $kback &lt; $ymax-100)
                       or
                      ($hforw &lt; $xmax-100 and $ymin+100 &lt; $kforw and $kforw &lt; $ymax-100)
                    )
                );
                if ($hback > $xmin+100 and $ymin+100 &lt; $kback and $kback &lt; $ymax-100) {
                    $h2 = $hback; $k2 = $kback;
                }
                if ($hforw &lt; $xmax-100 and $ymin+100 &lt; $kforw and $kforw &lt; $ymax-100) {
                    $h2 = $hforw; $k2 = $kforw;
                }
                $top = Real(($ymax-$k)/$m+$h);
                $bottom = Real(($ymin-$k)/$m+$h);
                $left = $xmin;
                $right = $xmax;
                ($start,$stop) = (num_sort($top,$bottom,$left,$right))[1,2];
                $gr = init_graph($xmin,$ymin,$xmax,$ymax,
                    size=>[240,240]);
                $gr->lb('reset');
                $gr->v_grid("gray",map{$_*100}(1..$xmax/100-1));
                $gr->h_grid("gray",map{$_*100}(1..$ymax/100-1));
                #xticks
                for my $i (500,1000) {
                    $gr->lb( new Label($i,0,$i,'black','center','top','large'));
                    $gr->lb( new Label($xmax,0,'x','black','right','top','large'));
                }
                #yticks
                for my $i (500,1000) {
                    $gr->lb( new Label(0,$i,$i,'black','left','middle','large'));
                    $gr->lb( new Label(0,$ymax,'y ','black','center','right','large'));
                }
                $gr->moveTo(0,0);
                $gr->arrowTo($xmin,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo($xmax-($xmax-$xmin)/240,0,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymin+($ymax-$ymin)/240,'black',1);
                $gr->moveTo(0,0);
                $gr->arrowTo(0,$ymax,'black',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($start+100/($m**2+1)),
                    Real($f->eval(x=>$start+100/($m**2+1))),
                    'blue',1);
                $gr->moveTo($h,$k);
                $gr->arrowTo(
                    Real($stop-100/($m**2+1)),
                    Real($f->eval(x=>$stop-100/($m**2+1))),
                    'blue',1);
                $gr->stamps( closed_circle($h,$k,'blue') );
                $gr->stamps( closed_circle($h2,$k2,'blue') );
                if ($m > 0 and $h > 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','right','bottom','large'));};
                if ($m > 0 and $h &lt; 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','left','top','large'));};
                if ($m &lt; 0 and $h > 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','right','top','large'));};
                if ($m &lt; 0 and $h &lt; 600) {$gr->lb( new Label($h,$k,"($h,$k)",'black','left','bottom','large'));};
                if ($m > 0 and $h2 > 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','right','bottom','large'));};
                if ($m > 0 and $h2 &lt; 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','left','top','large'));};
                if ($m &lt; 0 and $h2 > 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','right','top','large'));};
                if ($m &lt; 0 and $h2 &lt; 600) {$gr->lb( new Label($h2,$k2,"($h2,$k2)",'black','left','bottom','large'));};
                parser::Assignment->Allow;
                Context()->variables->add(y=>'Real');
                $answer = OneOf(Formula("y = $f"),Formula("y = $m(x-$h2)+$k2"));
                $evaluator = $answer -> cmp(
                   checker=>sub{
                      my ( $correct, $student, $ansHash ) = @_;
                      return 0 if $ansHash->{isPreview} || $correct != $student;
                      $student = $ansHash->{student_formula};
                      $correct = $correct->{original_formula} if defined $correct->{original_formula};
                      $student = Formula("$student"); $correct = Formula("$correct");
                      return 0 unless ($correct == $student);
                      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
                      delete $correct->{test_values};
                      delete $student->{test_values};
                      my $OK = (($correct == $student) or ($student == $correct));
                      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
                      Value::Error("Your answer is an eqation for the line, but it is not in point-slope form using the indicated point.") unless $OK;
                      return $OK;
                });
            </pg-code>
            </setup>
            <statement>
              <p permid="YNO">
                Determine the point-slope form of the linear equation from its graph.
              </p>

              <sidebyside widths="40%" permid="VbX">
                <image pg-name="$gr" />
              </sidebyside>

              <p permid="EUX">
                <var name="$answer" evaluator="$evaluator" width="20" />
              </p>
            </statement>
            <solution permid="NLT">
              <p permid="PPB">
                The slope is <m><var name="$m" /></m> and the point <m>(<var name="$h" />,<var name="$k" />)</m> is on the graph of this line,
                so its equation can be written in point-slope form as <m><var name="$answer" /></m>.
              </p>
            </solution>
        </webwork>
      </exercise>

    </exercisegroup>
    <exercisegroup cols="2" permid="ZbW">

      <exercise permid="gUQ">
        <statement>
          <p permid="lcg">
            Graph the linear equation <m>y=-\frac{8}{3}(x-4)-5</m> by identifying the slope and one point on this line.
          </p>
        </statement>
        <answer permid="aal">
          <sidebyside permid="Bjg">

            <image permid="Ezy">

            <latex-image>
                <![CDATA[\begin{tikzpicture}
                    \begin{axis}[]
                        \addplot[primarycurve, domain=-0.5:4.75]{-8/3*(x-4)-5};
                        \addplot[soliddot] coordinates {(4,-5)};
                    \end{axis}
                \end{tikzpicture}
                ]]>
            </latex-image>
            </image>

          </sidebyside>
        </answer>
        <solution permid="tTc">
          <p permid="vWK">
            The slope is <m>-\frac{8}{3}</m> and the point <m>(4,-5)</m> is on the graph of this line.
          </p>

          <figure permid="cdT">
            <caption>A graph of a line.</caption>
            <image permid="Hue">

                    <latex-image>
                        <![CDATA[\begin{tikzpicture}
                            \begin{axis}[]
                    \addplot[primarycurve, domain=-0.5:4.75]{-8/3*(x-4)-5};
                    \addplot[soliddot] coordinates {(4,-5)};
                \end{axis}
            \end{tikzpicture}
            ]]>
            </latex-image>
            </image>

          </figure>
        </solution>
      </exercise>

      <exercise permid="NbZ">
        <statement>
          <p permid="Rjp">
            Graph the linear equation <m>y=\frac{5}{7}(x+3)+2</m> by identifying the slope and one point on this line.
          </p>
        </statement>
        <answer permid="moD">
          <sidebyside permid="hqp">

            <image permid="kGH">

            <latex-image>
                <![CDATA[\begin{tikzpicture}
                    \begin{axis}[]
                        \addplot[primarycurve, domain=-7:4]{5/7*(x+3)+2};
                        \addplot[soliddot] coordinates {(-3,2)};
                    \end{axis}
                \end{tikzpicture}
                ]]>
            </latex-image>
            </image>

          </sidebyside>
        </answer>
        <solution permid="Ghu">
          <p permid="Ilc">
            The slope is <m>\frac{5}{7}</m> and the point <m>(-3,2)</m> is on the graph of this line.
          </p>

          <figure permid="osl">
            <caption>A graph of a line.</caption>
            <image permid="nBn">

                    <latex-image>
                        <![CDATA[\begin{tikzpicture}
                            \begin{axis}[]
                    \addplot[primarycurve, domain=-7:4]{5/7*(x+3)+2};
                    \addplot[soliddot] coordinates {(-3,2)};
                \end{axis}
            \end{tikzpicture}
            ]]>
            </latex-image>
            </image>

          </figure>
        </solution>
      </exercise>

      <exercise permid="tji">
        <statement>
          <p permid="xqy">
            Graph the linear equation <m>y=\frac{3}{4}(x+2)+1</m> by identifying the slope and one point on this line.
          </p>
        </statement>
        <answer permid="yCV">
          <sidebyside permid="Nxy">

            <image permid="QNQ">

            <latex-image>
                <![CDATA[\begin{tikzpicture}
                    \begin{axis}[]
                        \addplot[primarycurve, domain=-7:6]{3/4*(x+2)+1};
                        \addplot[soliddot] coordinates {(-2,1)};
                    \end{axis}
                \end{tikzpicture}
                ]]>
            </latex-image>
            </image>

          </sidebyside>
        </answer>
        <solution permid="SvM">
          <p permid="Uzu">
            The slope is <m>\frac{3}{4}</m> and the point <m>(-2,1)</m> is on the graph of this line.
          </p>

          <figure permid="AGD">
            <caption>A graph of a line.</caption>
            <image permid="TIw">

                    <latex-image>
                        <![CDATA[\begin{tikzpicture}
                            \begin{axis}[]
                    \addplot[primarycurve, domain=-7:6]{3/4*(x+2)+1};
                    \addplot[soliddot] coordinates {(-2,1)};
                \end{axis}
            \end{tikzpicture}
            ]]>
            </latex-image>
            </image>

          </figure>
        </solution>
      </exercise>

      <exercise permid="Zqr">
        <statement>
          <p permid="dxH">
            Graph the linear equation <m>y=-\frac{5}{2}(x-1)-5</m> by identifying the slope and one point on this line.
          </p>
        </statement>
        <answer permid="KRn">
          <sidebyside permid="tEH">

            <image permid="wUZ">

            <latex-image>
                <![CDATA[\begin{tikzpicture}
                    \begin{axis}[]
                        \addplot[primarycurve, domain=-3:2.6]{-5/2*(x-1)-3};
                        \addplot[soliddot] coordinates {(1,-3)};
                    \end{axis}
                \end{tikzpicture}
                ]]>
            </latex-image>
            </image>

          </sidebyside>
        </answer>
        <solution permid="eKe">
          <p permid="gNM">
            The slope is <m>-\frac{5}{2}</m> and the point <m>(1,-3)</m> is on the graph of this line.
          </p>

          <figure permid="MUV">
            <caption>A graph of a line.</caption>
            <image permid="zPF">

                    <latex-image>
                        <![CDATA[\begin{tikzpicture}
                            \begin{axis}[]
                    \addplot[primarycurve, domain=-3:2.6]{-5/2*(x-1)-3};
                    \addplot[soliddot] coordinates {(1,-3)};
                \end{axis}
            \end{tikzpicture}
            ]]>
            </latex-image>
            </image>

          </figure>
        </solution>
      </exercise>

      <exercise permid="FxA">
        <statement>
          <p permid="JEQ">
            Graph the linear equation <m>y=-3(x-9)+4</m> by identifying the slope and one point on this line.
          </p>
        </statement>
        <answer permid="XfF">
          <sidebyside permid="ZLQ">

            <image permid="dci">

            <latex-image>
                <![CDATA[\begin{tikzpicture}
                    \begin{axis}[xmin=-50,xmax=50,
                                ymin=-50,ymax=50,
                                xtick={-40,-30,...,40},
                                ytick={-40,-30,...,40},
                                minor xtick={},
                                minor ytick={},
                                ]
                        \addplot[primarycurve, domain=-6.333:27]{-3*(x-9)+4};
                        \addplot[soliddot] coordinates {(9,4)};
                    \end{axis}
                \end{tikzpicture}
                ]]>
            </latex-image>
            </image>

          </sidebyside>
        </answer>
        <solution permid="qYw">
          <p permid="tce">
            The slope is <m>-3</m> and the point <m>(9,4)</m> is on the graph of this line.
          </p>

          <figure permid="Zjn">
            <caption>A graph of a line.</caption>
            <image permid="fWO">

                    <latex-image>
                        <![CDATA[\begin{tikzpicture}
                \begin{axis}[xmin=-50,xmax=50,
                            ymin=-50,ymax=50,
                            xtick={-40,-30,...,40},
                            ytick={-40,-30,...,40},
                            minor xtick={},
                            minor ytick={},
                            ]
                    \addplot[primarycurve, domain=-6.333:27]{-3*(x-9)+4};
                    \addplot[soliddot] coordinates {(9,4)};
                \end{axis}
            \end{tikzpicture}
            ]]>
            </latex-image>
            </image>

          </figure>
        </solution>
      </exercise>

      <exercise permid="lEJ">
        <statement>
          <p permid="pLZ">
            Graph the linear equation <m>y=7(x+3)-10</m> by identifying the slope and one point on this line.
          </p>
        </statement>
        <answer permid="jtX">
          <sidebyside permid="FSZ">

            <image permid="Jjr">

            <latex-image>
                <![CDATA[\begin{tikzpicture}
                    \begin{axis}[xmin=-50,xmax=50,
                                ymin=-50,ymax=50,
                                xtick={-40,-30,...,40},
                                ytick={-40,-30,...,40},
                                minor xtick={},
                                minor ytick={},
                                ]
                        \addplot[primarycurve, domain=-8.714:5.571]{7*(x+3)-10};
                        \addplot[soliddot] coordinates {(-3,-10)};
                    \end{axis}
                \end{tikzpicture}
                ]]>
            </latex-image>
            </image>

          </sidebyside>
        </answer>
        <solution permid="DmO">
          <p permid="Fqw">
            The slope is <m>7</m> and the point
            <m>(-3,-10)</m> is on the graph of this line.
          </p>

          <figure permid="lxF">
            <caption>A graph of a line.</caption>
            <image permid="MdX">

                    <latex-image>
                        <![CDATA[\begin{tikzpicture}
                \begin{axis}[xmin=-50,xmax=50,
                            ymin=-50,ymax=50,
                            xtick={-40,-30,...,40},
                            ytick={-40,-30,...,40},
                            minor xtick={},
                            minor ytick={},
                            ]
                    \addplot[primarycurve, domain=-8.714:5.571]{7*(x+3)-10};
                    \addplot[soliddot] coordinates {(-3,-10)};
                \end{axis}
            \end{tikzpicture}
            ]]>
            </latex-image>
            </image>

          </figure>
        </solution>
      </exercise>

      <exercise permid="RLS">
        <statement>
          <p permid="VTi">
            Graph the linear equation <m>y=8(x+12)-20</m> by identifying the slope and one point on this line.
          </p>
        </statement>
        <answer permid="vIp">
          <sidebyside permid="mai">

            <image permid="pqA">

            <latex-image>
                <![CDATA[\begin{tikzpicture}
                    \begin{axis}[xmin=-100,xmax=100,
                                ymin=-100,ymax=100,
                                xtick={-80,-60,...,80},
                                ytick={-80,-60,...,80},
                                minor xtick={},
                                minor ytick={},
                                ]
                        \addplot[primarycurve, domain=-22:3]{8*(x+12)-20};
                        \addplot[soliddot] coordinates {(-12,-20)};
                    \end{axis}
                \end{tikzpicture}
                ]]>
            </latex-image>
            </image>

          </sidebyside>
        </answer>
        <solution permid="PBg">
          <p permid="REO">
            The slope is <m>8</m> and the point
            <m>(-12,-20)</m> is on the graph of this line.
          </p>

          <figure permid="xLX">
            <caption>A graph of a line.</caption>
            <image permid="slg">

                    <latex-image>
                        <![CDATA[\begin{tikzpicture}
                \begin{axis}[xmin=-100,xmax=100,
                            ymin=-100,ymax=100,
                            xtick={-80,-60,...,80},
                            ytick={-80,-60,...,80},
                            minor xtick={},
                            minor ytick={},
                            ]
                    \addplot[primarycurve, domain=-22:3]{8*(x+12)-20};
                    \addplot[soliddot] coordinates {(-12,-20)};
                \end{axis}
            \end{tikzpicture}
            ]]>
            </latex-image>
            </image>

          </figure>
        </solution>
      </exercise>

      <exercise permid="xTb">
        <statement>
          <p permid="Car">
            Graph the linear equation <m>y=-5(x-20)-70</m> by identifying the slope and one point on this line.
          </p>
        </statement>
        <answer permid="HWH">
          <sidebyside permid="Shr">

            <image permid="VxJ">

            <latex-image>
                <![CDATA[\begin{tikzpicture}
                    \begin{axis}[xmin=-100,xmax=100,
                                ymin=-100,ymax=100,
                                xtick={-80,-60,...,80},
                                ytick={-80,-60,...,80},
                                minor xtick={},
                                minor ytick={},
                                ]
                        \addplot[primarycurve, domain=-14:26]{-5*(x-20)-70};
                        \addplot[soliddot] coordinates {(20,-70)};
                    \end{axis}
                \end{tikzpicture}
                ]]>
            </latex-image>
            </image>

          </sidebyside>
        </answer>
        <solution permid="bPy">
          <p permid="dTg">
            The slope is <m>-5</m> and the point
            <m>(20,-70)</m> is on the graph of this line.
          </p>

          <figure permid="Kap">
            <caption>A graph of a line.</caption>
            <image permid="Ysp">

                    <latex-image>
                        <![CDATA[\begin{tikzpicture}
                \begin{axis}[xmin=-100,xmax=100,
                            ymin=-100,ymax=100,
                            xtick={-80,-60,...,80},
                            ytick={-80,-60,...,80},
                            minor xtick={},
                            minor ytick={},
                            ]
                    \addplot[primarycurve, domain=-14:26]{-5*(x-20)-70};
                    \addplot[soliddot] coordinates {(20,-70)};
                \end{axis}
            \end{tikzpicture}
            ]]>
            </latex-image>
            </image>

          </figure>
        </solution>
      </exercise>

    </exercisegroup>
    <exercisegroup permid="Fjf">
      <title>Applications</title>
            <!-- ordering intentional -->
      <exercise permid="eak">
        <webwork source="BasicAlgebra/LinearEquationApplications/FindPSEquationApplication50.pg" />
      </exercise>

      <exercise permid="Kht">
        <webwork source="BasicAlgebra/LinearEquationApplications/FindPSEquationApplication60.pg" />
      </exercise>

      <exercise permid="qoC">
        <webwork source="BasicAlgebra/LinearEquationApplications/FindPSEquationApplication70.pg" />
      </exercise>

      <exercise permid="WvL">
        <webwork source="BasicAlgebra/LinearEquationApplications/FindPSEquationApplication80.pg" />
      </exercise>

      <exercise permid="CCU">
        <webwork source="BasicAlgebra/LinearEquationApplications/FindPSEquationApplication20.pg" />
      </exercise>

      <exercise permid="iKd">
        <webwork source="BasicAlgebra/LinearEquationApplications/FindPSEquationApplication10.pg" />
      </exercise>

      <exercise permid="ORm">
        <webwork source="BasicAlgebra/LinearEquationApplications/FindPSEquationApplication40.pg" />
      </exercise>

      <exercise permid="uYv">
        <webwork source="BasicAlgebra/LinearEquationApplications/FindPSEquationApplication30.pg" />
      </exercise>

    </exercisegroup>
  </exercises>
</section>

