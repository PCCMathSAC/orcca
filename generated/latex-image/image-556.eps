%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 23.09.0 (http://poppler.freedesktop.org)
%%Creator:  XeTeX output 2023.09.22:1047
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 154 391 200 735
%%HiResBoundingBox: 154 391 200 735
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font MIRHYV+LMRoman10-Regular
16 dict begin
/FontName /MIRHYV+LMRoman10-Regular_00 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-430 -290 1417 1127] def
/PaintType 0 def
/Encoding 256 array
dup 0 /c00 put
dup 1 /c01 put
dup 2 /c02 put
dup 3 /c03 put
dup 4 /c04 put
dup 5 /c05 put
dup 6 /c06 put
dup 7 /c07 put
dup 8 /c08 put
dup 9 /c09 put
dup 10 /c0a put
dup 11 /c0b put
dup 12 /c0c put
dup 13 /c0d put
dup 14 /c0e put
dup 15 /c0f put
dup 16 /c10 put
dup 17 /c11 put
dup 18 /c12 put
dup 19 /c13 put
dup 20 /c14 put
dup 21 /c15 put
dup 22 /c16 put
dup 23 /c17 put
dup 24 /c18 put
dup 25 /c19 put
dup 26 /c1a put
dup 27 /c1b put
dup 28 /c1c put
dup 29 /c1d put
dup 30 /c1e put
dup 31 /c1f put
dup 32 /c20 put
dup 33 /c21 put
dup 34 /c22 put
dup 35 /c23 put
dup 36 /c24 put
dup 37 /c25 put
dup 38 /c26 put
dup 39 /c27 put
dup 40 /c28 put
dup 41 /c29 put
dup 42 /c2a put
dup 43 /c2b put
dup 44 /c2c put
dup 45 /c2d put
dup 46 /c2e put
dup 47 /c2f put
dup 48 /c30 put
dup 49 /c31 put
dup 50 /c32 put
dup 51 /c33 put
dup 52 /c34 put
dup 53 /c35 put
dup 54 /c36 put
dup 55 /c37 put
dup 56 /c38 put
dup 57 /c39 put
dup 58 /c3a put
dup 59 /c3b put
dup 60 /c3c put
dup 61 /c3d put
dup 62 /c3e put
dup 63 /c3f put
dup 64 /c40 put
dup 65 /c41 put
dup 66 /c42 put
dup 67 /c43 put
dup 68 /c44 put
dup 69 /c45 put
dup 70 /c46 put
dup 71 /c47 put
dup 72 /c48 put
dup 73 /c49 put
dup 74 /c4a put
dup 75 /c4b put
dup 76 /c4c put
dup 77 /c4d put
dup 78 /c4e put
dup 79 /c4f put
dup 80 /c50 put
dup 81 /c51 put
dup 82 /c52 put
dup 83 /c53 put
dup 84 /c54 put
dup 85 /c55 put
dup 86 /c56 put
dup 87 /c57 put
dup 88 /c58 put
dup 89 /c59 put
dup 90 /c5a put
dup 91 /c5b put
dup 92 /c5c put
dup 93 /c5d put
dup 94 /c5e put
dup 95 /c5f put
dup 96 /c60 put
dup 97 /c61 put
dup 98 /c62 put
dup 99 /c63 put
dup 100 /c64 put
dup 101 /c65 put
dup 102 /c66 put
dup 103 /c67 put
dup 104 /c68 put
dup 105 /c69 put
dup 106 /c6a put
dup 107 /c6b put
dup 108 /c6c put
dup 109 /c6d put
dup 110 /c6e put
dup 111 /c6f put
dup 112 /c70 put
dup 113 /c71 put
dup 114 /c72 put
dup 115 /c73 put
dup 116 /c74 put
dup 117 /c75 put
dup 118 /c76 put
dup 119 /c77 put
dup 120 /c78 put
dup 121 /c79 put
122 1 255 { 1 index exch /.notdef put } for
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FA6B0AF338BD4E48F07258C8AB349EE790EF474E6D540CD5017BDA227D234CDE
C5B56059723DE2D25E43567EA970111F9099EFA91396AD179BEECC68CE62455C
2A12EE48EDABA012CC8A5481822B2C11FC74EEBE5D3DA05BE21FC8AE2FEFE4AD
983506712B8ACDE3A061C03B58F71C5891EA5110035AE6784194758ACE2015E6
17BB845C059ABEE6B1082AFBDC2BB42FFCAEEE0B59841E7C9214F9096CA6CBA9
142671BB17558E33C4474A06282677E09E3885A1C003C2A6DD3A6F88E1A52A73
5A1054331B8A1523EEBF4E5016375DD16970A3BD4A08CEFA9C5CE9AF8AB63E5F
4CB0CADD898F710C2496E4ED4A09D54FA74709C83B0824F96BC972F4FD3D6E6F
0154938997BD3BCC0C7675FF515827033C405D61C353DC2E204B80E6D294B4E3
3710F009F10A04C197F1683B18D7E329562BECCA72B743C987301B242A62E410
4A796C0FE8E3292514D09EC5CA2BC5EC3B70DC9F1D48303AA3B38E3DD77C4305
A08C5EF6E53F94CE19CE435545FA2538F493FB42D6AF87DC9AAABBB7D5853887
8B12FCE0676837022B709819A783C5462C962FE106984C152607C2F2505A606B
2EFC82A47FB7FD3C0BABF2054C733B9995D0237D810DB38D7EF600BF0634EBB9
D6ECBCD1A0E62D5824E33C411EA1A18D0FD014B768CB0634506A922D05C8EB14
5A9AD6D9514847CBA8459944232C5C316A1C44D88645121FBB292D8E5592ADD4
037CD7F9636F45B0DE2F1BB91DFF5DE339262CC1D66C99A198D303E12B4FAB0F
C676A83DD42E8DC8847B4873D3CA48D6426497E04BBFD6DC5436FFC4B84BFB8E
01B607EE0BFFBE35FEFA7F4DB39384E4A98AE06FC35A6622CCD8E5CAAFF435FA
6C51C41C35861742901AC020E9586379C730E90EC7868E45C1A53FFBDA1C91E0
F375D7C3D4819385889825A34EC14B51E023FE8D5F107CB37EDBEDA3351B267D
F520172985E3675C5D91AC36F27179FA27B6ED770C0A4BB26EABDA1F5518B103
B5C1B0C8B9882F6FEDBC14CAAFCBE5B43D8729D90690AD8F784D446619936FBF
45B5049B6FB8E76144682B706ADF8CDE0B6DB5DBFF81990C962751D3BA4C3530
E9009B5DAB29377384E334D7FDFAAAA274B5855F1987192478DDFF0099D4FF5D
6C5FA63388E0A7EE34F001D5E460AF870519457FFB1A142180C594308B5D7C19
05DFBC7C1986E0DF32DCC8918E78F95CB69CB871CB82CACEAD3036B7490AF48C
EF3B51F1D80CF44F50284EDA11CBE7FDE43459CCE1A009C41A3CE53468EB9C49
EF88CD44DEE7CA906EA3C6DE9FB6C91B30D0B64ECACF1D1122BF3ED3E1D5951C
A52B258DF4D50B8A706624A9742D976901B69117BF7C452973BEC2CB35DA199D
0CB4961FC49DF37608E125242CA32D9ED163A43B98BC40EBB027032DC0F510CA
FADD7CEBF87D0A26CC7A9DB6703F34CD68CFEDBD7ED374755CB0B85657D3E112
D572718ED337F161F1CBEF3ABE08EF58DB25447A8C4FC7F32DC92E46C9C6BD88
F9F61A43D4BEC51739CAE2D347E83029F3BEC678938F39BAAECB9F689B003799
687AB35F227A837ED630E0EC2C665938F2BB91A4F34AE17BF4D974159AB9FD13
B8E497C2FA089EF9E8E9CDC4B70882F327BA6DE4C13E1AAF13E09B8F10CD3888
0D6314662929075A781F3522DAB82E692D95BB944C42F6C1000CFD29A4E58AE4
6F5F42F41233D645067AF825B8C9481FA40A6B48D6FE1C17DEE6B87CAAC9DB73
99466240DB73343FF604EE539325845140809F669F4073F766D93D6A5391666E
92D35836EC12537BDBBB67AE817A5269445A588D51B6551ACF9CEB52B3470A50
3AAC8EC663B6C8608799F7D25F4D89445971598E8C488C4F893EDCB37F82E427
531BB74546A7B9EB4B56F94CC37419CADE4AAB2713A1BA7F2C435EFBD5EECBA0
0EA8FA0AE060B4CA0E6AFBB9A796E45E1FBDBB43FC002CF715E936304115EA9D
1D02DF7E4EA5E7199F0600591BBC8DE515E47D7B744DBC3E45F28658E1F3AFD0
0F6A736BEDAEAE5DEFC08EA19D692E72FC8FC8DA389419C9AD1344E5A1FF32F8
B997E9E96F8BDC2906386A7D827F02B2465850F071EDF9526AB8B3C827F2AEA7
CFB1E757D2BFBF72A101062100C02C8548D2B80D9880F07E057846E67039488E
5B7B381A07FCC38DEAAB4CB8F1DDE9F13740FB5C83B0C8393BE719AC7F38D1F1
3E9D2FA4B7BC6E52F217B97ED1B7916DF67A63F149465765FC8C21FF9C7902C3
03F160573CB54986EFE10E9FBE8830895BDB5A5F653D2DF3CF61AD72254990F6
415F254E00616B706A910A5B910EBFD1882E634EB3A834159F906EDC4C0A8338
F7ECB682926CBE5EA992A44949109FAB327AC031CFFC4F58079C04AA03E7F555
0C89C29FA5E0313BAC66830CFCA72773EDAB21981E89D274AE03031A1D548D6F
2B15C35B35E92A6F53B0AC1A17BC4253AF2F8D70457DABC8EC58A1F056C42AF2
4B8D65C5B26CCFDC4B5D01E22CF4DCE1ED8F3EF8755E4C7918414CED6A96A7E9
912E4693894997AFFC2B5E664B33A87DC5CC5229E4A047C9BE105C459E50A78D
96628210D0AF31477718A10865D3E92AA8E0DE4CB32DFEF6579968B53BE9444E
FB210C84394B72FC47EA73D10CB224CC6F8AADFB7BBC8F3270917C8640939363
C354E8016015D3E6DE9C7797C6AB24EDA3F65B521F12FD11CA4EB0A7D3800518
51BE2DA54DE2407D134496B6D5CEE52CAD9A76A13ECCD48A062DB4027973608F
C3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
16 dict begin
/FontName /MIRHYV+LMRoman10-Regular def
/FontType 0 def
/FontMatrix [1 0 0 1 0 0] def
/FMapType 2 def
/Encoding [
0
] def
/FDepVector [
/MIRHYV+LMRoman10-Regular_00 findfont
] def
FontName currentdict end definefont pop
%%EndResource
/F7_0 /MIRHYV+LMRoman10-Regular 0 pdfMakeFont16
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
154 391 46 344 re
W
q
q
[1 0 0 1 72 720] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1.00006 0 0 1.00008 -0.005 0.026] cm
q
[1 0 0 1 83.893 -326.78] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0.3985 w
q
Q
q
q
1.99255 w
/DeviceRGB {} cs
[0.962 0.9047 0.9059] sc
0 0 42.5202 340.16171 re
f
0 0 42.5202 340.16171 re
S
Q
0 28.3468 m
8.50412 28.3468 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[0 -1 1 0 422.697 -212.049] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
83.893 -326.78 Td
/F7_0 9.9626 Tf
(\000R)
[4.9813
0] Tj
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
Q
Q
Q
Q
Q
0 56.69362 m
8.50412 56.69362 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[0 -1 1 0 422.697 -183.702] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
83.893 -326.78 Td
/F7_0 9.9626 Tf
(\000k)
[4.9813
0] Tj
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
Q
Q
Q
Q
Q
0 85.04042 m
8.50412 85.04042 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[0 -1 1 0 422.916 -155.356] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
83.893 -326.78 Td
/F7_0 9.9626 Tf
(\000j)
[4.9813
0] Tj
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
Q
Q
Q
Q
Q
0 113.38724 m
8.50412 113.38724 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[0 -1 1 0 422.697 -127.009] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
83.893 -326.78 Td
/F7_0 9.9626 Tf
(\0009)
[4.9813
0] Tj
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
Q
Q
Q
Q
Q
0 141.73404 m
8.50412 141.73404 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[0 -1 1 0 422.916 -98.662] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
83.893 -326.78 Td
/F7_0 9.9626 Tf
(\0008)
[4.9813
0] Tj
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
Q
Q
Q
Q
Q
0 170.08086 m
8.50412 170.08086 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[0 -1 1 0 422.916 -70.315] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
83.893 -326.78 Td
/F7_0 9.9626 Tf
(\000e)
[4.9813
0] Tj
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
Q
Q
Q
Q
Q
0 198.42766 m
8.50412 198.42766 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[0 -1 1 0 422.916 -41.968] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
83.893 -326.78 Td
/F7_0 9.9626 Tf
(\000d)
[4.9813
0] Tj
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
Q
Q
Q
Q
Q
0 226.77448 m
8.50412 226.77448 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[0 -1 1 0 422.916 -13.622] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
83.893 -326.78 Td
/F7_0 9.9626 Tf
(\0003)
[4.9813
0] Tj
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
Q
Q
Q
Q
Q
0 255.12128 m
8.50412 255.12128 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[0 -1 1 0 422.916 14.725] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
83.893 -326.78 Td
/F7_0 9.9626 Tf
(\000N)
[4.9813
0] Tj
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
Q
Q
Q
Q
Q
0 283.4681 m
8.50412 283.4681 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[0 -1 1 0 422.916 45.563] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
83.893 -326.78 Td
/F7_0 9.9626 Tf
(\000R\000y)
[4.9813
0
4.9813
0] Tj
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
Q
Q
Q
Q
Q
0 311.8149 m
8.50412 311.8149 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[0 -1 1 0 422.697 73.909] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
83.893 -326.78 Td
/F7_0 9.9626 Tf
(\000R\000R)
[4.9813
0
4.9813
0] Tj
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 83.893 -326.78] cm
Q
Q
Q
Q
Q
0 14.17339 m
5.66927 14.17339 l
S
0 42.5202 m
5.66927 42.5202 l
S
0 70.867 m
5.66927 70.867 l
S
0 99.21382 m
5.66927 99.21382 l
S
0 127.56062 m
5.66927 127.56062 l
S
0 155.90744 m
5.66927 155.90744 l
S
0 184.25424 m
5.66927 184.25424 l
S
0 212.60106 m
5.66927 212.60106 l
S
0 240.94788 m
5.66927 240.94788 l
S
0 269.29468 m
5.66927 269.29468 l
S
0 297.6415 m
5.66927 297.6415 l
S
0 325.9883 m
5.66927 325.9883 l
S
0 7.08669 m
2.83484 7.08669 l
S
0 21.2601 m
2.83484 21.2601 l
S
0 35.43349 m
2.83484 35.43349 l
S
0 49.6069 m
2.83484 49.6069 l
S
0 63.7803 m
2.83484 63.7803 l
S
0 77.95372 m
2.83484 77.95372 l
S
0 92.1271 m
2.83484 92.1271 l
S
0 106.30052 m
2.83484 106.30052 l
S
0 120.47392 m
2.83484 120.47392 l
S
0 134.64734 m
2.83484 134.64734 l
S
0 148.82074 m
2.83484 148.82074 l
S
0 162.99414 m
2.83484 162.99414 l
S
0 177.16754 m
2.83484 177.16754 l
S
0 191.34096 m
2.83484 191.34096 l
S
0 205.51436 m
2.83484 205.51436 l
S
0 219.68776 m
2.83484 219.68776 l
S
0 233.86116 m
2.83484 233.86116 l
S
0 248.03458 m
2.83484 248.03458 l
S
0 262.20798 m
2.83484 262.20798 l
S
0 276.38138 m
2.83484 276.38138 l
S
0 290.55478 m
2.83484 290.55478 l
S
0 304.7282 m
2.83484 304.7282 l
S
0 318.9016 m
2.83484 318.9016 l
S
0 333.075 m
2.83484 333.075 l
S
Q
Q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font MIRHYV+LMRoman10-Regular
%%EOF
